[
    {
        "Prompt ID": 1,
        "Resource": "aws_cloudwatch_log_group, aws_cloudwatch_log_resource_policy, aws_route53_query_log, aws_route53_zone, aws_iam_policy_document",
        "Prompt": "Configure a query log that can create a log stream and put log events using Route 53 resources. Name the zone \"primary\", the cloudwatch log group \"aws_route53_example_com\", and the cloudwatch log resource policy \"route53-query-logging-policy\"",
        "Rego Intent": "package terraform.validation\n\ndefault is_configuration_valid = false\n\ndefault is_valid_r53_zone = false\n\ndefault is_valid_cloudwatch_log_group = false\n\ndefault is_valid_cloudwatch_log_resource_policy = false\n\ndefault is_valid_route53_query_log = false\n\n# Validate aws_route53_zone resource\nis_valid_r53_zone {\n    some i\n    resource := input.configuration.root_module.resources[i]\n    resource.type == \"aws_route53_zone\"\n    resource.expressions.name\n}\n\nis_valid_cloudwatch_log_group {\n    some i\n    resource := input.configuration.root_module.resources[i]\n    resource.type == \"aws_cloudwatch_log_group\"\n}\n\nis_valid_cloudwatch_log_resource_policy {\n    some i\n    resource := input.resource_changes[i]\n    resource.type == \"aws_cloudwatch_log_resource_policy\"\n    contains(resource.change.after.policy_document, \"logs:PutLogEvents\")\n    contains(resource.change.after.policy_document, \"logs:CreateLogStream\")\n    resource.change.after.policy_name\n}\n\nis_valid_route53_query_log {\n    some i\n    resource := input.configuration.root_module.resources[i]\n    resource.type == \"aws_route53_query_log\"\n    resource.expressions.zone_id.references[0] == \"aws_route53_zone.primary.zone_id\"\n    resource.expressions.cloudwatch_log_group_arn.references[0] == \"aws_cloudwatch_log_group.aws_route53_example_com.arn\"\n    resource.depends_on[0] == \"aws_cloudwatch_log_resource_policy.route53-query-logging-policy\"\n}\n\n# Combine all checks into a final rule\nis_configuration_valid {\n    is_valid_r53_zone\n    is_valid_cloudwatch_log_group\n    is_valid_cloudwatch_log_resource_policy\n    is_valid_route53_query_log\n}",
        "Difficulty": 5,
        "Reference Output": "terraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~> 5.75\"\n    }\n  }\n\n  required_version = \"~> 1.9.8\"\n}\n\nprovider \"aws\" {\n  region  = \"us-east-1\"\n  profile = \"admin-1\"\n\n  assume_role {\n    role_arn = \"arn:aws:iam::590184057477:role/yicun-iac\"\n  }\n}\n\n\nresource \"aws_route53_zone\" \"primary\" {\n  name = \"example53.com\"\n}\n\nresource \"aws_cloudwatch_log_group\" \"aws_route53_example_com\" {\n  name              = \"/aws/route53/${aws_route53_zone.primary.name}\"\n  retention_in_days = 30\n}\n\n# Example CloudWatch log resource policy to allow Route53 to write logs\n# to any log group under /aws/route53/*\n\ndata \"aws_iam_policy_document\" \"route53-query-logging-policy\" {\n  statement {\n    actions = [\n      \"logs:CreateLogStream\",\n      \"logs:PutLogEvents\",\n    ]\n\n    resources = [\"arn:aws:logs:*:*:log-group:/aws/route53/*\"]\n\n    principals {\n      identifiers = [\"route53.amazonaws.com\"]\n      type        = \"Service\"\n    }\n  }\n}\n\nresource \"aws_cloudwatch_log_resource_policy\" \"route53-query-logging-policy\" {\n  policy_document = data.aws_iam_policy_document.route53-query-logging-policy.json\n  policy_name     = \"route53-query-logging-policy\"\n}\n\nresource \"aws_route53_query_log\" \"example_com\" {\n  depends_on = [aws_cloudwatch_log_resource_policy.route53-query-logging-policy]\n\n  cloudwatch_log_group_arn = aws_cloudwatch_log_group.aws_route53_example_com.arn\n  zone_id                  = aws_route53_zone.primary.zone_id\n}",
        "Intent": "Has one \"aws_route53_zone\" resource\n    with \"name\"\n\nHas one \"aws_cloudwatch_log_group\" resource\n\nHas one \"aws_cloudwatch_log_resource_policy\" resource\n    with \"policy_document\" enabling \"logs:CreateLogStream\" and \"logs:PutLogEvents\"\n    with \"policy_name\"\n\nHas one \"aws_route53_query_log\" resource\n    with \"cloudwatch_log_group_arn\" referencing the \"aws_cloudwatch_log_group\" resource\n    with \"zone_id\" referencing the \"aws_route53_zone\" resource\n    and depends on the \"aws_cloudwatch_log_resource_policy\" resource",
        "Generated Code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\nresource \"aws_db_instance\" \"example\" {\n  identifier = \"metricbeat-mysql-example-${random_id.hex}\"\n  instance_class = \"var.db_instance_class\"\n  engine = var.db_engine\n  db_name = var.db_name\n\n  username = var.db_username\n  password = var.db_password\n  skip_final_snapshot = true\n\n  skip_final_snapshot_position = var.skip_final_snapshot\n}\n\nresource \"random_id\" \"hex\" {\n  output = var.random_id\n  prefix = \"_\"\n  byte_length = \"2\"\n}\n\nresource \"aws_efs_file_system\" \"test\" {\n  creation_token          = \"1234567890abcdefgh\"\n  cleanup_token           = \"0987654321\"\n\n  file_system_id = element(aws_efs_file_system.random_filesystem.*.id, count.index)\n}\n\nresource \"aws_vpc\" \"test\" {\n  cidr_block = \"10.0.0.0/16\"\n}\n\nresource \"aws_subnet\" \"test\" {\n  count = 2\n  vpc_id = aws_vpc.test.id\n  cidr_block = aws_subnet.example.cidr_block\n\n  availability_zone = element(var.az_list, count.index)\n}\n\nresource \"aws_suptney_time_group\" \"example\" {\n  for_each = toset(var.table_types)\n\n  time_metrics_interval = each.key\n  resource_metrics_interval = each.key\n}\n\noutput \"table_type\" {\n  value = each.value\n}\n\nresource \"aws_route53_zone\" \"test\" {\n  name = var.test_zone_name\n}\n\nresource \"random_filesystem\" \"example\" {\n  count = 2\n  availabilty_zones = [\"${aws_efs_file_system.test.id}\"]\n}\n\ndata \"aws_subnet\" \"example\" {\n  count = 2\n  vpc_id = aws_vpc.test.id\n  availability_zones = element(var.az_list, count.index)\n}\n\ndata \"aws_route53_zone\" \"test_zone_name\" {\n  domain_name = \"example.abc\"\n}\n\nresource \"aws_efs_mount_target\" \"test\" {\n  aws_efs_file_system_id = aws_efs_file_system.example[0].file_system_id\n  subnet_id             = element(data.aws_subnet.example.*.subnet_id, count.index)\n  security_groups       = [\n    aws_security_group.example[0].id\n  ]\n}\n\nresource \"aws_security_group\" \"rules\" {\n  name        = \"mongodb-sg\"\n  vpc_id = var.vpc_id\n  for_each = toset(var.sg_security_rules)\n\n  ingress {\n    from_port   = each.key\n    to_port     = each.key\n    protocol    = \"tcp\"\n    cidr_blocks = var.cidr_blocks\n\n    type = \"ingress\"\n    description = \"Allow ingress traffic\"\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = var.cidr_blocks\n\n    type = \"egress\"\n    description = \"Allow egress traffic\"\n  }\n\n  egress = {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = var.cidr_blocks\n\n    type = \"egress\"\n    description = \"Allow egress traffic\"\n  }\n\n}\n\nresource \"aws_cloudwatch_log_group\" \"example\" {\n  name = \"aws_route53_example_com\"\n  retention_in_days = 14\n}\n\nresource \"aws_cloudwatch_log_resource_policy\" \"example\" {\n  policy_name = \"route53-query-logging-policy\"\n  policy_document = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"logs:CreateLogStream\"\n        Effect = \"Allow\"\n        Resource = \"arn:aws:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:${aws_cloudwatch_log_group.example.name}:*\"\n      },\n      {\n        Action = \"logs:PutLogEvents\"\n        Effect = \"Allow\"\n        Resource = \"arn:aws:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:${aws_cloudwatch_log_group.example.name}:*\"\n      },\n    ]\n  })\n}\n\nresource \"aws_route53_query_log\" \"example\" {\n  cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n  zone_id                  = aws_route53_zone.primary.zone_id\n}\n\nvariable \"test_zone_name\" {\n  description = \"The name of the Route 53 zone\"\n  default     = \"primary\"\n}\n\nvariable \"db_instance_class\" {\n  description = \"The instance class of the RDS instance\"\n  default     = \"db.t2.micro\"\n}\n\nvariable \"db_engine\" {\n  description = \"The engine of the RDS instance\"\n  default     = \"mysql\"\n}\n\nvariable \"db_name\" {\n  description = \"The name of the RDS database\"\n  default     = \"metricbeattest\"\n}\n\nvariable \"db_username\" {\n  description = \"The username for the RDS instance\"\n  default     = \"foo\"\n}\n\nvariable \"db_password\" {\n  description = \"The password for the RDS instance\"\n  default     = \"random_password\"\n}\n\nvariable \"skip_final_snapshot\" {\n  description = \"Whether to skip the final snapshot\"\n  default     = true\n}\n\nvariable \"random_id\" {\n  description = \"The random ID for the RDS instance\"\n  default     = \"random_id\"\n}\n\nvariable \"vpc_id\" {\n  description = \"The VPC ID\"\n  default     = \"vpc-12345678\"\n}\n\nvariable \"az_list\" {\n  description = \"The list of availability zones\"\n  default     = [\"us-west-2a\", \"us-west-2b\"]\n}\n\nvariable \"table_types\" {\n  description = \"The list of table types\"\n  default     = [\"table1\", \"table2\"]\n}\n\nvariable \"sg_security_rules\" {\n  description = \"The list of security group rules\"\n  default     = [\"22\", \"80\", \"443\"]\n}\n\nvariable \"cidr_blocks\" {\n  description = \"The list of CIDR blocks\"\n  default     = [\"0.0.0.0/0\"]\n}\n\ndata \"aws_region\" \"current\" {}\ndata \"aws_caller_identity\" \"current\" {}\n```",
        "Validation Summary": {
            "status": "failed",
            "syntax_valid": false,
            "cis_compliant": false,
            "referenced_cis_controls": [],
            "issues": [
                "Terraform syntax validation failed",
                "CIS compliance validation failed",
                "Validation error: \u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported argument\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 19, in resource \"random_id\" \"hex\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  19:   \u001b[4moutput\u001b[0m      = var.random_id\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mAn argument named \"output\" is not expected here.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported argument\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 26, in resource \"aws_efs_file_system\" \"test\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  26:   \u001b[4mcleanup_token\u001b[0m  = \"0987654321\"\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mAn argument named \"cleanup_token\" is not expected here.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported argument\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 28, in resource \"aws_efs_file_system\" \"test\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  28:   \u001b[4mfile_system_id\u001b[0m = element(aws_efs_file_system.random_filesystem.*.id, count.index)\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mAn argument named \"file_system_id\" is not expected here.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 38, in resource \"aws_subnet\" \"test\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  38:   cidr_block = \u001b[4maws_subnet.example\u001b[0m.cidr_block\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA managed resource \"aws_subnet\" \"example\" has not been declared in the root\n\u001b[31m\u2502\u001b[0m \u001b[0mmodule.\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mDid you mean the data resource data.aws_subnet.example?\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mInvalid resource type\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 43, in resource \"aws_suptney_time_group\" \"example\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  43: resource \u001b[4m\"aws_suptney_time_group\"\u001b[0m \"example\" {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mThe provider hashicorp/aws does not support resource type\n\u001b[31m\u2502\u001b[0m \u001b[0m\"aws_suptney_time_group\".\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1meach.value cannot be used in this context\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 51, in output \"table_type\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  51:   value = \u001b[4meach.value\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA reference to \"each.value\" has been used in a context in which it is\n\u001b[31m\u2502\u001b[0m \u001b[0munavailable, such as when the configuration no longer contains the value in\n\u001b[31m\u2502\u001b[0m \u001b[0mits \"for_each\" expression. Remove this reference to each.value in your\n\u001b[31m\u2502\u001b[0m \u001b[0mconfiguration to work around this error.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mInvalid resource type\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 58, in resource \"random_filesystem\" \"example\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  58: resource \u001b[4m\"random_filesystem\"\u001b[0m \"example\" {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mThe provider hashicorp/random does not support resource type\n\u001b[31m\u2502\u001b[0m \u001b[0m\"random_filesystem\".\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported argument\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 66, in data \"aws_subnet\" \"example\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  66:   \u001b[4mavailability_zones\u001b[0m = element(var.az_list, count.index)\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mAn argument named \"availability_zones\" is not expected here. Did you mean\n\u001b[31m\u2502\u001b[0m \u001b[0m\"availability_zone\"?\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported argument\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 70, in data \"aws_route53_zone\" \"test_zone_name\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  70:   \u001b[4mdomain_name\u001b[0m = \"example.abc\"\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mAn argument named \"domain_name\" is not expected here.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported argument\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 92, in resource \"aws_security_group\" \"rules\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  92:     \u001b[4mtype\u001b[0m        = \"ingress\"\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mAn argument named \"type\" is not expected here.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mUnsupported block type\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 96, in resource \"aws_security_group\" \"rules\":\n\u001b[31m\u2502\u001b[0m \u001b[0m  96:   \u001b[4megress\u001b[0m {\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mBlocks of type \"egress\" are not expected here. Did you mean \"ingress\"?\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mIncorrect attribute value type\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 106, in resource \"aws_security_group\" \"rules\":\n\u001b[31m\u2502\u001b[0m \u001b[0m 106:   egress = \u001b[4m{\n\u001b[31m\u2502\u001b[0m \u001b[0m 107:     from_port   = 0\n\u001b[31m\u2502\u001b[0m \u001b[0m 108:     to_port     = 0\n\u001b[31m\u2502\u001b[0m \u001b[0m 109:     protocol    = \"-1\"\n\u001b[31m\u2502\u001b[0m \u001b[0m 110:     cidr_blocks = var.cidr_blocks\n\u001b[31m\u2502\u001b[0m \u001b[0m 111:     type        = \"egress\"\n\u001b[31m\u2502\u001b[0m \u001b[0m 112:     description = \"Allow egress traffic\"\n\u001b[31m\u2502\u001b[0m \u001b[0m 113:   }\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mInappropriate value for attribute \"egress\": set of object required.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n\u001b[31m\u2577\u001b[0m\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\u001b[0m  on main.tf line 144, in resource \"aws_route53_query_log\" \"example\":\n\u001b[31m\u2502\u001b[0m \u001b[0m 144:   zone_id                  = \u001b[4maws_route53_zone.primary\u001b[0m.zone_id\u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0m\n\u001b[31m\u2502\u001b[0m \u001b[0mA managed resource \"aws_route53_zone\" \"primary\" has not been declared in\n\u001b[31m\u2502\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u2575\u001b[0m\u001b[0m\n"
            ],
            "checkov_output_file": ""
        },
        "Compliance Report": "",
        "Timestamp": "2025-04-16T01:55:57.645029",
        "Strategy": "chain_of_thought"
    }
]