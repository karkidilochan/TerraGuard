{
  "check_type": "terraform",
  "results": {
    "passed_checks": [
      {
        "check_id": "CKV_AWS_386",
        "bc_check_id": null,
        "check_name": "Reduce potential for WhoAMI cloud image name confusion attack",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            93,
            "data \"aws_ami\" \"latest_amazon_linux_2\" {\n"
          ],
          [
            94,
            "  most_recent = true\n"
          ],
          [
            95,
            "  owners      = [\"amazon\"]\n"
          ],
          [
            96,
            "\n"
          ],
          [
            97,
            "  filter {\n"
          ],
          [
            98,
            "    name   = \"name\"\n"
          ],
          [
            99,
            "    values = [\"amzn2-ami-hvm-*-x86_64-gp2\"]\n"
          ],
          [
            100,
            "  }\n"
          ],
          [
            101,
            "\n"
          ],
          [
            102,
            "  filter {\n"
          ],
          [
            103,
            "    name   = \"virtualization-type\"\n"
          ],
          [
            104,
            "    values = [\"hvm\"]\n"
          ],
          [
            105,
            "  }\n"
          ],
          [
            106,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          93,
          106
        ],
        "resource": "aws_ami.latest_amazon_linux_2",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.data.aws.WhoAMI",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": {},
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": null,
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_41",
        "bc_check_id": "BC_AWS_SECRETS_5",
        "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            1,
            "provider \"aws\" {\n"
          ],
          [
            2,
            "  region = \"us-east-1\"\n"
          ],
          [
            3,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          1,
          3
        ],
        "resource": "aws.default",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.provider.aws.credentials",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_130",
        "bc_check_id": "BC_AWS_NETWORKING_53",
        "check_name": "Ensure VPC subnets do not assign public IP by default",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "map_public_ip_on_launch"
          ]
        },
        "code_block": [
          [
            18,
            "resource \"aws_subnet\" \"subnet_a\" {\n"
          ],
          [
            19,
            "  vpc_id            = aws_vpc.main.id\n"
          ],
          [
            20,
            "  cidr_block        = \"10.0.1.0/24\"\n"
          ],
          [
            21,
            "  availability_zone = \"us-east-1a\"\n"
          ],
          [
            22,
            "\n"
          ],
          [
            23,
            "  tags = {\n"
          ],
          [
            24,
            "    Name = \"subnet-a\"\n"
          ],
          [
            25,
            "  }\n"
          ],
          [
            26,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          18,
          26
        ],
        "resource": "aws_subnet.subnet_a",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "subnet-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_130",
        "bc_check_id": "BC_AWS_NETWORKING_53",
        "check_name": "Ensure VPC subnets do not assign public IP by default",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "map_public_ip_on_launch"
          ]
        },
        "code_block": [
          [
            28,
            "resource \"aws_subnet\" \"subnet_b\" {\n"
          ],
          [
            29,
            "  vpc_id            = aws_vpc.main.id\n"
          ],
          [
            30,
            "  cidr_block        = \"10.0.2.0/24\"\n"
          ],
          [
            31,
            "  availability_zone = \"us-east-1b\"\n"
          ],
          [
            32,
            "\n"
          ],
          [
            33,
            "  tags = {\n"
          ],
          [
            34,
            "    Name = \"subnet-b\"\n"
          ],
          [
            35,
            "  }\n"
          ],
          [
            36,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          28,
          36
        ],
        "resource": "aws_subnet.subnet_b",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "subnet-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_25",
        "bc_check_id": "BC_AWS_NETWORKING_2",
        "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_277",
        "bc_check_id": "BC_AWS_NETWORKING_78",
        "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_260",
        "bc_check_id": "BC_AWS_NETWORKING_67",
        "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_46",
        "bc_check_id": "BC_AWS_SECRETS_1",
        "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "user_data"
          ]
        },
        "code_block": [
          [
            108,
            "resource \"aws_instance\" \"ec2_a\" {\n"
          ],
          [
            109,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            110,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            111,
            "  subnet_id     = aws_subnet.subnet_a.id\n"
          ],
          [
            112,
            "\n"
          ],
          [
            113,
            "  root_block_device {\n"
          ],
          [
            114,
            "    volume_size = 50\n"
          ],
          [
            115,
            "    volume_type = \"gp2\"\n"
          ],
          [
            116,
            "  }\n"
          ],
          [
            117,
            "\n"
          ],
          [
            118,
            "  tags = {\n"
          ],
          [
            119,
            "    Name = \"ec2-a\"\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          108,
          121
        ],
        "resource": "aws_instance.ec2_a",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_88",
        "bc_check_id": "BC_AWS_PUBLIC_12",
        "check_name": "EC2 instance should not have public IP.",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "associate_public_ip_address"
          ]
        },
        "code_block": [
          [
            108,
            "resource \"aws_instance\" \"ec2_a\" {\n"
          ],
          [
            109,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            110,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            111,
            "  subnet_id     = aws_subnet.subnet_a.id\n"
          ],
          [
            112,
            "\n"
          ],
          [
            113,
            "  root_block_device {\n"
          ],
          [
            114,
            "    volume_size = 50\n"
          ],
          [
            115,
            "    volume_type = \"gp2\"\n"
          ],
          [
            116,
            "  }\n"
          ],
          [
            117,
            "\n"
          ],
          [
            118,
            "  tags = {\n"
          ],
          [
            119,
            "    Name = \"ec2-a\"\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          108,
          121
        ],
        "resource": "aws_instance.ec2_a",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_46",
        "bc_check_id": "BC_AWS_SECRETS_1",
        "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "user_data"
          ]
        },
        "code_block": [
          [
            123,
            "resource \"aws_instance\" \"ec2_b\" {\n"
          ],
          [
            124,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            125,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            126,
            "  subnet_id     = aws_subnet.subnet_b.id\n"
          ],
          [
            127,
            "\n"
          ],
          [
            128,
            "  root_block_device {\n"
          ],
          [
            129,
            "    volume_size = 50\n"
          ],
          [
            130,
            "    volume_type = \"gp2\"\n"
          ],
          [
            131,
            "  }\n"
          ],
          [
            132,
            "\n"
          ],
          [
            133,
            "  tags = {\n"
          ],
          [
            134,
            "    Name = \"ec2-b\"\n"
          ],
          [
            135,
            "  }\n"
          ],
          [
            136,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          123,
          136
        ],
        "resource": "aws_instance.ec2_b",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_88",
        "bc_check_id": "BC_AWS_PUBLIC_12",
        "check_name": "EC2 instance should not have public IP.",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "associate_public_ip_address"
          ]
        },
        "code_block": [
          [
            123,
            "resource \"aws_instance\" \"ec2_b\" {\n"
          ],
          [
            124,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            125,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            126,
            "  subnet_id     = aws_subnet.subnet_b.id\n"
          ],
          [
            127,
            "\n"
          ],
          [
            128,
            "  root_block_device {\n"
          ],
          [
            129,
            "    volume_size = 50\n"
          ],
          [
            130,
            "    volume_type = \"gp2\"\n"
          ],
          [
            131,
            "  }\n"
          ],
          [
            132,
            "\n"
          ],
          [
            133,
            "  tags = {\n"
          ],
          [
            134,
            "    Name = \"ec2-b\"\n"
          ],
          [
            135,
            "  }\n"
          ],
          [
            136,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          123,
          136
        ],
        "resource": "aws_instance.ec2_b",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_60",
        "bc_check_id": "BC_AWS_IAM_44",
        "check_name": "Ensure IAM role allows only specific services or principals to assume it",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "assume_role_policy"
          ]
        },
        "code_block": [
          [
            138,
            "resource \"aws_iam_role\" \"ec2_role\" {\n"
          ],
          [
            139,
            "  name = \"ec2-role\"\n"
          ],
          [
            140,
            "\n"
          ],
          [
            141,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            142,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            143,
            "    Statement = [\n"
          ],
          [
            144,
            "      {\n"
          ],
          [
            145,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            146,
            "        Effect = \"Allow\"\n"
          ],
          [
            147,
            "        Principal = {\n"
          ],
          [
            148,
            "          Service = \"ec2.amazonaws.com\"\n"
          ],
          [
            149,
            "        }\n"
          ],
          [
            150,
            "      }\n"
          ],
          [
            151,
            "    ]\n"
          ],
          [
            152,
            "  })\n"
          ],
          [
            153,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          138,
          153
        ],
        "resource": "aws_iam_role.ec2_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_274",
        "bc_check_id": "BC_AWS_IAM_78",
        "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            138,
            "resource \"aws_iam_role\" \"ec2_role\" {\n"
          ],
          [
            139,
            "  name = \"ec2-role\"\n"
          ],
          [
            140,
            "\n"
          ],
          [
            141,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            142,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            143,
            "    Statement = [\n"
          ],
          [
            144,
            "      {\n"
          ],
          [
            145,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            146,
            "        Effect = \"Allow\"\n"
          ],
          [
            147,
            "        Principal = {\n"
          ],
          [
            148,
            "          Service = \"ec2.amazonaws.com\"\n"
          ],
          [
            149,
            "        }\n"
          ],
          [
            150,
            "      }\n"
          ],
          [
            151,
            "    ]\n"
          ],
          [
            152,
            "  })\n"
          ],
          [
            153,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          138,
          153
        ],
        "resource": "aws_iam_role.ec2_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_61",
        "bc_check_id": "BC_AWS_IAM_45",
        "check_name": "Ensure AWS IAM policy does not allow assume role permission across all services",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "assume_role_policy"
          ]
        },
        "code_block": [
          [
            138,
            "resource \"aws_iam_role\" \"ec2_role\" {\n"
          ],
          [
            139,
            "  name = \"ec2-role\"\n"
          ],
          [
            140,
            "\n"
          ],
          [
            141,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            142,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            143,
            "    Statement = [\n"
          ],
          [
            144,
            "      {\n"
          ],
          [
            145,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            146,
            "        Effect = \"Allow\"\n"
          ],
          [
            147,
            "        Principal = {\n"
          ],
          [
            148,
            "          Service = \"ec2.amazonaws.com\"\n"
          ],
          [
            149,
            "        }\n"
          ],
          [
            150,
            "      }\n"
          ],
          [
            151,
            "    ]\n"
          ],
          [
            152,
            "  })\n"
          ],
          [
            153,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          138,
          153
        ],
        "resource": "aws_iam_role.ec2_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_274",
        "bc_check_id": "BC_AWS_IAM_78",
        "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            155,
            "resource \"aws_iam_role_policy_attachment\" \"ec2_role_policy_attachment\" {\n"
          ],
          [
            156,
            "  role       = aws_iam_role.ec2_role.name\n"
          ],
          [
            157,
            "  policy_arn = \"arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess\"\n"
          ],
          [
            158,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          155,
          158
        ],
        "resource": "aws_iam_role_policy_attachment.ec2_role_policy_attachment",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "role": [
            {
              "type": "resource",
              "name": "aws_iam_role.ec2_role",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_46",
        "bc_check_id": "BC_AWS_SECRETS_1",
        "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "user_data"
          ]
        },
        "code_block": [
          [
            165,
            "resource \"aws_instance\" \"ec2_a_with_profile\" {\n"
          ],
          [
            166,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            167,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            168,
            "  subnet_id            = aws_subnet.subnet_a.id\n"
          ],
          [
            169,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            170,
            "\n"
          ],
          [
            171,
            "  root_block_device {\n"
          ],
          [
            172,
            "    volume_size = 50\n"
          ],
          [
            173,
            "    volume_type = \"gp2\"\n"
          ],
          [
            174,
            "  }\n"
          ],
          [
            175,
            "\n"
          ],
          [
            176,
            "  tags = {\n"
          ],
          [
            177,
            "    Name = \"ec2-a-with-profile\"\n"
          ],
          [
            178,
            "  }\n"
          ],
          [
            179,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          165,
          179
        ],
        "resource": "aws_instance.ec2_a_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_88",
        "bc_check_id": "BC_AWS_PUBLIC_12",
        "check_name": "EC2 instance should not have public IP.",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "associate_public_ip_address"
          ]
        },
        "code_block": [
          [
            165,
            "resource \"aws_instance\" \"ec2_a_with_profile\" {\n"
          ],
          [
            166,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            167,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            168,
            "  subnet_id            = aws_subnet.subnet_a.id\n"
          ],
          [
            169,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            170,
            "\n"
          ],
          [
            171,
            "  root_block_device {\n"
          ],
          [
            172,
            "    volume_size = 50\n"
          ],
          [
            173,
            "    volume_type = \"gp2\"\n"
          ],
          [
            174,
            "  }\n"
          ],
          [
            175,
            "\n"
          ],
          [
            176,
            "  tags = {\n"
          ],
          [
            177,
            "    Name = \"ec2-a-with-profile\"\n"
          ],
          [
            178,
            "  }\n"
          ],
          [
            179,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          165,
          179
        ],
        "resource": "aws_instance.ec2_a_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_46",
        "bc_check_id": "BC_AWS_SECRETS_1",
        "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "user_data"
          ]
        },
        "code_block": [
          [
            181,
            "resource \"aws_instance\" \"ec2_b_with_profile\" {\n"
          ],
          [
            182,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            183,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            184,
            "  subnet_id            = aws_subnet.subnet_b.id\n"
          ],
          [
            185,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            186,
            "\n"
          ],
          [
            187,
            "  root_block_device {\n"
          ],
          [
            188,
            "    volume_size = 50\n"
          ],
          [
            189,
            "    volume_type = \"gp2\"\n"
          ],
          [
            190,
            "  }\n"
          ],
          [
            191,
            "\n"
          ],
          [
            192,
            "  tags = {\n"
          ],
          [
            193,
            "    Name = \"ec2-b-with-profile\"\n"
          ],
          [
            194,
            "  }\n"
          ],
          [
            195,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          181,
          195
        ],
        "resource": "aws_instance.ec2_b_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_88",
        "bc_check_id": "BC_AWS_PUBLIC_12",
        "check_name": "EC2 instance should not have public IP.",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "associate_public_ip_address"
          ]
        },
        "code_block": [
          [
            181,
            "resource \"aws_instance\" \"ec2_b_with_profile\" {\n"
          ],
          [
            182,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            183,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            184,
            "  subnet_id            = aws_subnet.subnet_b.id\n"
          ],
          [
            185,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            186,
            "\n"
          ],
          [
            187,
            "  root_block_device {\n"
          ],
          [
            188,
            "    volume_size = 50\n"
          ],
          [
            189,
            "    volume_type = \"gp2\"\n"
          ],
          [
            190,
            "  }\n"
          ],
          [
            191,
            "\n"
          ],
          [
            192,
            "  tags = {\n"
          ],
          [
            193,
            "    Name = \"ec2-b-with-profile\"\n"
          ],
          [
            194,
            "  }\n"
          ],
          [
            195,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          181,
          195
        ],
        "resource": "aws_instance.ec2_b_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_66",
        "bc_check_id": "BC_AWS_LOGGING_13",
        "check_name": "Ensure that CloudWatch Log Group specifies retention days",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "retention_in_days"
          ]
        },
        "code_block": [
          [
            208,
            "resource \"aws_cloudwatch_log_group\" \"flow_log\" {\n"
          ],
          [
            209,
            "  name              = \"vpc-flow-log-group\"\n"
          ],
          [
            210,
            "  retention_in_days = 30\n"
          ],
          [
            211,
            "\n"
          ],
          [
            212,
            "  tags = {\n"
          ],
          [
            213,
            "    Name = \"vpc-flow-log-group\"\n"
          ],
          [
            214,
            "  }\n"
          ],
          [
            215,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          208,
          215
        ],
        "resource": "aws_cloudwatch_log_group.flow_log",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetention",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "vpc-flow-log-group"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-13",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_251",
        "bc_check_id": "BC_AWS_GENERAL_172",
        "check_name": "Ensure CloudTrail logging is enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "enable_logging"
          ]
        },
        "code_block": [
          [
            217,
            "resource \"aws_cloudtrail\" \"example\" {\n"
          ],
          [
            218,
            "  name                          = \"example-trail\"\n"
          ],
          [
            219,
            "  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            220,
            "  include_global_service_events = true\n"
          ],
          [
            221,
            "\n"
          ],
          [
            222,
            "  tags = {\n"
          ],
          [
            223,
            "    Name = \"example-trail\"\n"
          ],
          [
            224,
            "  }\n"
          ],
          [
            225,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          217,
          225
        ],
        "resource": "aws_cloudtrail.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudtrailEnableLogging",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-trail"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-cloudtrail-logging-is-enabled",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_93",
        "bc_check_id": "BC_AWS_S3_24",
        "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "policy"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_53",
        "bc_check_id": "BC_AWS_S3_19",
        "check_name": "Ensure S3 bucket has block public ACLS enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "block_public_acls"
          ]
        },
        "code_block": [
          [
            235,
            "resource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n"
          ],
          [
            236,
            "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            237,
            "\n"
          ],
          [
            238,
            "  block_public_acls       = true\n"
          ],
          [
            239,
            "  block_public_policy     = true\n"
          ],
          [
            240,
            "  ignore_public_acls      = true\n"
          ],
          [
            241,
            "  restrict_public_buckets = true\n"
          ],
          [
            242,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          235,
          242
        ],
        "resource": "aws_s3_bucket_public_access_block.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_54",
        "bc_check_id": "BC_AWS_S3_20",
        "check_name": "Ensure S3 bucket has block public policy enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "block_public_policy"
          ]
        },
        "code_block": [
          [
            235,
            "resource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n"
          ],
          [
            236,
            "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            237,
            "\n"
          ],
          [
            238,
            "  block_public_acls       = true\n"
          ],
          [
            239,
            "  block_public_policy     = true\n"
          ],
          [
            240,
            "  ignore_public_acls      = true\n"
          ],
          [
            241,
            "  restrict_public_buckets = true\n"
          ],
          [
            242,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          235,
          242
        ],
        "resource": "aws_s3_bucket_public_access_block.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_56",
        "bc_check_id": "BC_AWS_S3_22",
        "check_name": "Ensure S3 bucket has 'restrict_public_buckets' enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "restrict_public_buckets"
          ]
        },
        "code_block": [
          [
            235,
            "resource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n"
          ],
          [
            236,
            "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            237,
            "\n"
          ],
          [
            238,
            "  block_public_acls       = true\n"
          ],
          [
            239,
            "  block_public_policy     = true\n"
          ],
          [
            240,
            "  ignore_public_acls      = true\n"
          ],
          [
            241,
            "  restrict_public_buckets = true\n"
          ],
          [
            242,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          235,
          242
        ],
        "resource": "aws_s3_bucket_public_access_block.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_55",
        "bc_check_id": "BC_AWS_S3_21",
        "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "ignore_public_acls"
          ]
        },
        "code_block": [
          [
            235,
            "resource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n"
          ],
          [
            236,
            "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            237,
            "\n"
          ],
          [
            238,
            "  block_public_acls       = true\n"
          ],
          [
            239,
            "  block_public_policy     = true\n"
          ],
          [
            240,
            "  ignore_public_acls      = true\n"
          ],
          [
            241,
            "  restrict_public_buckets = true\n"
          ],
          [
            242,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          235,
          242
        ],
        "resource": "aws_s3_bucket_public_access_block.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_93",
        "bc_check_id": "BC_AWS_S3_24",
        "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "policy"
          ]
        },
        "code_block": [
          [
            261,
            "resource \"aws_s3_bucket_policy\" \"cloudtrail_bucket\" {\n"
          ],
          [
            262,
            "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            263,
            "\n"
          ],
          [
            264,
            "  policy = jsonencode({\n"
          ],
          [
            265,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            266,
            "    Statement = [\n"
          ],
          [
            267,
            "      {\n"
          ],
          [
            268,
            "        Action = \"s3:*\"\n"
          ],
          [
            269,
            "        Effect = \"Allow\"\n"
          ],
          [
            270,
            "        Principal = {\n"
          ],
          [
            271,
            "          AWS = \"*\"\n"
          ],
          [
            272,
            "        }\n"
          ],
          [
            273,
            "        Resource = [\n"
          ],
          [
            274,
            "          \"arn:aws:s3:::cloudtrail-bucket-example/*\",\n"
          ],
          [
            275,
            "        ]\n"
          ],
          [
            276,
            "        Condition = {\n"
          ],
          [
            277,
            "          StringEquals = {\n"
          ],
          [
            278,
            "            \"aws:SourceArn\" = \"arn:aws:cloudtrail:us-east-1:${data.aws_caller_identity.current.account_id}:trail/example-trail\"\n"
          ],
          [
            279,
            "          }\n"
          ],
          [
            280,
            "        }\n"
          ],
          [
            281,
            "      }\n"
          ],
          [
            282,
            "    ]\n"
          ],
          [
            283,
            "  })\n"
          ],
          [
            284,
            "}"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          261,
          284
        ],
        "resource": "aws_s3_bucket_policy.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_11",
        "bc_check_id": "BC_AWS_LOGGING_9",
        "check_name": "Ensure VPC flow logging is enabled in all VPCs",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_vpc": {
              "main": {
                "__end_line__": 16,
                "__start_line__": 8,
                "cidr_block": [
                  "10.0.0.0/16"
                ],
                "enable_dns_hostnames": [
                  true
                ],
                "enable_dns_support": [
                  true
                ],
                "tags": [
                  {
                    "Name": "main-vpc"
                  }
                ],
                "__address__": "aws_vpc.main",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "networking"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_vpc\" \"main\" {\n"
          ],
          [
            9,
            "  cidr_block           = \"10.0.0.0/16\"\n"
          ],
          [
            10,
            "  enable_dns_support   = true\n"
          ],
          [
            11,
            "  enable_dns_hostnames = true\n"
          ],
          [
            12,
            "\n"
          ],
          [
            13,
            "  tags = {\n"
          ],
          [
            14,
            "    Name = \"main-vpc\"\n"
          ],
          [
            15,
            "  }\n"
          ],
          [
            16,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          16
        ],
        "resource": "aws_vpc.main",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "main-vpc"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              197,
              "resource \"aws_flow_log\" \"vpc_flow_log\" {\n"
            ],
            [
              198,
              "  log_destination      = aws_cloudwatch_log_group.flow_log.arn\n"
            ],
            [
              199,
              "  log_destination_type = \"cloud-watch-logs\"\n"
            ],
            [
              200,
              "  traffic_type         = \"ALL\"\n"
            ],
            [
              201,
              "  vpc_id               = aws_vpc.main.id\n"
            ],
            [
              202,
              "\n"
            ],
            [
              203,
              "  tags = {\n"
            ],
            [
              204,
              "    Name = \"vpc-flow-log\"\n"
            ],
            [
              205,
              "  }\n"
            ],
            [
              206,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            197,
            206
          ],
          "resource": "aws_flow_log.vpc_flow_log",
          "entity_tags": {
            "Name": "vpc-flow-log"
          },
          "evaluations": null,
          "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-9-enable-vpc-flow-logging",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_56",
        "bc_check_id": "BC_AWS_IAM_75",
        "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_iam_role": {
              "ec2_role": {
                "__end_line__": 153,
                "__start_line__": 138,
                "assume_role_policy": [
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "ec2.amazonaws.com"
                        }
                      }
                    ]
                  }
                ],
                "name": [
                  "ec2-role"
                ],
                "__address__": "aws_iam_role.ec2_role",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "name",
            "managed_policy_arns/*",
            "managed_policy_arn",
            "policy_arn",
            "arn"
          ]
        },
        "code_block": [
          [
            138,
            "resource \"aws_iam_role\" \"ec2_role\" {\n"
          ],
          [
            139,
            "  name = \"ec2-role\"\n"
          ],
          [
            140,
            "\n"
          ],
          [
            141,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            142,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            143,
            "    Statement = [\n"
          ],
          [
            144,
            "      {\n"
          ],
          [
            145,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            146,
            "        Effect = \"Allow\"\n"
          ],
          [
            147,
            "        Principal = {\n"
          ],
          [
            148,
            "          Service = \"ec2.amazonaws.com\"\n"
          ],
          [
            149,
            "        }\n"
          ],
          [
            150,
            "      }\n"
          ],
          [
            151,
            "    ]\n"
          ],
          [
            152,
            "  })\n"
          ],
          [
            153,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          138,
          153
        ],
        "resource": "aws_iam_role.ec2_role",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_56",
        "bc_check_id": "BC_AWS_IAM_75",
        "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_iam_role_policy_attachment": {
              "ec2_role_policy_attachment": {
                "__end_line__": 158,
                "__start_line__": 155,
                "policy_arn": [
                  "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
                ],
                "role": [
                  "ec2-role"
                ],
                "__address__": "aws_iam_role_policy_attachment.ec2_role_policy_attachment",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "name",
            "managed_policy_arns/*",
            "managed_policy_arn",
            "policy_arn",
            "arn"
          ]
        },
        "code_block": [
          [
            155,
            "resource \"aws_iam_role_policy_attachment\" \"ec2_role_policy_attachment\" {\n"
          ],
          [
            156,
            "  role       = aws_iam_role.ec2_role.name\n"
          ],
          [
            157,
            "  policy_arn = \"arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess\"\n"
          ],
          [
            158,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          155,
          158
        ],
        "resource": "aws_iam_role_policy_attachment.ec2_role_policy_attachment",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "role": [
            {
              "type": "resource",
              "name": "aws_iam_role.ec2_role",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV2_AWS_35",
        "bc_check_id": "BC_AWS_NETWORKING_77",
        "check_name": "AWS NAT Gateways should be utilized for the default route",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_route_table": {
              "public": {
                "__end_line__": 57,
                "__start_line__": 46,
                "route": [
                  {
                    "cidr_block": [
                      "0.0.0.0/0"
                    ],
                    "gateway_id": [
                      "aws_internet_gateway.igw.id"
                    ]
                  }
                ],
                "tags": [
                  {
                    "Name": "public-rt"
                  }
                ],
                "vpc_id": [
                  "aws_vpc.main.id"
                ],
                "__address__": "aws_route_table.public",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "destination_cidr_block",
            "route/*/cidr_block",
            "route/*/instance_id",
            "instance_id"
          ]
        },
        "code_block": [
          [
            46,
            "resource \"aws_route_table\" \"public\" {\n"
          ],
          [
            47,
            "  vpc_id = aws_vpc.main.id\n"
          ],
          [
            48,
            "\n"
          ],
          [
            49,
            "  route {\n"
          ],
          [
            50,
            "    cidr_block = \"0.0.0.0/0\"\n"
          ],
          [
            51,
            "    gateway_id = aws_internet_gateway.igw.id\n"
          ],
          [
            52,
            "  }\n"
          ],
          [
            53,
            "\n"
          ],
          [
            54,
            "  tags = {\n"
          ],
          [
            55,
            "    Name = \"public-rt\"\n"
          ],
          [
            56,
            "  }\n"
          ],
          [
            57,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          46,
          57
        ],
        "resource": "aws_route_table.public",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "public-rt"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-nat-gateways-are-utilized-for-the-default-route",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_44",
        "bc_check_id": "BC_AWS_NETWORKING_80",
        "check_name": "Ensure AWS route table with VPC peering does not contain routes overly permissive to all traffic",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_route_table": {
              "public": {
                "__end_line__": 57,
                "__start_line__": 46,
                "route": [
                  {
                    "cidr_block": [
                      "0.0.0.0/0"
                    ],
                    "gateway_id": [
                      "aws_internet_gateway.igw.id"
                    ]
                  }
                ],
                "tags": [
                  {
                    "Name": "public-rt"
                  }
                ],
                "vpc_id": [
                  "aws_vpc.main.id"
                ],
                "__address__": "aws_route_table.public",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "route/*/ipv6_cidr_block",
            "vpc_peering_connection_id",
            "route/*/cidr_block",
            "destination_cidr_block",
            "route/*/vpc_peering_connection_id",
            "destination_ipv6_cidr_block"
          ]
        },
        "code_block": [
          [
            46,
            "resource \"aws_route_table\" \"public\" {\n"
          ],
          [
            47,
            "  vpc_id = aws_vpc.main.id\n"
          ],
          [
            48,
            "\n"
          ],
          [
            49,
            "  route {\n"
          ],
          [
            50,
            "    cidr_block = \"0.0.0.0/0\"\n"
          ],
          [
            51,
            "    gateway_id = aws_internet_gateway.igw.id\n"
          ],
          [
            52,
            "  }\n"
          ],
          [
            53,
            "\n"
          ],
          [
            54,
            "  tags = {\n"
          ],
          [
            55,
            "    Name = \"public-rt\"\n"
          ],
          [
            56,
            "  }\n"
          ],
          [
            57,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          46,
          57
        ],
        "resource": "aws_route_table.public",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "public-rt"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-route-table-with-vpc-peering-does-not-contain-routes-overly-permissive-to-all-traffic",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_20",
        "bc_check_id": "BC_AWS_S3_1",
        "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "access_control_policy/grant",
            "access_control_policy",
            "resource_type",
            "acl",
            "access_control_policy/grant/*/grantee/uri"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_41",
        "bc_check_id": "BC_AWS_IAM_69",
        "check_name": "Ensure an IAM role is attached to EC2 instance",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_instance": {
              "ec2_a_with_profile": {
                "__end_line__": 179,
                "__start_line__": 165,
                "ami": [
                  "data.aws_ami.latest_amazon_linux_2.id"
                ],
                "iam_instance_profile": [
                  "ec2-profile"
                ],
                "instance_type": [
                  "t2.micro"
                ],
                "root_block_device": [
                  {
                    "volume_size": [
                      50
                    ],
                    "volume_type": [
                      "gp2"
                    ]
                  }
                ],
                "subnet_id": [
                  "aws_subnet.subnet_a.id"
                ],
                "tags": [
                  {
                    "Name": "ec2-a-with-profile"
                  }
                ],
                "__address__": "aws_instance.ec2_a_with_profile",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "iam_instance_profile"
          ]
        },
        "code_block": [
          [
            165,
            "resource \"aws_instance\" \"ec2_a_with_profile\" {\n"
          ],
          [
            166,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            167,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            168,
            "  subnet_id            = aws_subnet.subnet_a.id\n"
          ],
          [
            169,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            170,
            "\n"
          ],
          [
            171,
            "  root_block_device {\n"
          ],
          [
            172,
            "    volume_size = 50\n"
          ],
          [
            173,
            "    volume_type = \"gp2\"\n"
          ],
          [
            174,
            "  }\n"
          ],
          [
            175,
            "\n"
          ],
          [
            176,
            "  tags = {\n"
          ],
          [
            177,
            "    Name = \"ec2-a-with-profile\"\n"
          ],
          [
            178,
            "  }\n"
          ],
          [
            179,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          165,
          179
        ],
        "resource": "aws_instance.ec2_a_with_profile",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV2_AWS_41",
        "bc_check_id": "BC_AWS_IAM_69",
        "check_name": "Ensure an IAM role is attached to EC2 instance",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_instance": {
              "ec2_b_with_profile": {
                "__end_line__": 195,
                "__start_line__": 181,
                "ami": [
                  "data.aws_ami.latest_amazon_linux_2.id"
                ],
                "iam_instance_profile": [
                  "ec2-profile"
                ],
                "instance_type": [
                  "t2.micro"
                ],
                "root_block_device": [
                  {
                    "volume_size": [
                      50
                    ],
                    "volume_type": [
                      "gp2"
                    ]
                  }
                ],
                "subnet_id": [
                  "aws_subnet.subnet_b.id"
                ],
                "tags": [
                  {
                    "Name": "ec2-b-with-profile"
                  }
                ],
                "__address__": "aws_instance.ec2_b_with_profile",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "iam_instance_profile"
          ]
        },
        "code_block": [
          [
            181,
            "resource \"aws_instance\" \"ec2_b_with_profile\" {\n"
          ],
          [
            182,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            183,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            184,
            "  subnet_id            = aws_subnet.subnet_b.id\n"
          ],
          [
            185,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            186,
            "\n"
          ],
          [
            187,
            "  root_block_device {\n"
          ],
          [
            188,
            "    volume_size = 50\n"
          ],
          [
            189,
            "    volume_type = \"gp2\"\n"
          ],
          [
            190,
            "  }\n"
          ],
          [
            191,
            "\n"
          ],
          [
            192,
            "  tags = {\n"
          ],
          [
            193,
            "    Name = \"ec2-b-with-profile\"\n"
          ],
          [
            194,
            "  }\n"
          ],
          [
            195,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          181,
          195
        ],
        "resource": "aws_instance.ec2_b_with_profile",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_57",
        "bc_check_id": "BC_AWS_S3_2",
        "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "access_control_policy/grant",
            "access_control_policy",
            "access_control_policy/grant/*/permission",
            "resource_type",
            "acl",
            "access_control_policy/grant/*/grantee/uri"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_21",
        "bc_check_id": "BC_AWS_S3_16",
        "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "versioning/enabled",
            "versioning_configuration/status"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              244,
              "resource \"aws_s3_bucket_versioning\" \"cloudtrail_bucket\" {\n"
            ],
            [
              245,
              "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
            ],
            [
              246,
              "  versioning_configuration {\n"
            ],
            [
              247,
              "    status = \"Enabled\"\n"
            ],
            [
              248,
              "  }\n"
            ],
            [
              249,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            244,
            249
          ],
          "resource": "aws_s3_bucket_versioning.cloudtrail_bucket",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_6",
        "bc_check_id": "BC_AWS_NETWORKING_52",
        "check_name": "Ensure that S3 bucket has a Public Access block",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "block_public_policy",
            "block_public_acls"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              235,
              "resource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n"
            ],
            [
              236,
              "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
            ],
            [
              237,
              "\n"
            ],
            [
              238,
              "  block_public_acls       = true\n"
            ],
            [
              239,
              "  block_public_policy     = true\n"
            ],
            [
              240,
              "  ignore_public_acls      = true\n"
            ],
            [
              241,
              "  restrict_public_buckets = true\n"
            ],
            [
              242,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            235,
            242
          ],
          "resource": "aws_s3_bucket_public_access_block.cloudtrail_bucket",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_19",
        "bc_check_id": "BC_AWS_S3_14",
        "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "rule/apply_server_side_encryption_by_default/sse_algorithm",
            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              251,
              "resource \"aws_s3_bucket_server_side_encryption_configuration\" \"cloudtrail_bucket\" {\n"
            ],
            [
              252,
              "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
            ],
            [
              253,
              "\n"
            ],
            [
              254,
              "  rule {\n"
            ],
            [
              255,
              "    apply_server_side_encryption_by_default {\n"
            ],
            [
              256,
              "      sse_algorithm = \"AES256\"\n"
            ],
            [
              257,
              "    }\n"
            ],
            [
              258,
              "  }\n"
            ],
            [
              259,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            251,
            259
          ],
          "resource": "aws_s3_bucket_server_side_encryption_configuration.cloudtrail_bucket",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      }
    ],
    "failed_checks": [
      {
        "check_id": "CKV_AWS_24",
        "bc_check_id": "BC_AWS_NETWORKING_1",
        "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "ingress/[0]/from_port",
            "ingress/[0]/to_port",
            "ingress/[0]/cidr_blocks",
            "ingress/[0]/ipv6_cidr_blocks"
          ]
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_382",
        "bc_check_id": "BC_AWS_IAM_93",
        "check_name": "Ensure no security groups allow egress from 0.0.0.0:0 to port -1",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "egress/[0]/from_port",
            "egress/[0]/to_port",
            "egress/[0]/cidr_blocks",
            "egress/[0]/ipv6_cidr_blocks"
          ]
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedEgressAny",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_23",
        "bc_check_id": "BC_AWS_NETWORKING_31",
        "check_name": "Ensure every security group and rule has a description",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "description",
            "egress/[0]",
            "ingress/[0]"
          ]
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_135",
        "bc_check_id": "BC_AWS_GENERAL_68",
        "check_name": "Ensure that EC2 is EBS optimized",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "ebs_optimized"
          ]
        },
        "code_block": [
          [
            108,
            "resource \"aws_instance\" \"ec2_a\" {\n"
          ],
          [
            109,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            110,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            111,
            "  subnet_id     = aws_subnet.subnet_a.id\n"
          ],
          [
            112,
            "\n"
          ],
          [
            113,
            "  root_block_device {\n"
          ],
          [
            114,
            "    volume_size = 50\n"
          ],
          [
            115,
            "    volume_type = \"gp2\"\n"
          ],
          [
            116,
            "  }\n"
          ],
          [
            117,
            "\n"
          ],
          [
            118,
            "  tags = {\n"
          ],
          [
            119,
            "    Name = \"ec2-a\"\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          108,
          121
        ],
        "resource": "aws_instance.ec2_a",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_79",
        "bc_check_id": "BC_AWS_GENERAL_31",
        "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "metadata_options/[0]/http_tokens"
          ]
        },
        "code_block": [
          [
            108,
            "resource \"aws_instance\" \"ec2_a\" {\n"
          ],
          [
            109,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            110,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            111,
            "  subnet_id     = aws_subnet.subnet_a.id\n"
          ],
          [
            112,
            "\n"
          ],
          [
            113,
            "  root_block_device {\n"
          ],
          [
            114,
            "    volume_size = 50\n"
          ],
          [
            115,
            "    volume_type = \"gp2\"\n"
          ],
          [
            116,
            "  }\n"
          ],
          [
            117,
            "\n"
          ],
          [
            118,
            "  tags = {\n"
          ],
          [
            119,
            "    Name = \"ec2-a\"\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          108,
          121
        ],
        "resource": "aws_instance.ec2_a",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_126",
        "bc_check_id": "BC_AWS_LOGGING_26",
        "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "monitoring"
          ]
        },
        "code_block": [
          [
            108,
            "resource \"aws_instance\" \"ec2_a\" {\n"
          ],
          [
            109,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            110,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            111,
            "  subnet_id     = aws_subnet.subnet_a.id\n"
          ],
          [
            112,
            "\n"
          ],
          [
            113,
            "  root_block_device {\n"
          ],
          [
            114,
            "    volume_size = 50\n"
          ],
          [
            115,
            "    volume_type = \"gp2\"\n"
          ],
          [
            116,
            "  }\n"
          ],
          [
            117,
            "\n"
          ],
          [
            118,
            "  tags = {\n"
          ],
          [
            119,
            "    Name = \"ec2-a\"\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          108,
          121
        ],
        "resource": "aws_instance.ec2_a",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_135",
        "bc_check_id": "BC_AWS_GENERAL_68",
        "check_name": "Ensure that EC2 is EBS optimized",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "ebs_optimized"
          ]
        },
        "code_block": [
          [
            123,
            "resource \"aws_instance\" \"ec2_b\" {\n"
          ],
          [
            124,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            125,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            126,
            "  subnet_id     = aws_subnet.subnet_b.id\n"
          ],
          [
            127,
            "\n"
          ],
          [
            128,
            "  root_block_device {\n"
          ],
          [
            129,
            "    volume_size = 50\n"
          ],
          [
            130,
            "    volume_type = \"gp2\"\n"
          ],
          [
            131,
            "  }\n"
          ],
          [
            132,
            "\n"
          ],
          [
            133,
            "  tags = {\n"
          ],
          [
            134,
            "    Name = \"ec2-b\"\n"
          ],
          [
            135,
            "  }\n"
          ],
          [
            136,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          123,
          136
        ],
        "resource": "aws_instance.ec2_b",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_79",
        "bc_check_id": "BC_AWS_GENERAL_31",
        "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "metadata_options/[0]/http_tokens"
          ]
        },
        "code_block": [
          [
            123,
            "resource \"aws_instance\" \"ec2_b\" {\n"
          ],
          [
            124,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            125,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            126,
            "  subnet_id     = aws_subnet.subnet_b.id\n"
          ],
          [
            127,
            "\n"
          ],
          [
            128,
            "  root_block_device {\n"
          ],
          [
            129,
            "    volume_size = 50\n"
          ],
          [
            130,
            "    volume_type = \"gp2\"\n"
          ],
          [
            131,
            "  }\n"
          ],
          [
            132,
            "\n"
          ],
          [
            133,
            "  tags = {\n"
          ],
          [
            134,
            "    Name = \"ec2-b\"\n"
          ],
          [
            135,
            "  }\n"
          ],
          [
            136,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          123,
          136
        ],
        "resource": "aws_instance.ec2_b",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_126",
        "bc_check_id": "BC_AWS_LOGGING_26",
        "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "monitoring"
          ]
        },
        "code_block": [
          [
            123,
            "resource \"aws_instance\" \"ec2_b\" {\n"
          ],
          [
            124,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            125,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            126,
            "  subnet_id     = aws_subnet.subnet_b.id\n"
          ],
          [
            127,
            "\n"
          ],
          [
            128,
            "  root_block_device {\n"
          ],
          [
            129,
            "    volume_size = 50\n"
          ],
          [
            130,
            "    volume_type = \"gp2\"\n"
          ],
          [
            131,
            "  }\n"
          ],
          [
            132,
            "\n"
          ],
          [
            133,
            "  tags = {\n"
          ],
          [
            134,
            "    Name = \"ec2-b\"\n"
          ],
          [
            135,
            "  }\n"
          ],
          [
            136,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          123,
          136
        ],
        "resource": "aws_instance.ec2_b",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_135",
        "bc_check_id": "BC_AWS_GENERAL_68",
        "check_name": "Ensure that EC2 is EBS optimized",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "ebs_optimized"
          ]
        },
        "code_block": [
          [
            165,
            "resource \"aws_instance\" \"ec2_a_with_profile\" {\n"
          ],
          [
            166,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            167,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            168,
            "  subnet_id            = aws_subnet.subnet_a.id\n"
          ],
          [
            169,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            170,
            "\n"
          ],
          [
            171,
            "  root_block_device {\n"
          ],
          [
            172,
            "    volume_size = 50\n"
          ],
          [
            173,
            "    volume_type = \"gp2\"\n"
          ],
          [
            174,
            "  }\n"
          ],
          [
            175,
            "\n"
          ],
          [
            176,
            "  tags = {\n"
          ],
          [
            177,
            "    Name = \"ec2-a-with-profile\"\n"
          ],
          [
            178,
            "  }\n"
          ],
          [
            179,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          165,
          179
        ],
        "resource": "aws_instance.ec2_a_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_79",
        "bc_check_id": "BC_AWS_GENERAL_31",
        "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "metadata_options/[0]/http_tokens"
          ]
        },
        "code_block": [
          [
            165,
            "resource \"aws_instance\" \"ec2_a_with_profile\" {\n"
          ],
          [
            166,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            167,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            168,
            "  subnet_id            = aws_subnet.subnet_a.id\n"
          ],
          [
            169,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            170,
            "\n"
          ],
          [
            171,
            "  root_block_device {\n"
          ],
          [
            172,
            "    volume_size = 50\n"
          ],
          [
            173,
            "    volume_type = \"gp2\"\n"
          ],
          [
            174,
            "  }\n"
          ],
          [
            175,
            "\n"
          ],
          [
            176,
            "  tags = {\n"
          ],
          [
            177,
            "    Name = \"ec2-a-with-profile\"\n"
          ],
          [
            178,
            "  }\n"
          ],
          [
            179,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          165,
          179
        ],
        "resource": "aws_instance.ec2_a_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_126",
        "bc_check_id": "BC_AWS_LOGGING_26",
        "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "monitoring"
          ]
        },
        "code_block": [
          [
            165,
            "resource \"aws_instance\" \"ec2_a_with_profile\" {\n"
          ],
          [
            166,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            167,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            168,
            "  subnet_id            = aws_subnet.subnet_a.id\n"
          ],
          [
            169,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            170,
            "\n"
          ],
          [
            171,
            "  root_block_device {\n"
          ],
          [
            172,
            "    volume_size = 50\n"
          ],
          [
            173,
            "    volume_type = \"gp2\"\n"
          ],
          [
            174,
            "  }\n"
          ],
          [
            175,
            "\n"
          ],
          [
            176,
            "  tags = {\n"
          ],
          [
            177,
            "    Name = \"ec2-a-with-profile\"\n"
          ],
          [
            178,
            "  }\n"
          ],
          [
            179,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          165,
          179
        ],
        "resource": "aws_instance.ec2_a_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_135",
        "bc_check_id": "BC_AWS_GENERAL_68",
        "check_name": "Ensure that EC2 is EBS optimized",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "ebs_optimized"
          ]
        },
        "code_block": [
          [
            181,
            "resource \"aws_instance\" \"ec2_b_with_profile\" {\n"
          ],
          [
            182,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            183,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            184,
            "  subnet_id            = aws_subnet.subnet_b.id\n"
          ],
          [
            185,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            186,
            "\n"
          ],
          [
            187,
            "  root_block_device {\n"
          ],
          [
            188,
            "    volume_size = 50\n"
          ],
          [
            189,
            "    volume_type = \"gp2\"\n"
          ],
          [
            190,
            "  }\n"
          ],
          [
            191,
            "\n"
          ],
          [
            192,
            "  tags = {\n"
          ],
          [
            193,
            "    Name = \"ec2-b-with-profile\"\n"
          ],
          [
            194,
            "  }\n"
          ],
          [
            195,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          181,
          195
        ],
        "resource": "aws_instance.ec2_b_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_79",
        "bc_check_id": "BC_AWS_GENERAL_31",
        "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "metadata_options/[0]/http_tokens"
          ]
        },
        "code_block": [
          [
            181,
            "resource \"aws_instance\" \"ec2_b_with_profile\" {\n"
          ],
          [
            182,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            183,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            184,
            "  subnet_id            = aws_subnet.subnet_b.id\n"
          ],
          [
            185,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            186,
            "\n"
          ],
          [
            187,
            "  root_block_device {\n"
          ],
          [
            188,
            "    volume_size = 50\n"
          ],
          [
            189,
            "    volume_type = \"gp2\"\n"
          ],
          [
            190,
            "  }\n"
          ],
          [
            191,
            "\n"
          ],
          [
            192,
            "  tags = {\n"
          ],
          [
            193,
            "    Name = \"ec2-b-with-profile\"\n"
          ],
          [
            194,
            "  }\n"
          ],
          [
            195,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          181,
          195
        ],
        "resource": "aws_instance.ec2_b_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_126",
        "bc_check_id": "BC_AWS_LOGGING_26",
        "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "monitoring"
          ]
        },
        "code_block": [
          [
            181,
            "resource \"aws_instance\" \"ec2_b_with_profile\" {\n"
          ],
          [
            182,
            "  ami                  = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            183,
            "  instance_type        = \"t2.micro\"\n"
          ],
          [
            184,
            "  subnet_id            = aws_subnet.subnet_b.id\n"
          ],
          [
            185,
            "  iam_instance_profile = aws_iam_instance_profile.ec2_profile.name\n"
          ],
          [
            186,
            "\n"
          ],
          [
            187,
            "  root_block_device {\n"
          ],
          [
            188,
            "    volume_size = 50\n"
          ],
          [
            189,
            "    volume_type = \"gp2\"\n"
          ],
          [
            190,
            "  }\n"
          ],
          [
            191,
            "\n"
          ],
          [
            192,
            "  tags = {\n"
          ],
          [
            193,
            "    Name = \"ec2-b-with-profile\"\n"
          ],
          [
            194,
            "  }\n"
          ],
          [
            195,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          181,
          195
        ],
        "resource": "aws_instance.ec2_b_with_profile",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b-with-profile"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf",
        "breadcrumbs": {
          "iam_instance_profile": [
            {
              "type": "resource",
              "name": "aws_iam_instance_profile.ec2_profile",
              "path": "/tmp/tmpn6nb7ha4/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_158",
        "bc_check_id": "BC_AWS_GENERAL_85",
        "check_name": "Ensure that CloudWatch Log Group is encrypted by KMS",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "kms_key_id"
          ]
        },
        "code_block": [
          [
            208,
            "resource \"aws_cloudwatch_log_group\" \"flow_log\" {\n"
          ],
          [
            209,
            "  name              = \"vpc-flow-log-group\"\n"
          ],
          [
            210,
            "  retention_in_days = 30\n"
          ],
          [
            211,
            "\n"
          ],
          [
            212,
            "  tags = {\n"
          ],
          [
            213,
            "    Name = \"vpc-flow-log-group\"\n"
          ],
          [
            214,
            "  }\n"
          ],
          [
            215,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          208,
          215
        ],
        "resource": "aws_cloudwatch_log_group.flow_log",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupKMSKey",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "vpc-flow-log-group"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_338",
        "bc_check_id": "BC_AWS_LOGGING_46",
        "check_name": "Ensure CloudWatch log groups retains logs for at least 1 year",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "retention_in_days"
          ]
        },
        "code_block": [
          [
            208,
            "resource \"aws_cloudwatch_log_group\" \"flow_log\" {\n"
          ],
          [
            209,
            "  name              = \"vpc-flow-log-group\"\n"
          ],
          [
            210,
            "  retention_in_days = 30\n"
          ],
          [
            211,
            "\n"
          ],
          [
            212,
            "  tags = {\n"
          ],
          [
            213,
            "    Name = \"vpc-flow-log-group\"\n"
          ],
          [
            214,
            "  }\n"
          ],
          [
            215,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          208,
          215
        ],
        "resource": "aws_cloudwatch_log_group.flow_log",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetentionYear",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "vpc-flow-log-group"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-338",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_35",
        "bc_check_id": "BC_AWS_LOGGING_7",
        "check_name": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "kms_key_id"
          ]
        },
        "code_block": [
          [
            217,
            "resource \"aws_cloudtrail\" \"example\" {\n"
          ],
          [
            218,
            "  name                          = \"example-trail\"\n"
          ],
          [
            219,
            "  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            220,
            "  include_global_service_events = true\n"
          ],
          [
            221,
            "\n"
          ],
          [
            222,
            "  tags = {\n"
          ],
          [
            223,
            "    Name = \"example-trail\"\n"
          ],
          [
            224,
            "  }\n"
          ],
          [
            225,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          217,
          225
        ],
        "resource": "aws_cloudtrail.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudtrailEncryptionWithCMK",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-trail"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-7",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_36",
        "bc_check_id": "BC_AWS_LOGGING_2",
        "check_name": "Ensure CloudTrail log file validation is enabled",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "enable_log_file_validation"
          ]
        },
        "code_block": [
          [
            217,
            "resource \"aws_cloudtrail\" \"example\" {\n"
          ],
          [
            218,
            "  name                          = \"example-trail\"\n"
          ],
          [
            219,
            "  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            220,
            "  include_global_service_events = true\n"
          ],
          [
            221,
            "\n"
          ],
          [
            222,
            "  tags = {\n"
          ],
          [
            223,
            "    Name = \"example-trail\"\n"
          ],
          [
            224,
            "  }\n"
          ],
          [
            225,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          217,
          225
        ],
        "resource": "aws_cloudtrail.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudtrailLogValidation",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-trail"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-2",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_67",
        "bc_check_id": "BC_AWS_LOGGING_1",
        "check_name": "Ensure CloudTrail is enabled in all Regions",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "is_multi_region_trail"
          ]
        },
        "code_block": [
          [
            217,
            "resource \"aws_cloudtrail\" \"example\" {\n"
          ],
          [
            218,
            "  name                          = \"example-trail\"\n"
          ],
          [
            219,
            "  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            220,
            "  include_global_service_events = true\n"
          ],
          [
            221,
            "\n"
          ],
          [
            222,
            "  tags = {\n"
          ],
          [
            223,
            "    Name = \"example-trail\"\n"
          ],
          [
            224,
            "  }\n"
          ],
          [
            225,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          217,
          225
        ],
        "resource": "aws_cloudtrail.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudtrailMultiRegion",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-trail"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-1",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_252",
        "bc_check_id": "BC_AWS_GENERAL_175",
        "check_name": "Ensure CloudTrail defines an SNS Topic",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "sns_topic_name"
          ]
        },
        "code_block": [
          [
            217,
            "resource \"aws_cloudtrail\" \"example\" {\n"
          ],
          [
            218,
            "  name                          = \"example-trail\"\n"
          ],
          [
            219,
            "  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            220,
            "  include_global_service_events = true\n"
          ],
          [
            221,
            "\n"
          ],
          [
            222,
            "  tags = {\n"
          ],
          [
            223,
            "    Name = \"example-trail\"\n"
          ],
          [
            224,
            "  }\n"
          ],
          [
            225,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          217,
          225
        ],
        "resource": "aws_cloudtrail.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudtrailDefinesSNSTopic",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-trail"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-cloudtrail-defines-an-sns-topic",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_70",
        "bc_check_id": "BC_AWS_S3_23",
        "check_name": "Ensure S3 bucket does not allow an action with any Principal",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "policy"
          ]
        },
        "code_block": [
          [
            261,
            "resource \"aws_s3_bucket_policy\" \"cloudtrail_bucket\" {\n"
          ],
          [
            262,
            "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            263,
            "\n"
          ],
          [
            264,
            "  policy = jsonencode({\n"
          ],
          [
            265,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            266,
            "    Statement = [\n"
          ],
          [
            267,
            "      {\n"
          ],
          [
            268,
            "        Action = \"s3:*\"\n"
          ],
          [
            269,
            "        Effect = \"Allow\"\n"
          ],
          [
            270,
            "        Principal = {\n"
          ],
          [
            271,
            "          AWS = \"*\"\n"
          ],
          [
            272,
            "        }\n"
          ],
          [
            273,
            "        Resource = [\n"
          ],
          [
            274,
            "          \"arn:aws:s3:::cloudtrail-bucket-example/*\",\n"
          ],
          [
            275,
            "        ]\n"
          ],
          [
            276,
            "        Condition = {\n"
          ],
          [
            277,
            "          StringEquals = {\n"
          ],
          [
            278,
            "            \"aws:SourceArn\" = \"arn:aws:cloudtrail:us-east-1:${data.aws_caller_identity.current.account_id}:trail/example-trail\"\n"
          ],
          [
            279,
            "          }\n"
          ],
          [
            280,
            "        }\n"
          ],
          [
            281,
            "      }\n"
          ],
          [
            282,
            "    ]\n"
          ],
          [
            283,
            "  })\n"
          ],
          [
            284,
            "}"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          261,
          284
        ],
        "resource": "aws_s3_bucket_policy.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-23",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_12",
        "bc_check_id": "BC_AWS_NETWORKING_4",
        "check_name": "Ensure the default security group of every VPC restricts all traffic",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_vpc": {
              "main": {
                "__end_line__": 16,
                "__start_line__": 8,
                "cidr_block": [
                  "10.0.0.0/16"
                ],
                "enable_dns_hostnames": [
                  true
                ],
                "enable_dns_support": [
                  true
                ],
                "tags": [
                  {
                    "Name": "main-vpc"
                  }
                ],
                "__address__": "aws_vpc.main",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "ingress/to_port",
            "egress/to_port",
            "egress/cidr_blocks",
            "ingress/from_port",
            "resource_type",
            "egress/protocol",
            "ingress/self",
            "ingress/protocol",
            "egress/from_port"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_vpc\" \"main\" {\n"
          ],
          [
            9,
            "  cidr_block           = \"10.0.0.0/16\"\n"
          ],
          [
            10,
            "  enable_dns_support   = true\n"
          ],
          [
            11,
            "  enable_dns_hostnames = true\n"
          ],
          [
            12,
            "\n"
          ],
          [
            13,
            "  tags = {\n"
          ],
          [
            14,
            "    Name = \"main-vpc\"\n"
          ],
          [
            15,
            "  }\n"
          ],
          [
            16,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          16
        ],
        "resource": "aws_vpc.main",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "main-vpc"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-4",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_5",
        "bc_check_id": "BC_AWS_NETWORKING_51",
        "check_name": "Ensure that Security Groups are attached to another resource",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_security_group": {
              "ec2_sg": {
                "__end_line__": 91,
                "__start_line__": 69,
                "description": [
                  "Security group for EC2 instances"
                ],
                "egress": [
                  {
                    "cidr_blocks": [
                      [
                        "0.0.0.0/0"
                      ]
                    ],
                    "from_port": [
                      0
                    ],
                    "protocol": [
                      "-1"
                    ],
                    "to_port": [
                      0
                    ]
                  }
                ],
                "ingress": [
                  {
                    "cidr_blocks": [
                      [
                        "0.0.0.0/0"
                      ]
                    ],
                    "from_port": [
                      22
                    ],
                    "protocol": [
                      "tcp"
                    ],
                    "to_port": [
                      22
                    ]
                  }
                ],
                "name": [
                  "ec2-sg"
                ],
                "tags": [
                  {
                    "Name": "ec2-sg"
                  }
                ],
                "vpc_id": [
                  "aws_vpc.main.id"
                ],
                "__address__": "aws_security_group.ec2_sg",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "networking"
          ]
        },
        "code_block": [
          [
            69,
            "resource \"aws_security_group\" \"ec2_sg\" {\n"
          ],
          [
            70,
            "  name        = \"ec2-sg\"\n"
          ],
          [
            71,
            "  description = \"Security group for EC2 instances\"\n"
          ],
          [
            72,
            "  vpc_id      = aws_vpc.main.id\n"
          ],
          [
            73,
            "\n"
          ],
          [
            74,
            "  ingress {\n"
          ],
          [
            75,
            "    from_port   = 22\n"
          ],
          [
            76,
            "    to_port     = 22\n"
          ],
          [
            77,
            "    protocol    = \"tcp\"\n"
          ],
          [
            78,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            79,
            "  }\n"
          ],
          [
            80,
            "\n"
          ],
          [
            81,
            "  egress {\n"
          ],
          [
            82,
            "    from_port   = 0\n"
          ],
          [
            83,
            "    to_port     = 0\n"
          ],
          [
            84,
            "    protocol    = \"-1\"\n"
          ],
          [
            85,
            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
          ],
          [
            86,
            "  }\n"
          ],
          [
            87,
            "\n"
          ],
          [
            88,
            "  tags = {\n"
          ],
          [
            89,
            "    Name = \"ec2-sg\"\n"
          ],
          [
            90,
            "  }\n"
          ],
          [
            91,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          69,
          91
        ],
        "resource": "aws_security_group.ec2_sg",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-sg"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_62",
        "bc_check_id": "BC_AWS_LOGGING_36",
        "check_name": "Ensure S3 buckets should have event notifications enabled",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_61",
        "bc_check_id": "BC_AWS_LOGGING_35",
        "check_name": "Ensure that an S3 bucket has a lifecycle configuration",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "lifecycle_rule"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_41",
        "bc_check_id": "BC_AWS_IAM_69",
        "check_name": "Ensure an IAM role is attached to EC2 instance",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_instance": {
              "ec2_a": {
                "__end_line__": 121,
                "__start_line__": 108,
                "ami": [
                  "data.aws_ami.latest_amazon_linux_2.id"
                ],
                "instance_type": [
                  "t2.micro"
                ],
                "root_block_device": [
                  {
                    "volume_size": [
                      50
                    ],
                    "volume_type": [
                      "gp2"
                    ]
                  }
                ],
                "subnet_id": [
                  "aws_subnet.subnet_a.id"
                ],
                "tags": [
                  {
                    "Name": "ec2-a"
                  }
                ],
                "__address__": "aws_instance.ec2_a",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "iam_instance_profile"
          ]
        },
        "code_block": [
          [
            108,
            "resource \"aws_instance\" \"ec2_a\" {\n"
          ],
          [
            109,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            110,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            111,
            "  subnet_id     = aws_subnet.subnet_a.id\n"
          ],
          [
            112,
            "\n"
          ],
          [
            113,
            "  root_block_device {\n"
          ],
          [
            114,
            "    volume_size = 50\n"
          ],
          [
            115,
            "    volume_type = \"gp2\"\n"
          ],
          [
            116,
            "  }\n"
          ],
          [
            117,
            "\n"
          ],
          [
            118,
            "  tags = {\n"
          ],
          [
            119,
            "    Name = \"ec2-a\"\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          108,
          121
        ],
        "resource": "aws_instance.ec2_a",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-a"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_41",
        "bc_check_id": "BC_AWS_IAM_69",
        "check_name": "Ensure an IAM role is attached to EC2 instance",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_instance": {
              "ec2_b": {
                "__end_line__": 136,
                "__start_line__": 123,
                "ami": [
                  "data.aws_ami.latest_amazon_linux_2.id"
                ],
                "instance_type": [
                  "t2.micro"
                ],
                "root_block_device": [
                  {
                    "volume_size": [
                      50
                    ],
                    "volume_type": [
                      "gp2"
                    ]
                  }
                ],
                "subnet_id": [
                  "aws_subnet.subnet_b.id"
                ],
                "tags": [
                  {
                    "Name": "ec2-b"
                  }
                ],
                "__address__": "aws_instance.ec2_b",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "iam_instance_profile"
          ]
        },
        "code_block": [
          [
            123,
            "resource \"aws_instance\" \"ec2_b\" {\n"
          ],
          [
            124,
            "  ami           = data.aws_ami.latest_amazon_linux_2.id\n"
          ],
          [
            125,
            "  instance_type = \"t2.micro\"\n"
          ],
          [
            126,
            "  subnet_id     = aws_subnet.subnet_b.id\n"
          ],
          [
            127,
            "\n"
          ],
          [
            128,
            "  root_block_device {\n"
          ],
          [
            129,
            "    volume_size = 50\n"
          ],
          [
            130,
            "    volume_type = \"gp2\"\n"
          ],
          [
            131,
            "  }\n"
          ],
          [
            132,
            "\n"
          ],
          [
            133,
            "  tags = {\n"
          ],
          [
            134,
            "    Name = \"ec2-b\"\n"
          ],
          [
            135,
            "  }\n"
          ],
          [
            136,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          123,
          136
        ],
        "resource": "aws_instance.ec2_b",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "ec2-b"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV2_AWS_10",
        "bc_check_id": "BC_AWS_LOGGING_27",
        "check_name": "Ensure CloudTrail trails are integrated with CloudWatch Logs",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_cloudtrail": {
              "example": {
                "__end_line__": 225,
                "__start_line__": 217,
                "include_global_service_events": [
                  true
                ],
                "name": [
                  "example-trail"
                ],
                "s3_bucket_name": [
                  "aws_s3_bucket.cloudtrail_bucket.id"
                ],
                "tags": [
                  {
                    "Name": "example-trail"
                  }
                ],
                "__address__": "aws_cloudtrail.example",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "cloud_watch_logs_group_arn"
          ]
        },
        "code_block": [
          [
            217,
            "resource \"aws_cloudtrail\" \"example\" {\n"
          ],
          [
            218,
            "  name                          = \"example-trail\"\n"
          ],
          [
            219,
            "  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n"
          ],
          [
            220,
            "  include_global_service_events = true\n"
          ],
          [
            221,
            "\n"
          ],
          [
            222,
            "  tags = {\n"
          ],
          [
            223,
            "    Name = \"example-trail\"\n"
          ],
          [
            224,
            "  }\n"
          ],
          [
            225,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          217,
          225
        ],
        "resource": "aws_cloudtrail.example",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-trail"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-cloudtrail-trails-are-integrated-with-cloudwatch-logs",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_18",
        "bc_check_id": "BC_AWS_S3_13",
        "check_name": "Ensure the S3 bucket has access logging enabled",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "logging",
            "resource_type"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_145",
        "bc_check_id": "BC_AWS_GENERAL_56",
        "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "rule/apply_server_side_encryption_by_default/sse_algorithm",
            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              251,
              "resource \"aws_s3_bucket_server_side_encryption_configuration\" \"cloudtrail_bucket\" {\n"
            ],
            [
              252,
              "  bucket = aws_s3_bucket.cloudtrail_bucket.id\n"
            ],
            [
              253,
              "\n"
            ],
            [
              254,
              "  rule {\n"
            ],
            [
              255,
              "    apply_server_side_encryption_by_default {\n"
            ],
            [
              256,
              "      sse_algorithm = \"AES256\"\n"
            ],
            [
              257,
              "    }\n"
            ],
            [
              258,
              "  }\n"
            ],
            [
              259,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            251,
            259
          ],
          "resource": "aws_s3_bucket_server_side_encryption_configuration.cloudtrail_bucket",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      },
      {
        "check_id": "CKV_AWS_144",
        "bc_check_id": "BC_AWS_GENERAL_72",
        "check_name": "Ensure that S3 bucket has cross-region replication enabled",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cloudtrail_bucket": {
                "__end_line__": 233,
                "__start_line__": 227,
                "bucket": [
                  "cloudtrail-bucket-example"
                ],
                "tags": [
                  {
                    "Name": "cloudtrail-bucket"
                  }
                ],
                "__address__": "aws_s3_bucket.cloudtrail_bucket",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "replication_configuration/rules/*/status",
            "rule/*/status"
          ]
        },
        "code_block": [
          [
            227,
            "resource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n"
          ],
          [
            228,
            "  bucket = \"cloudtrail-bucket-example\"\n"
          ],
          [
            229,
            "\n"
          ],
          [
            230,
            "  tags = {\n"
          ],
          [
            231,
            "    Name = \"cloudtrail-bucket\"\n"
          ],
          [
            232,
            "  }\n"
          ],
          [
            233,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmpn6nb7ha4/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          227,
          233
        ],
        "resource": "aws_s3_bucket.cloudtrail_bucket",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "cloudtrail-bucket"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmpn6nb7ha4/main.tf"
      }
    ],
    "skipped_checks": [],
    "parsing_errors": []
  },
  "summary": {
    "passed": 39,
    "failed": 32,
    "skipped": 0,
    "parsing_errors": 0,
    "resource_count": 23,
    "checkov_version": "3.2.403"
  },
  "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
}