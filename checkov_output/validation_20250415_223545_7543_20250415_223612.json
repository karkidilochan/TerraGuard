{
  "check_type": "terraform",
  "results": {
    "passed_checks": [
      {
        "check_id": "CKV_AWS_339",
        "bc_check_id": "BC_AWS_KUBERNETES_6",
        "check_name": "Ensure EKS clusters run on a supported Kubernetes version",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "version"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_eks_cluster\" \"example\" {\n"
          ],
          [
            9,
            "  name     = \"example-cluster\"\n"
          ],
          [
            10,
            "  role_arn = aws_iam_role.eks_role.arn\n"
          ],
          [
            11,
            "\n"
          ],
          [
            12,
            "  vpc_config {\n"
          ],
          [
            13,
            "    subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n"
          ],
          [
            14,
            "  }\n"
          ],
          [
            15,
            "\n"
          ],
          [
            16,
            "  encryption_config {\n"
          ],
          [
            17,
            "    provider {\n"
          ],
          [
            18,
            "      key_arn = aws_kms_key.eks_key.arn\n"
          ],
          [
            19,
            "    }\n"
          ],
          [
            20,
            "    resources = [\"secrets\"]\n"
          ],
          [
            21,
            "  }\n"
          ],
          [
            22,
            "\n"
          ],
          [
            23,
            "  enabled_cluster_log_types = [\"api\", \"audit\", \"authenticator\"]\n"
          ],
          [
            24,
            "\n"
          ],
          [
            25,
            "  tags = {\n"
          ],
          [
            26,
            "    Name = \"example-cluster\"\n"
          ],
          [
            27,
            "  }\n"
          ],
          [
            28,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          28
        ],
        "resource": "aws_eks_cluster.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EKSPlatformVersion",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-cluster"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-kubernetes-policies/bc-aws-339",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_58",
        "bc_check_id": "BC_AWS_KUBERNETES_3",
        "check_name": "Ensure EKS Cluster has Secrets Encryption Enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "encryption_config/[0]/resources"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_eks_cluster\" \"example\" {\n"
          ],
          [
            9,
            "  name     = \"example-cluster\"\n"
          ],
          [
            10,
            "  role_arn = aws_iam_role.eks_role.arn\n"
          ],
          [
            11,
            "\n"
          ],
          [
            12,
            "  vpc_config {\n"
          ],
          [
            13,
            "    subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n"
          ],
          [
            14,
            "  }\n"
          ],
          [
            15,
            "\n"
          ],
          [
            16,
            "  encryption_config {\n"
          ],
          [
            17,
            "    provider {\n"
          ],
          [
            18,
            "      key_arn = aws_kms_key.eks_key.arn\n"
          ],
          [
            19,
            "    }\n"
          ],
          [
            20,
            "    resources = [\"secrets\"]\n"
          ],
          [
            21,
            "  }\n"
          ],
          [
            22,
            "\n"
          ],
          [
            23,
            "  enabled_cluster_log_types = [\"api\", \"audit\", \"authenticator\"]\n"
          ],
          [
            24,
            "\n"
          ],
          [
            25,
            "  tags = {\n"
          ],
          [
            26,
            "    Name = \"example-cluster\"\n"
          ],
          [
            27,
            "  }\n"
          ],
          [
            28,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          28
        ],
        "resource": "aws_eks_cluster.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EKSSecretsEncryption",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-cluster"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-kubernetes-policies/bc-aws-kubernetes-3",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_60",
        "bc_check_id": "BC_AWS_IAM_44",
        "check_name": "Ensure IAM role allows only specific services or principals to assume it",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "assume_role_policy"
          ]
        },
        "code_block": [
          [
            30,
            "resource \"aws_iam_role\" \"eks_role\" {\n"
          ],
          [
            31,
            "  name = \"eks-role\"\n"
          ],
          [
            32,
            "\n"
          ],
          [
            33,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            34,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            35,
            "    Statement = [\n"
          ],
          [
            36,
            "      {\n"
          ],
          [
            37,
            "        Effect = \"Allow\",\n"
          ],
          [
            38,
            "        Principal = {\n"
          ],
          [
            39,
            "          Service = \"eks.amazonaws.com\"\n"
          ],
          [
            40,
            "        },\n"
          ],
          [
            41,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            42,
            "      }\n"
          ],
          [
            43,
            "    ]\n"
          ],
          [
            44,
            "  })\n"
          ],
          [
            45,
            "\n"
          ],
          [
            46,
            "  inline_policy {\n"
          ],
          [
            47,
            "    name = \"eks-policy\"\n"
          ],
          [
            48,
            "    policy = jsonencode({\n"
          ],
          [
            49,
            "      Version = \"2012-10-17\",\n"
          ],
          [
            50,
            "      Statement = [\n"
          ],
          [
            51,
            "        {\n"
          ],
          [
            52,
            "          Effect = \"Allow\",\n"
          ],
          [
            53,
            "          Action = [\n"
          ],
          [
            54,
            "            \"ec2:Describe*\",\n"
          ],
          [
            55,
            "            \"elasticloadbalancing:Describe*\",\n"
          ],
          [
            56,
            "            \"ec2:AuthorizeSecurityGroupIngress\",\n"
          ],
          [
            57,
            "            \"ec2:RevokeSecurityGroupIngress\",\n"
          ],
          [
            58,
            "            \"ec2:CreateSecurityGroup\",\n"
          ],
          [
            59,
            "            \"ec2:DeleteSecurityGroup\",\n"
          ],
          [
            60,
            "            \"ec2:DescribeSecurityGroups\",\n"
          ],
          [
            61,
            "            \"ec2:AuthorizeSecurityGroupEgress\",\n"
          ],
          [
            62,
            "            \"ec2:RevokeSecurityGroupEgress\",\n"
          ],
          [
            63,
            "            \"ec2:CreateTags\",\n"
          ],
          [
            64,
            "            \"ec2:DeleteTags\",\n"
          ],
          [
            65,
            "            \"iam:PassRole\"\n"
          ],
          [
            66,
            "          ],\n"
          ],
          [
            67,
            "          Resource = \"*\"\n"
          ],
          [
            68,
            "        }\n"
          ],
          [
            69,
            "      ]\n"
          ],
          [
            70,
            "    })\n"
          ],
          [
            71,
            "  }\n"
          ],
          [
            72,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          30,
          72
        ],
        "resource": "aws_iam_role.eks_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_274",
        "bc_check_id": "BC_AWS_IAM_78",
        "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            30,
            "resource \"aws_iam_role\" \"eks_role\" {\n"
          ],
          [
            31,
            "  name = \"eks-role\"\n"
          ],
          [
            32,
            "\n"
          ],
          [
            33,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            34,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            35,
            "    Statement = [\n"
          ],
          [
            36,
            "      {\n"
          ],
          [
            37,
            "        Effect = \"Allow\",\n"
          ],
          [
            38,
            "        Principal = {\n"
          ],
          [
            39,
            "          Service = \"eks.amazonaws.com\"\n"
          ],
          [
            40,
            "        },\n"
          ],
          [
            41,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            42,
            "      }\n"
          ],
          [
            43,
            "    ]\n"
          ],
          [
            44,
            "  })\n"
          ],
          [
            45,
            "\n"
          ],
          [
            46,
            "  inline_policy {\n"
          ],
          [
            47,
            "    name = \"eks-policy\"\n"
          ],
          [
            48,
            "    policy = jsonencode({\n"
          ],
          [
            49,
            "      Version = \"2012-10-17\",\n"
          ],
          [
            50,
            "      Statement = [\n"
          ],
          [
            51,
            "        {\n"
          ],
          [
            52,
            "          Effect = \"Allow\",\n"
          ],
          [
            53,
            "          Action = [\n"
          ],
          [
            54,
            "            \"ec2:Describe*\",\n"
          ],
          [
            55,
            "            \"elasticloadbalancing:Describe*\",\n"
          ],
          [
            56,
            "            \"ec2:AuthorizeSecurityGroupIngress\",\n"
          ],
          [
            57,
            "            \"ec2:RevokeSecurityGroupIngress\",\n"
          ],
          [
            58,
            "            \"ec2:CreateSecurityGroup\",\n"
          ],
          [
            59,
            "            \"ec2:DeleteSecurityGroup\",\n"
          ],
          [
            60,
            "            \"ec2:DescribeSecurityGroups\",\n"
          ],
          [
            61,
            "            \"ec2:AuthorizeSecurityGroupEgress\",\n"
          ],
          [
            62,
            "            \"ec2:RevokeSecurityGroupEgress\",\n"
          ],
          [
            63,
            "            \"ec2:CreateTags\",\n"
          ],
          [
            64,
            "            \"ec2:DeleteTags\",\n"
          ],
          [
            65,
            "            \"iam:PassRole\"\n"
          ],
          [
            66,
            "          ],\n"
          ],
          [
            67,
            "          Resource = \"*\"\n"
          ],
          [
            68,
            "        }\n"
          ],
          [
            69,
            "      ]\n"
          ],
          [
            70,
            "    })\n"
          ],
          [
            71,
            "  }\n"
          ],
          [
            72,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          30,
          72
        ],
        "resource": "aws_iam_role.eks_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_61",
        "bc_check_id": "BC_AWS_IAM_45",
        "check_name": "Ensure AWS IAM policy does not allow assume role permission across all services",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "assume_role_policy"
          ]
        },
        "code_block": [
          [
            30,
            "resource \"aws_iam_role\" \"eks_role\" {\n"
          ],
          [
            31,
            "  name = \"eks-role\"\n"
          ],
          [
            32,
            "\n"
          ],
          [
            33,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            34,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            35,
            "    Statement = [\n"
          ],
          [
            36,
            "      {\n"
          ],
          [
            37,
            "        Effect = \"Allow\",\n"
          ],
          [
            38,
            "        Principal = {\n"
          ],
          [
            39,
            "          Service = \"eks.amazonaws.com\"\n"
          ],
          [
            40,
            "        },\n"
          ],
          [
            41,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            42,
            "      }\n"
          ],
          [
            43,
            "    ]\n"
          ],
          [
            44,
            "  })\n"
          ],
          [
            45,
            "\n"
          ],
          [
            46,
            "  inline_policy {\n"
          ],
          [
            47,
            "    name = \"eks-policy\"\n"
          ],
          [
            48,
            "    policy = jsonencode({\n"
          ],
          [
            49,
            "      Version = \"2012-10-17\",\n"
          ],
          [
            50,
            "      Statement = [\n"
          ],
          [
            51,
            "        {\n"
          ],
          [
            52,
            "          Effect = \"Allow\",\n"
          ],
          [
            53,
            "          Action = [\n"
          ],
          [
            54,
            "            \"ec2:Describe*\",\n"
          ],
          [
            55,
            "            \"elasticloadbalancing:Describe*\",\n"
          ],
          [
            56,
            "            \"ec2:AuthorizeSecurityGroupIngress\",\n"
          ],
          [
            57,
            "            \"ec2:RevokeSecurityGroupIngress\",\n"
          ],
          [
            58,
            "            \"ec2:CreateSecurityGroup\",\n"
          ],
          [
            59,
            "            \"ec2:DeleteSecurityGroup\",\n"
          ],
          [
            60,
            "            \"ec2:DescribeSecurityGroups\",\n"
          ],
          [
            61,
            "            \"ec2:AuthorizeSecurityGroupEgress\",\n"
          ],
          [
            62,
            "            \"ec2:RevokeSecurityGroupEgress\",\n"
          ],
          [
            63,
            "            \"ec2:CreateTags\",\n"
          ],
          [
            64,
            "            \"ec2:DeleteTags\",\n"
          ],
          [
            65,
            "            \"iam:PassRole\"\n"
          ],
          [
            66,
            "          ],\n"
          ],
          [
            67,
            "          Resource = \"*\"\n"
          ],
          [
            68,
            "        }\n"
          ],
          [
            69,
            "      ]\n"
          ],
          [
            70,
            "    })\n"
          ],
          [
            71,
            "  }\n"
          ],
          [
            72,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          30,
          72
        ],
        "resource": "aws_iam_role.eks_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_227",
        "bc_check_id": "BC_AWS_GENERAL_122",
        "check_name": "Ensure KMS key is enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "is_enabled"
          ]
        },
        "code_block": [
          [
            79,
            "resource \"aws_kms_key\" \"eks_key\" {\n"
          ],
          [
            80,
            "  description             = \"KMS key for EKS cluster\"\n"
          ],
          [
            81,
            "  deletion_window_in_days = 30\n"
          ],
          [
            82,
            "  enable_key_rotation     = true\n"
          ],
          [
            83,
            "\n"
          ],
          [
            84,
            "  policy = jsonencode({\n"
          ],
          [
            85,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            86,
            "    Statement = [\n"
          ],
          [
            87,
            "      {\n"
          ],
          [
            88,
            "        Effect = \"Allow\",\n"
          ],
          [
            89,
            "        Principal = {\n"
          ],
          [
            90,
            "          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n"
          ],
          [
            91,
            "        },\n"
          ],
          [
            92,
            "        Action   = \"kms:*\",\n"
          ],
          [
            93,
            "        Resource = \"*\"\n"
          ],
          [
            94,
            "      }\n"
          ],
          [
            95,
            "    ]\n"
          ],
          [
            96,
            "  })\n"
          ],
          [
            97,
            "}"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          79,
          97
        ],
        "resource": "aws_kms_key.eks_key",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.KMSKeyIsEnabled",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-key-management-service-kms-key-is-enabled",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_33",
        "bc_check_id": "BC_AWS_IAM_63",
        "check_name": "Ensure KMS key policy does not contain wildcard (*) principal",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "policy/[0]/Statement"
          ]
        },
        "code_block": [
          [
            79,
            "resource \"aws_kms_key\" \"eks_key\" {\n"
          ],
          [
            80,
            "  description             = \"KMS key for EKS cluster\"\n"
          ],
          [
            81,
            "  deletion_window_in_days = 30\n"
          ],
          [
            82,
            "  enable_key_rotation     = true\n"
          ],
          [
            83,
            "\n"
          ],
          [
            84,
            "  policy = jsonencode({\n"
          ],
          [
            85,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            86,
            "    Statement = [\n"
          ],
          [
            87,
            "      {\n"
          ],
          [
            88,
            "        Effect = \"Allow\",\n"
          ],
          [
            89,
            "        Principal = {\n"
          ],
          [
            90,
            "          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n"
          ],
          [
            91,
            "        },\n"
          ],
          [
            92,
            "        Action   = \"kms:*\",\n"
          ],
          [
            93,
            "        Resource = \"*\"\n"
          ],
          [
            94,
            "      }\n"
          ],
          [
            95,
            "    ]\n"
          ],
          [
            96,
            "  })\n"
          ],
          [
            97,
            "}"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          79,
          97
        ],
        "resource": "aws_kms_key.eks_key",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.KMSKeyWildcardPrincipal",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-kms-key-policy-does-not-contain-wildcard-principal",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_7",
        "bc_check_id": "BC_AWS_LOGGING_8",
        "check_name": "Ensure rotation for customer created CMKs is enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "enable_key_rotation"
          ]
        },
        "code_block": [
          [
            79,
            "resource \"aws_kms_key\" \"eks_key\" {\n"
          ],
          [
            80,
            "  description             = \"KMS key for EKS cluster\"\n"
          ],
          [
            81,
            "  deletion_window_in_days = 30\n"
          ],
          [
            82,
            "  enable_key_rotation     = true\n"
          ],
          [
            83,
            "\n"
          ],
          [
            84,
            "  policy = jsonencode({\n"
          ],
          [
            85,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            86,
            "    Statement = [\n"
          ],
          [
            87,
            "      {\n"
          ],
          [
            88,
            "        Effect = \"Allow\",\n"
          ],
          [
            89,
            "        Principal = {\n"
          ],
          [
            90,
            "          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n"
          ],
          [
            91,
            "        },\n"
          ],
          [
            92,
            "        Action   = \"kms:*\",\n"
          ],
          [
            93,
            "        Resource = \"*\"\n"
          ],
          [
            94,
            "      }\n"
          ],
          [
            95,
            "    ]\n"
          ],
          [
            96,
            "  })\n"
          ],
          [
            97,
            "}"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          79,
          97
        ],
        "resource": "aws_kms_key.eks_key",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-8",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_41",
        "bc_check_id": "BC_AWS_SECRETS_5",
        "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            1,
            "provider \"aws\" {\n"
          ],
          [
            2,
            "  region = \"us-west-2\"\n"
          ],
          [
            3,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          1,
          3
        ],
        "resource": "aws.default",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.provider.aws.credentials",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV2_AWS_56",
        "bc_check_id": "BC_AWS_IAM_75",
        "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_iam_role": {
              "eks_role": {
                "__end_line__": 72,
                "__start_line__": 30,
                "assume_role_policy": [
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "eks.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                  }
                ],
                "inline_policy": [
                  {
                    "name": [
                      "eks-policy"
                    ],
                    "policy": [
                      {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Action": [
                              "ec2:Describe*",
                              "elasticloadbalancing:Describe*",
                              "ec2:AuthorizeSecurityGroupIngress",
                              "ec2:RevokeSecurityGroupIngress",
                              "ec2:CreateSecurityGroup",
                              "ec2:DeleteSecurityGroup",
                              "ec2:DescribeSecurityGroups",
                              "ec2:AuthorizeSecurityGroupEgress",
                              "ec2:RevokeSecurityGroupEgress",
                              "ec2:CreateTags",
                              "ec2:DeleteTags",
                              "iam:PassRole"
                            ],
                            "Resource": "*"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "name": [
                  "eks-role"
                ],
                "__address__": "aws_iam_role.eks_role",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "arn",
            "policy_arn",
            "managed_policy_arn",
            "name",
            "managed_policy_arns/*"
          ]
        },
        "code_block": [
          [
            30,
            "resource \"aws_iam_role\" \"eks_role\" {\n"
          ],
          [
            31,
            "  name = \"eks-role\"\n"
          ],
          [
            32,
            "\n"
          ],
          [
            33,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            34,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            35,
            "    Statement = [\n"
          ],
          [
            36,
            "      {\n"
          ],
          [
            37,
            "        Effect = \"Allow\",\n"
          ],
          [
            38,
            "        Principal = {\n"
          ],
          [
            39,
            "          Service = \"eks.amazonaws.com\"\n"
          ],
          [
            40,
            "        },\n"
          ],
          [
            41,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            42,
            "      }\n"
          ],
          [
            43,
            "    ]\n"
          ],
          [
            44,
            "  })\n"
          ],
          [
            45,
            "\n"
          ],
          [
            46,
            "  inline_policy {\n"
          ],
          [
            47,
            "    name = \"eks-policy\"\n"
          ],
          [
            48,
            "    policy = jsonencode({\n"
          ],
          [
            49,
            "      Version = \"2012-10-17\",\n"
          ],
          [
            50,
            "      Statement = [\n"
          ],
          [
            51,
            "        {\n"
          ],
          [
            52,
            "          Effect = \"Allow\",\n"
          ],
          [
            53,
            "          Action = [\n"
          ],
          [
            54,
            "            \"ec2:Describe*\",\n"
          ],
          [
            55,
            "            \"elasticloadbalancing:Describe*\",\n"
          ],
          [
            56,
            "            \"ec2:AuthorizeSecurityGroupIngress\",\n"
          ],
          [
            57,
            "            \"ec2:RevokeSecurityGroupIngress\",\n"
          ],
          [
            58,
            "            \"ec2:CreateSecurityGroup\",\n"
          ],
          [
            59,
            "            \"ec2:DeleteSecurityGroup\",\n"
          ],
          [
            60,
            "            \"ec2:DescribeSecurityGroups\",\n"
          ],
          [
            61,
            "            \"ec2:AuthorizeSecurityGroupEgress\",\n"
          ],
          [
            62,
            "            \"ec2:RevokeSecurityGroupEgress\",\n"
          ],
          [
            63,
            "            \"ec2:CreateTags\",\n"
          ],
          [
            64,
            "            \"ec2:DeleteTags\",\n"
          ],
          [
            65,
            "            \"iam:PassRole\"\n"
          ],
          [
            66,
            "          ],\n"
          ],
          [
            67,
            "          Resource = \"*\"\n"
          ],
          [
            68,
            "        }\n"
          ],
          [
            69,
            "      ]\n"
          ],
          [
            70,
            "    })\n"
          ],
          [
            71,
            "  }\n"
          ],
          [
            72,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          30,
          72
        ],
        "resource": "aws_iam_role.eks_role",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV2_AWS_64",
        "bc_check_id": "BC_AWS_IAM_76",
        "check_name": "Ensure KMS key Policy is defined",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_kms_key": {
              "eks_key": {
                "__end_line__": 97,
                "__start_line__": 79,
                "deletion_window_in_days": [
                  30
                ],
                "description": [
                  "KMS key for EKS cluster"
                ],
                "enable_key_rotation": [
                  true
                ],
                "policy": [
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "AWS": "arn:aws:iam::data.aws_caller_identity.current.account_id:root"
                        },
                        "Action": "kms:*",
                        "Resource": "*"
                      }
                    ]
                  }
                ],
                "__address__": "aws_kms_key.eks_key",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "policy"
          ]
        },
        "code_block": [
          [
            79,
            "resource \"aws_kms_key\" \"eks_key\" {\n"
          ],
          [
            80,
            "  description             = \"KMS key for EKS cluster\"\n"
          ],
          [
            81,
            "  deletion_window_in_days = 30\n"
          ],
          [
            82,
            "  enable_key_rotation     = true\n"
          ],
          [
            83,
            "\n"
          ],
          [
            84,
            "  policy = jsonencode({\n"
          ],
          [
            85,
            "    Version = \"2012-10-17\",\n"
          ],
          [
            86,
            "    Statement = [\n"
          ],
          [
            87,
            "      {\n"
          ],
          [
            88,
            "        Effect = \"Allow\",\n"
          ],
          [
            89,
            "        Principal = {\n"
          ],
          [
            90,
            "          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n"
          ],
          [
            91,
            "        },\n"
          ],
          [
            92,
            "        Action   = \"kms:*\",\n"
          ],
          [
            93,
            "        Resource = \"*\"\n"
          ],
          [
            94,
            "      }\n"
          ],
          [
            95,
            "    ]\n"
          ],
          [
            96,
            "  })\n"
          ],
          [
            97,
            "}"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          79,
          97
        ],
        "resource": "aws_kms_key.eks_key",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-64",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      }
    ],
    "failed_checks": [
      {
        "check_id": "CKV_AWS_37",
        "bc_check_id": "BC_AWS_KUBERNETES_4",
        "check_name": "Ensure Amazon EKS control plane logging is enabled for all log types",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "enabled_cluster_log_types"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_eks_cluster\" \"example\" {\n"
          ],
          [
            9,
            "  name     = \"example-cluster\"\n"
          ],
          [
            10,
            "  role_arn = aws_iam_role.eks_role.arn\n"
          ],
          [
            11,
            "\n"
          ],
          [
            12,
            "  vpc_config {\n"
          ],
          [
            13,
            "    subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n"
          ],
          [
            14,
            "  }\n"
          ],
          [
            15,
            "\n"
          ],
          [
            16,
            "  encryption_config {\n"
          ],
          [
            17,
            "    provider {\n"
          ],
          [
            18,
            "      key_arn = aws_kms_key.eks_key.arn\n"
          ],
          [
            19,
            "    }\n"
          ],
          [
            20,
            "    resources = [\"secrets\"]\n"
          ],
          [
            21,
            "  }\n"
          ],
          [
            22,
            "\n"
          ],
          [
            23,
            "  enabled_cluster_log_types = [\"api\", \"audit\", \"authenticator\"]\n"
          ],
          [
            24,
            "\n"
          ],
          [
            25,
            "  tags = {\n"
          ],
          [
            26,
            "    Name = \"example-cluster\"\n"
          ],
          [
            27,
            "  }\n"
          ],
          [
            28,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          28
        ],
        "resource": "aws_eks_cluster.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EKSControlPlaneLogging",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-cluster"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-kubernetes-policies/bc-aws-kubernetes-4",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_39",
        "bc_check_id": "BC_AWS_KUBERNETES_2",
        "check_name": "Ensure Amazon EKS public endpoint disabled",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "vpc_config/[0]/endpoint_public_access"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_eks_cluster\" \"example\" {\n"
          ],
          [
            9,
            "  name     = \"example-cluster\"\n"
          ],
          [
            10,
            "  role_arn = aws_iam_role.eks_role.arn\n"
          ],
          [
            11,
            "\n"
          ],
          [
            12,
            "  vpc_config {\n"
          ],
          [
            13,
            "    subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n"
          ],
          [
            14,
            "  }\n"
          ],
          [
            15,
            "\n"
          ],
          [
            16,
            "  encryption_config {\n"
          ],
          [
            17,
            "    provider {\n"
          ],
          [
            18,
            "      key_arn = aws_kms_key.eks_key.arn\n"
          ],
          [
            19,
            "    }\n"
          ],
          [
            20,
            "    resources = [\"secrets\"]\n"
          ],
          [
            21,
            "  }\n"
          ],
          [
            22,
            "\n"
          ],
          [
            23,
            "  enabled_cluster_log_types = [\"api\", \"audit\", \"authenticator\"]\n"
          ],
          [
            24,
            "\n"
          ],
          [
            25,
            "  tags = {\n"
          ],
          [
            26,
            "    Name = \"example-cluster\"\n"
          ],
          [
            27,
            "  }\n"
          ],
          [
            28,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          28
        ],
        "resource": "aws_eks_cluster.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EKSPublicAccess",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-cluster"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-kubernetes-policies/bc-aws-kubernetes-2",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      },
      {
        "check_id": "CKV_AWS_38",
        "bc_check_id": "BC_AWS_KUBERNETES_1",
        "check_name": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            8,
            "resource \"aws_eks_cluster\" \"example\" {\n"
          ],
          [
            9,
            "  name     = \"example-cluster\"\n"
          ],
          [
            10,
            "  role_arn = aws_iam_role.eks_role.arn\n"
          ],
          [
            11,
            "\n"
          ],
          [
            12,
            "  vpc_config {\n"
          ],
          [
            13,
            "    subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n"
          ],
          [
            14,
            "  }\n"
          ],
          [
            15,
            "\n"
          ],
          [
            16,
            "  encryption_config {\n"
          ],
          [
            17,
            "    provider {\n"
          ],
          [
            18,
            "      key_arn = aws_kms_key.eks_key.arn\n"
          ],
          [
            19,
            "    }\n"
          ],
          [
            20,
            "    resources = [\"secrets\"]\n"
          ],
          [
            21,
            "  }\n"
          ],
          [
            22,
            "\n"
          ],
          [
            23,
            "  enabled_cluster_log_types = [\"api\", \"audit\", \"authenticator\"]\n"
          ],
          [
            24,
            "\n"
          ],
          [
            25,
            "  tags = {\n"
          ],
          [
            26,
            "    Name = \"example-cluster\"\n"
          ],
          [
            27,
            "  }\n"
          ],
          [
            28,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp9imsvr21/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          28
        ],
        "resource": "aws_eks_cluster.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.EKSPublicAccessCIDR",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-cluster"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-kubernetes-policies/bc-aws-kubernetes-1",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp9imsvr21/main.tf"
      }
    ],
    "skipped_checks": [],
    "parsing_errors": []
  },
  "summary": {
    "passed": 11,
    "failed": 3,
    "skipped": 0,
    "parsing_errors": 0,
    "resource_count": 4,
    "checkov_version": "3.2.403"
  },
  "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
}