{
  "check_type": "terraform",
  "results": {
    "passed_checks": [
      {
        "check_id": "CKV_AWS_41",
        "bc_check_id": "BC_AWS_SECRETS_5",
        "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            1,
            "provider \"aws\" {\n"
          ],
          [
            2,
            "  region = \"us-east-1\"\n"
          ],
          [
            3,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          1,
          3
        ],
        "resource": "aws.default",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.provider.aws.credentials",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_60",
        "bc_check_id": "BC_AWS_IAM_44",
        "check_name": "Ensure IAM role allows only specific services or principals to assume it",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "assume_role_policy"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_iam_role\" \"codebuild_role\" {\n"
          ],
          [
            9,
            "  name = \"codebuild-role\"\n"
          ],
          [
            10,
            "\n"
          ],
          [
            11,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            12,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            13,
            "    Statement = [\n"
          ],
          [
            14,
            "      {\n"
          ],
          [
            15,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            16,
            "        Effect = \"Allow\"\n"
          ],
          [
            17,
            "        Principal = {\n"
          ],
          [
            18,
            "          Service = \"codebuild.amazonaws.com\"\n"
          ],
          [
            19,
            "        }\n"
          ],
          [
            20,
            "      }\n"
          ],
          [
            21,
            "    ]\n"
          ],
          [
            22,
            "  })\n"
          ],
          [
            23,
            "\n"
          ],
          [
            24,
            "  inline_policy {\n"
          ],
          [
            25,
            "    name = \"codebuild-policy\"\n"
          ],
          [
            26,
            "\n"
          ],
          [
            27,
            "    policy = jsonencode({\n"
          ],
          [
            28,
            "      Version = \"2012-10-17\"\n"
          ],
          [
            29,
            "      Statement = [\n"
          ],
          [
            30,
            "        {\n"
          ],
          [
            31,
            "          Action = [\n"
          ],
          [
            32,
            "            \"logs:CreateLogGroup\",\n"
          ],
          [
            33,
            "            \"logs:CreateLogStream\",\n"
          ],
          [
            34,
            "            \"logs:PutLogEvents\",\n"
          ],
          [
            35,
            "            \"s3:PutObject\",\n"
          ],
          [
            36,
            "            \"s3:GetObject\",\n"
          ],
          [
            37,
            "            \"s3:GetObjectVersion\",\n"
          ],
          [
            38,
            "            \"s3:ListBucket\",\n"
          ],
          [
            39,
            "            \"s3:ListBucketVersions\",\n"
          ],
          [
            40,
            "            \"ecr:GetDownloadUrlForLayer\",\n"
          ],
          [
            41,
            "            \"ecr:BatchGetImage\",\n"
          ],
          [
            42,
            "            \"ecr:BatchCheckLayerAvailability\",\n"
          ],
          [
            43,
            "            \"ecr:GetAuthorizationToken\",\n"
          ],
          [
            44,
            "            \"ecr:InitiateLayerUpload\",\n"
          ],
          [
            45,
            "            \"ecr:UploadLayerPart\",\n"
          ],
          [
            46,
            "            \"ecr:CompleteLayerUpload\",\n"
          ],
          [
            47,
            "            \"ecr:PutImage\",\n"
          ],
          [
            48,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            49,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            50,
            "            \"ecr:GetRepositoryPolicy\",\n"
          ],
          [
            51,
            "            \"ecr:ListImages\",\n"
          ],
          [
            52,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            53,
            "            \"ecr:DeleteRepository\",\n"
          ],
          [
            54,
            "            \"ecr:DescribeImages\",\n"
          ],
          [
            55,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            56,
            "            \"ecr:ListTagsForResource\"\n"
          ],
          [
            57,
            "          ]\n"
          ],
          [
            58,
            "          Effect   = \"Allow\"\n"
          ],
          [
            59,
            "          Resource = \"*\"\n"
          ],
          [
            60,
            "        }\n"
          ],
          [
            61,
            "      ]\n"
          ],
          [
            62,
            "    })\n"
          ],
          [
            63,
            "  }\n"
          ],
          [
            64,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          64
        ],
        "resource": "aws_iam_role.codebuild_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_274",
        "bc_check_id": "BC_AWS_IAM_78",
        "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": []
        },
        "code_block": [
          [
            8,
            "resource \"aws_iam_role\" \"codebuild_role\" {\n"
          ],
          [
            9,
            "  name = \"codebuild-role\"\n"
          ],
          [
            10,
            "\n"
          ],
          [
            11,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            12,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            13,
            "    Statement = [\n"
          ],
          [
            14,
            "      {\n"
          ],
          [
            15,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            16,
            "        Effect = \"Allow\"\n"
          ],
          [
            17,
            "        Principal = {\n"
          ],
          [
            18,
            "          Service = \"codebuild.amazonaws.com\"\n"
          ],
          [
            19,
            "        }\n"
          ],
          [
            20,
            "      }\n"
          ],
          [
            21,
            "    ]\n"
          ],
          [
            22,
            "  })\n"
          ],
          [
            23,
            "\n"
          ],
          [
            24,
            "  inline_policy {\n"
          ],
          [
            25,
            "    name = \"codebuild-policy\"\n"
          ],
          [
            26,
            "\n"
          ],
          [
            27,
            "    policy = jsonencode({\n"
          ],
          [
            28,
            "      Version = \"2012-10-17\"\n"
          ],
          [
            29,
            "      Statement = [\n"
          ],
          [
            30,
            "        {\n"
          ],
          [
            31,
            "          Action = [\n"
          ],
          [
            32,
            "            \"logs:CreateLogGroup\",\n"
          ],
          [
            33,
            "            \"logs:CreateLogStream\",\n"
          ],
          [
            34,
            "            \"logs:PutLogEvents\",\n"
          ],
          [
            35,
            "            \"s3:PutObject\",\n"
          ],
          [
            36,
            "            \"s3:GetObject\",\n"
          ],
          [
            37,
            "            \"s3:GetObjectVersion\",\n"
          ],
          [
            38,
            "            \"s3:ListBucket\",\n"
          ],
          [
            39,
            "            \"s3:ListBucketVersions\",\n"
          ],
          [
            40,
            "            \"ecr:GetDownloadUrlForLayer\",\n"
          ],
          [
            41,
            "            \"ecr:BatchGetImage\",\n"
          ],
          [
            42,
            "            \"ecr:BatchCheckLayerAvailability\",\n"
          ],
          [
            43,
            "            \"ecr:GetAuthorizationToken\",\n"
          ],
          [
            44,
            "            \"ecr:InitiateLayerUpload\",\n"
          ],
          [
            45,
            "            \"ecr:UploadLayerPart\",\n"
          ],
          [
            46,
            "            \"ecr:CompleteLayerUpload\",\n"
          ],
          [
            47,
            "            \"ecr:PutImage\",\n"
          ],
          [
            48,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            49,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            50,
            "            \"ecr:GetRepositoryPolicy\",\n"
          ],
          [
            51,
            "            \"ecr:ListImages\",\n"
          ],
          [
            52,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            53,
            "            \"ecr:DeleteRepository\",\n"
          ],
          [
            54,
            "            \"ecr:DescribeImages\",\n"
          ],
          [
            55,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            56,
            "            \"ecr:ListTagsForResource\"\n"
          ],
          [
            57,
            "          ]\n"
          ],
          [
            58,
            "          Effect   = \"Allow\"\n"
          ],
          [
            59,
            "          Resource = \"*\"\n"
          ],
          [
            60,
            "        }\n"
          ],
          [
            61,
            "      ]\n"
          ],
          [
            62,
            "    })\n"
          ],
          [
            63,
            "  }\n"
          ],
          [
            64,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          64
        ],
        "resource": "aws_iam_role.codebuild_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_61",
        "bc_check_id": "BC_AWS_IAM_45",
        "check_name": "Ensure AWS IAM policy does not allow assume role permission across all services",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "assume_role_policy"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_iam_role\" \"codebuild_role\" {\n"
          ],
          [
            9,
            "  name = \"codebuild-role\"\n"
          ],
          [
            10,
            "\n"
          ],
          [
            11,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            12,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            13,
            "    Statement = [\n"
          ],
          [
            14,
            "      {\n"
          ],
          [
            15,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            16,
            "        Effect = \"Allow\"\n"
          ],
          [
            17,
            "        Principal = {\n"
          ],
          [
            18,
            "          Service = \"codebuild.amazonaws.com\"\n"
          ],
          [
            19,
            "        }\n"
          ],
          [
            20,
            "      }\n"
          ],
          [
            21,
            "    ]\n"
          ],
          [
            22,
            "  })\n"
          ],
          [
            23,
            "\n"
          ],
          [
            24,
            "  inline_policy {\n"
          ],
          [
            25,
            "    name = \"codebuild-policy\"\n"
          ],
          [
            26,
            "\n"
          ],
          [
            27,
            "    policy = jsonencode({\n"
          ],
          [
            28,
            "      Version = \"2012-10-17\"\n"
          ],
          [
            29,
            "      Statement = [\n"
          ],
          [
            30,
            "        {\n"
          ],
          [
            31,
            "          Action = [\n"
          ],
          [
            32,
            "            \"logs:CreateLogGroup\",\n"
          ],
          [
            33,
            "            \"logs:CreateLogStream\",\n"
          ],
          [
            34,
            "            \"logs:PutLogEvents\",\n"
          ],
          [
            35,
            "            \"s3:PutObject\",\n"
          ],
          [
            36,
            "            \"s3:GetObject\",\n"
          ],
          [
            37,
            "            \"s3:GetObjectVersion\",\n"
          ],
          [
            38,
            "            \"s3:ListBucket\",\n"
          ],
          [
            39,
            "            \"s3:ListBucketVersions\",\n"
          ],
          [
            40,
            "            \"ecr:GetDownloadUrlForLayer\",\n"
          ],
          [
            41,
            "            \"ecr:BatchGetImage\",\n"
          ],
          [
            42,
            "            \"ecr:BatchCheckLayerAvailability\",\n"
          ],
          [
            43,
            "            \"ecr:GetAuthorizationToken\",\n"
          ],
          [
            44,
            "            \"ecr:InitiateLayerUpload\",\n"
          ],
          [
            45,
            "            \"ecr:UploadLayerPart\",\n"
          ],
          [
            46,
            "            \"ecr:CompleteLayerUpload\",\n"
          ],
          [
            47,
            "            \"ecr:PutImage\",\n"
          ],
          [
            48,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            49,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            50,
            "            \"ecr:GetRepositoryPolicy\",\n"
          ],
          [
            51,
            "            \"ecr:ListImages\",\n"
          ],
          [
            52,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            53,
            "            \"ecr:DeleteRepository\",\n"
          ],
          [
            54,
            "            \"ecr:DescribeImages\",\n"
          ],
          [
            55,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            56,
            "            \"ecr:ListTagsForResource\"\n"
          ],
          [
            57,
            "          ]\n"
          ],
          [
            58,
            "          Effect   = \"Allow\"\n"
          ],
          [
            59,
            "          Resource = \"*\"\n"
          ],
          [
            60,
            "        }\n"
          ],
          [
            61,
            "      ]\n"
          ],
          [
            62,
            "    })\n"
          ],
          [
            63,
            "  }\n"
          ],
          [
            64,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          64
        ],
        "resource": "aws_iam_role.codebuild_role",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_311",
        "bc_check_id": "BC_AWS_GENERAL_223",
        "check_name": "Ensure that CodeBuild S3 logs are encrypted",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "logs_config/[0]/s3_logs/[0]/encryption_disabled"
          ]
        },
        "code_block": [
          [
            66,
            "resource \"aws_codebuild_project\" \"example\" {\n"
          ],
          [
            67,
            "  name         = \"example-codebuild-project\"\n"
          ],
          [
            68,
            "  description  = \"Example CodeBuild project\"\n"
          ],
          [
            69,
            "  service_role = aws_iam_role.codebuild_role.arn\n"
          ],
          [
            70,
            "\n"
          ],
          [
            71,
            "  artifacts {\n"
          ],
          [
            72,
            "    type = \"NO_ARTIFACTS\"\n"
          ],
          [
            73,
            "  }\n"
          ],
          [
            74,
            "\n"
          ],
          [
            75,
            "  cache {\n"
          ],
          [
            76,
            "    type     = \"S3\"\n"
          ],
          [
            77,
            "    location = aws_s3_bucket.cache.bucket\n"
          ],
          [
            78,
            "  }\n"
          ],
          [
            79,
            "\n"
          ],
          [
            80,
            "  environment {\n"
          ],
          [
            81,
            "    compute_type                = \"BUILD_GENERAL1_SMALL\"\n"
          ],
          [
            82,
            "    image                       = \"aws/codebuild/standard:4.0\"\n"
          ],
          [
            83,
            "    type                        = \"LINUX_CONTAINER\"\n"
          ],
          [
            84,
            "    image_pull_credentials_type = \"CODEBUILD\"\n"
          ],
          [
            85,
            "    privileged_mode             = false\n"
          ],
          [
            86,
            "\n"
          ],
          [
            87,
            "    environment_variable {\n"
          ],
          [
            88,
            "      name  = \"ENV_VAR_NAME\"\n"
          ],
          [
            89,
            "      value = \"env_var_value\"\n"
          ],
          [
            90,
            "    }\n"
          ],
          [
            91,
            "  }\n"
          ],
          [
            92,
            "\n"
          ],
          [
            93,
            "  source {\n"
          ],
          [
            94,
            "    type      = \"GITHUB\"\n"
          ],
          [
            95,
            "    location  = \"https://github.com/example/repo.git\"\n"
          ],
          [
            96,
            "    buildspec = <<EOF\n"
          ],
          [
            97,
            "version: 0.2\n"
          ],
          [
            98,
            "\n"
          ],
          [
            99,
            "phases:\n"
          ],
          [
            100,
            "  install:\n"
          ],
          [
            101,
            "    commands:\n"
          ],
          [
            102,
            "      - echo Installing dependencies...\n"
          ],
          [
            103,
            "  pre_build:\n"
          ],
          [
            104,
            "    commands:\n"
          ],
          [
            105,
            "      - echo Running pre-build commands...\n"
          ],
          [
            106,
            "  build:\n"
          ],
          [
            107,
            "    commands:\n"
          ],
          [
            108,
            "      - echo Build started on `date`\n"
          ],
          [
            109,
            "  post_build:\n"
          ],
          [
            110,
            "    commands:\n"
          ],
          [
            111,
            "      - echo Build completed on `date`\n"
          ],
          [
            112,
            "EOF\n"
          ],
          [
            113,
            "  }\n"
          ],
          [
            114,
            "\n"
          ],
          [
            115,
            "  logs_config {\n"
          ],
          [
            116,
            "    cloudwatch_logs {\n"
          ],
          [
            117,
            "      group_name  = \"example-codebuild-logs\"\n"
          ],
          [
            118,
            "      stream_name = \"example-codebuild-stream\"\n"
          ],
          [
            119,
            "    }\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "\n"
          ],
          [
            122,
            "  tags = {\n"
          ],
          [
            123,
            "    Name = \"example-codebuild-project\"\n"
          ],
          [
            124,
            "  }\n"
          ],
          [
            125,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          66,
          125
        ],
        "resource": "aws_codebuild_project.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CodebuildS3LogsEncrypted",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-codebuild-project"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-311",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf",
        "breadcrumbs": {
          "cache.location": [
            {
              "type": "resource",
              "name": "aws_s3_bucket.cache",
              "path": "/tmp/tmp_1v5w2_s/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_314",
        "bc_check_id": "BC_AWS_LOGGING_41",
        "check_name": "Ensure CodeBuild project environments have a logging configuration",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "enabled_cloudwatch_logs_exports"
          ]
        },
        "code_block": [
          [
            66,
            "resource \"aws_codebuild_project\" \"example\" {\n"
          ],
          [
            67,
            "  name         = \"example-codebuild-project\"\n"
          ],
          [
            68,
            "  description  = \"Example CodeBuild project\"\n"
          ],
          [
            69,
            "  service_role = aws_iam_role.codebuild_role.arn\n"
          ],
          [
            70,
            "\n"
          ],
          [
            71,
            "  artifacts {\n"
          ],
          [
            72,
            "    type = \"NO_ARTIFACTS\"\n"
          ],
          [
            73,
            "  }\n"
          ],
          [
            74,
            "\n"
          ],
          [
            75,
            "  cache {\n"
          ],
          [
            76,
            "    type     = \"S3\"\n"
          ],
          [
            77,
            "    location = aws_s3_bucket.cache.bucket\n"
          ],
          [
            78,
            "  }\n"
          ],
          [
            79,
            "\n"
          ],
          [
            80,
            "  environment {\n"
          ],
          [
            81,
            "    compute_type                = \"BUILD_GENERAL1_SMALL\"\n"
          ],
          [
            82,
            "    image                       = \"aws/codebuild/standard:4.0\"\n"
          ],
          [
            83,
            "    type                        = \"LINUX_CONTAINER\"\n"
          ],
          [
            84,
            "    image_pull_credentials_type = \"CODEBUILD\"\n"
          ],
          [
            85,
            "    privileged_mode             = false\n"
          ],
          [
            86,
            "\n"
          ],
          [
            87,
            "    environment_variable {\n"
          ],
          [
            88,
            "      name  = \"ENV_VAR_NAME\"\n"
          ],
          [
            89,
            "      value = \"env_var_value\"\n"
          ],
          [
            90,
            "    }\n"
          ],
          [
            91,
            "  }\n"
          ],
          [
            92,
            "\n"
          ],
          [
            93,
            "  source {\n"
          ],
          [
            94,
            "    type      = \"GITHUB\"\n"
          ],
          [
            95,
            "    location  = \"https://github.com/example/repo.git\"\n"
          ],
          [
            96,
            "    buildspec = <<EOF\n"
          ],
          [
            97,
            "version: 0.2\n"
          ],
          [
            98,
            "\n"
          ],
          [
            99,
            "phases:\n"
          ],
          [
            100,
            "  install:\n"
          ],
          [
            101,
            "    commands:\n"
          ],
          [
            102,
            "      - echo Installing dependencies...\n"
          ],
          [
            103,
            "  pre_build:\n"
          ],
          [
            104,
            "    commands:\n"
          ],
          [
            105,
            "      - echo Running pre-build commands...\n"
          ],
          [
            106,
            "  build:\n"
          ],
          [
            107,
            "    commands:\n"
          ],
          [
            108,
            "      - echo Build started on `date`\n"
          ],
          [
            109,
            "  post_build:\n"
          ],
          [
            110,
            "    commands:\n"
          ],
          [
            111,
            "      - echo Build completed on `date`\n"
          ],
          [
            112,
            "EOF\n"
          ],
          [
            113,
            "  }\n"
          ],
          [
            114,
            "\n"
          ],
          [
            115,
            "  logs_config {\n"
          ],
          [
            116,
            "    cloudwatch_logs {\n"
          ],
          [
            117,
            "      group_name  = \"example-codebuild-logs\"\n"
          ],
          [
            118,
            "      stream_name = \"example-codebuild-stream\"\n"
          ],
          [
            119,
            "    }\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "\n"
          ],
          [
            122,
            "  tags = {\n"
          ],
          [
            123,
            "    Name = \"example-codebuild-project\"\n"
          ],
          [
            124,
            "  }\n"
          ],
          [
            125,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          66,
          125
        ],
        "resource": "aws_codebuild_project.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CodebuildHasLogs",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-codebuild-project"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-314",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf",
        "breadcrumbs": {
          "cache.location": [
            {
              "type": "resource",
              "name": "aws_s3_bucket.cache",
              "path": "/tmp/tmp_1v5w2_s/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_316",
        "bc_check_id": "BC_AWS_GENERAL_227",
        "check_name": "Ensure CodeBuild project environments do not have privileged mode enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "environment/[0]/privileged_mode"
          ]
        },
        "code_block": [
          [
            66,
            "resource \"aws_codebuild_project\" \"example\" {\n"
          ],
          [
            67,
            "  name         = \"example-codebuild-project\"\n"
          ],
          [
            68,
            "  description  = \"Example CodeBuild project\"\n"
          ],
          [
            69,
            "  service_role = aws_iam_role.codebuild_role.arn\n"
          ],
          [
            70,
            "\n"
          ],
          [
            71,
            "  artifacts {\n"
          ],
          [
            72,
            "    type = \"NO_ARTIFACTS\"\n"
          ],
          [
            73,
            "  }\n"
          ],
          [
            74,
            "\n"
          ],
          [
            75,
            "  cache {\n"
          ],
          [
            76,
            "    type     = \"S3\"\n"
          ],
          [
            77,
            "    location = aws_s3_bucket.cache.bucket\n"
          ],
          [
            78,
            "  }\n"
          ],
          [
            79,
            "\n"
          ],
          [
            80,
            "  environment {\n"
          ],
          [
            81,
            "    compute_type                = \"BUILD_GENERAL1_SMALL\"\n"
          ],
          [
            82,
            "    image                       = \"aws/codebuild/standard:4.0\"\n"
          ],
          [
            83,
            "    type                        = \"LINUX_CONTAINER\"\n"
          ],
          [
            84,
            "    image_pull_credentials_type = \"CODEBUILD\"\n"
          ],
          [
            85,
            "    privileged_mode             = false\n"
          ],
          [
            86,
            "\n"
          ],
          [
            87,
            "    environment_variable {\n"
          ],
          [
            88,
            "      name  = \"ENV_VAR_NAME\"\n"
          ],
          [
            89,
            "      value = \"env_var_value\"\n"
          ],
          [
            90,
            "    }\n"
          ],
          [
            91,
            "  }\n"
          ],
          [
            92,
            "\n"
          ],
          [
            93,
            "  source {\n"
          ],
          [
            94,
            "    type      = \"GITHUB\"\n"
          ],
          [
            95,
            "    location  = \"https://github.com/example/repo.git\"\n"
          ],
          [
            96,
            "    buildspec = <<EOF\n"
          ],
          [
            97,
            "version: 0.2\n"
          ],
          [
            98,
            "\n"
          ],
          [
            99,
            "phases:\n"
          ],
          [
            100,
            "  install:\n"
          ],
          [
            101,
            "    commands:\n"
          ],
          [
            102,
            "      - echo Installing dependencies...\n"
          ],
          [
            103,
            "  pre_build:\n"
          ],
          [
            104,
            "    commands:\n"
          ],
          [
            105,
            "      - echo Running pre-build commands...\n"
          ],
          [
            106,
            "  build:\n"
          ],
          [
            107,
            "    commands:\n"
          ],
          [
            108,
            "      - echo Build started on `date`\n"
          ],
          [
            109,
            "  post_build:\n"
          ],
          [
            110,
            "    commands:\n"
          ],
          [
            111,
            "      - echo Build completed on `date`\n"
          ],
          [
            112,
            "EOF\n"
          ],
          [
            113,
            "  }\n"
          ],
          [
            114,
            "\n"
          ],
          [
            115,
            "  logs_config {\n"
          ],
          [
            116,
            "    cloudwatch_logs {\n"
          ],
          [
            117,
            "      group_name  = \"example-codebuild-logs\"\n"
          ],
          [
            118,
            "      stream_name = \"example-codebuild-stream\"\n"
          ],
          [
            119,
            "    }\n"
          ],
          [
            120,
            "  }\n"
          ],
          [
            121,
            "\n"
          ],
          [
            122,
            "  tags = {\n"
          ],
          [
            123,
            "    Name = \"example-codebuild-project\"\n"
          ],
          [
            124,
            "  }\n"
          ],
          [
            125,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          66,
          125
        ],
        "resource": "aws_codebuild_project.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CodeBuildPrivilegedMode",
        "fixed_definition": null,
        "entity_tags": {
          "Name": "example-codebuild-project"
        },
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-316",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf",
        "breadcrumbs": {
          "cache.location": [
            {
              "type": "resource",
              "name": "aws_s3_bucket.cache",
              "path": "/tmp/tmp_1v5w2_s/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_93",
        "bc_check_id": "BC_AWS_S3_24",
        "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "policy"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_53",
        "bc_check_id": "BC_AWS_S3_19",
        "check_name": "Ensure S3 bucket has block public ACLS enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "block_public_acls"
          ]
        },
        "code_block": [
          [
            131,
            "resource \"aws_s3_bucket_public_access_block\" \"cache\" {\n"
          ],
          [
            132,
            "  bucket                  = aws_s3_bucket.cache.id\n"
          ],
          [
            133,
            "  block_public_acls       = true\n"
          ],
          [
            134,
            "  block_public_policy     = true\n"
          ],
          [
            135,
            "  ignore_public_acls      = true\n"
          ],
          [
            136,
            "  restrict_public_buckets = true\n"
          ],
          [
            137,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          131,
          137
        ],
        "resource": "aws_s3_bucket_public_access_block.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_54",
        "bc_check_id": "BC_AWS_S3_20",
        "check_name": "Ensure S3 bucket has block public policy enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "block_public_policy"
          ]
        },
        "code_block": [
          [
            131,
            "resource \"aws_s3_bucket_public_access_block\" \"cache\" {\n"
          ],
          [
            132,
            "  bucket                  = aws_s3_bucket.cache.id\n"
          ],
          [
            133,
            "  block_public_acls       = true\n"
          ],
          [
            134,
            "  block_public_policy     = true\n"
          ],
          [
            135,
            "  ignore_public_acls      = true\n"
          ],
          [
            136,
            "  restrict_public_buckets = true\n"
          ],
          [
            137,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          131,
          137
        ],
        "resource": "aws_s3_bucket_public_access_block.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_56",
        "bc_check_id": "BC_AWS_S3_22",
        "check_name": "Ensure S3 bucket has 'restrict_public_buckets' enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "restrict_public_buckets"
          ]
        },
        "code_block": [
          [
            131,
            "resource \"aws_s3_bucket_public_access_block\" \"cache\" {\n"
          ],
          [
            132,
            "  bucket                  = aws_s3_bucket.cache.id\n"
          ],
          [
            133,
            "  block_public_acls       = true\n"
          ],
          [
            134,
            "  block_public_policy     = true\n"
          ],
          [
            135,
            "  ignore_public_acls      = true\n"
          ],
          [
            136,
            "  restrict_public_buckets = true\n"
          ],
          [
            137,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          131,
          137
        ],
        "resource": "aws_s3_bucket_public_access_block.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_55",
        "bc_check_id": "BC_AWS_S3_21",
        "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "ignore_public_acls"
          ]
        },
        "code_block": [
          [
            131,
            "resource \"aws_s3_bucket_public_access_block\" \"cache\" {\n"
          ],
          [
            132,
            "  bucket                  = aws_s3_bucket.cache.id\n"
          ],
          [
            133,
            "  block_public_acls       = true\n"
          ],
          [
            134,
            "  block_public_policy     = true\n"
          ],
          [
            135,
            "  ignore_public_acls      = true\n"
          ],
          [
            136,
            "  restrict_public_buckets = true\n"
          ],
          [
            137,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          131,
          137
        ],
        "resource": "aws_s3_bucket_public_access_block.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_70",
        "bc_check_id": "BC_AWS_S3_23",
        "check_name": "Ensure S3 bucket does not allow an action with any Principal",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "policy"
          ]
        },
        "code_block": [
          [
            155,
            "resource \"aws_s3_bucket_policy\" \"cache\" {\n"
          ],
          [
            156,
            "  bucket = aws_s3_bucket.cache.id\n"
          ],
          [
            157,
            "  policy = jsonencode({\n"
          ],
          [
            158,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            159,
            "    Statement = [\n"
          ],
          [
            160,
            "      {\n"
          ],
          [
            161,
            "        Action = \"s3:PutObject\"\n"
          ],
          [
            162,
            "        Effect = \"Allow\"\n"
          ],
          [
            163,
            "        Principal = {\n"
          ],
          [
            164,
            "          AWS = aws_iam_role.codebuild_role.arn\n"
          ],
          [
            165,
            "        }\n"
          ],
          [
            166,
            "        Resource = \"arn:aws:s3:::${aws_s3_bucket.cache.bucket}/*\"\n"
          ],
          [
            167,
            "      }\n"
          ],
          [
            168,
            "    ]\n"
          ],
          [
            169,
            "  })\n"
          ],
          [
            170,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          155,
          170
        ],
        "resource": "aws_s3_bucket_policy.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-23",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf",
        "breadcrumbs": {
          "policy": [
            {
              "type": "resource",
              "name": "aws_s3_bucket.cache",
              "path": "/tmp/tmp_1v5w2_s/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_93",
        "bc_check_id": "BC_AWS_S3_24",
        "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
        "check_result": {
          "result": "PASSED",
          "evaluated_keys": [
            "policy"
          ]
        },
        "code_block": [
          [
            155,
            "resource \"aws_s3_bucket_policy\" \"cache\" {\n"
          ],
          [
            156,
            "  bucket = aws_s3_bucket.cache.id\n"
          ],
          [
            157,
            "  policy = jsonencode({\n"
          ],
          [
            158,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            159,
            "    Statement = [\n"
          ],
          [
            160,
            "      {\n"
          ],
          [
            161,
            "        Action = \"s3:PutObject\"\n"
          ],
          [
            162,
            "        Effect = \"Allow\"\n"
          ],
          [
            163,
            "        Principal = {\n"
          ],
          [
            164,
            "          AWS = aws_iam_role.codebuild_role.arn\n"
          ],
          [
            165,
            "        }\n"
          ],
          [
            166,
            "        Resource = \"arn:aws:s3:::${aws_s3_bucket.cache.bucket}/*\"\n"
          ],
          [
            167,
            "      }\n"
          ],
          [
            168,
            "    ]\n"
          ],
          [
            169,
            "  })\n"
          ],
          [
            170,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          155,
          170
        ],
        "resource": "aws_s3_bucket_policy.cache",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf",
        "breadcrumbs": {
          "policy": [
            {
              "type": "resource",
              "name": "aws_s3_bucket.cache",
              "path": "/tmp/tmp_1v5w2_s/main.tf",
              "module_connection": false
            }
          ]
        }
      },
      {
        "check_id": "CKV_AWS_57",
        "bc_check_id": "BC_AWS_S3_2",
        "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "access_control_policy",
            "acl",
            "access_control_policy/grant",
            "access_control_policy/grant/*/permission",
            "access_control_policy/grant/*/grantee/uri",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV2_AWS_56",
        "bc_check_id": "BC_AWS_IAM_75",
        "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_iam_role": {
              "codebuild_role": {
                "__end_line__": 64,
                "__start_line__": 8,
                "assume_role_policy": [
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "codebuild.amazonaws.com"
                        }
                      }
                    ]
                  }
                ],
                "inline_policy": [
                  {
                    "name": [
                      "codebuild-policy"
                    ],
                    "policy": [
                      {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Action": [
                              "logs:CreateLogGroup",
                              "logs:CreateLogStream",
                              "logs:PutLogEvents",
                              "s3:PutObject",
                              "s3:GetObject",
                              "s3:GetObjectVersion",
                              "s3:ListBucket",
                              "s3:ListBucketVersions",
                              "ecr:GetDownloadUrlForLayer",
                              "ecr:BatchGetImage",
                              "ecr:BatchCheckLayerAvailability",
                              "ecr:GetAuthorizationToken",
                              "ecr:InitiateLayerUpload",
                              "ecr:UploadLayerPart",
                              "ecr:CompleteLayerUpload",
                              "ecr:PutImage",
                              "ecr:BatchDeleteImage",
                              "ecr:DescribeRepositories",
                              "ecr:GetRepositoryPolicy",
                              "ecr:ListImages",
                              "ecr:BatchDeleteImage",
                              "ecr:DeleteRepository",
                              "ecr:DescribeImages",
                              "ecr:DescribeRepositories",
                              "ecr:ListTagsForResource"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "name": [
                  "codebuild-role"
                ],
                "__address__": "aws_iam_role.codebuild_role",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "managed_policy_arns/*",
            "policy_arn",
            "name",
            "arn",
            "managed_policy_arn"
          ]
        },
        "code_block": [
          [
            8,
            "resource \"aws_iam_role\" \"codebuild_role\" {\n"
          ],
          [
            9,
            "  name = \"codebuild-role\"\n"
          ],
          [
            10,
            "\n"
          ],
          [
            11,
            "  assume_role_policy = jsonencode({\n"
          ],
          [
            12,
            "    Version = \"2012-10-17\"\n"
          ],
          [
            13,
            "    Statement = [\n"
          ],
          [
            14,
            "      {\n"
          ],
          [
            15,
            "        Action = \"sts:AssumeRole\"\n"
          ],
          [
            16,
            "        Effect = \"Allow\"\n"
          ],
          [
            17,
            "        Principal = {\n"
          ],
          [
            18,
            "          Service = \"codebuild.amazonaws.com\"\n"
          ],
          [
            19,
            "        }\n"
          ],
          [
            20,
            "      }\n"
          ],
          [
            21,
            "    ]\n"
          ],
          [
            22,
            "  })\n"
          ],
          [
            23,
            "\n"
          ],
          [
            24,
            "  inline_policy {\n"
          ],
          [
            25,
            "    name = \"codebuild-policy\"\n"
          ],
          [
            26,
            "\n"
          ],
          [
            27,
            "    policy = jsonencode({\n"
          ],
          [
            28,
            "      Version = \"2012-10-17\"\n"
          ],
          [
            29,
            "      Statement = [\n"
          ],
          [
            30,
            "        {\n"
          ],
          [
            31,
            "          Action = [\n"
          ],
          [
            32,
            "            \"logs:CreateLogGroup\",\n"
          ],
          [
            33,
            "            \"logs:CreateLogStream\",\n"
          ],
          [
            34,
            "            \"logs:PutLogEvents\",\n"
          ],
          [
            35,
            "            \"s3:PutObject\",\n"
          ],
          [
            36,
            "            \"s3:GetObject\",\n"
          ],
          [
            37,
            "            \"s3:GetObjectVersion\",\n"
          ],
          [
            38,
            "            \"s3:ListBucket\",\n"
          ],
          [
            39,
            "            \"s3:ListBucketVersions\",\n"
          ],
          [
            40,
            "            \"ecr:GetDownloadUrlForLayer\",\n"
          ],
          [
            41,
            "            \"ecr:BatchGetImage\",\n"
          ],
          [
            42,
            "            \"ecr:BatchCheckLayerAvailability\",\n"
          ],
          [
            43,
            "            \"ecr:GetAuthorizationToken\",\n"
          ],
          [
            44,
            "            \"ecr:InitiateLayerUpload\",\n"
          ],
          [
            45,
            "            \"ecr:UploadLayerPart\",\n"
          ],
          [
            46,
            "            \"ecr:CompleteLayerUpload\",\n"
          ],
          [
            47,
            "            \"ecr:PutImage\",\n"
          ],
          [
            48,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            49,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            50,
            "            \"ecr:GetRepositoryPolicy\",\n"
          ],
          [
            51,
            "            \"ecr:ListImages\",\n"
          ],
          [
            52,
            "            \"ecr:BatchDeleteImage\",\n"
          ],
          [
            53,
            "            \"ecr:DeleteRepository\",\n"
          ],
          [
            54,
            "            \"ecr:DescribeImages\",\n"
          ],
          [
            55,
            "            \"ecr:DescribeRepositories\",\n"
          ],
          [
            56,
            "            \"ecr:ListTagsForResource\"\n"
          ],
          [
            57,
            "          ]\n"
          ],
          [
            58,
            "          Effect   = \"Allow\"\n"
          ],
          [
            59,
            "          Resource = \"*\"\n"
          ],
          [
            60,
            "        }\n"
          ],
          [
            61,
            "      ]\n"
          ],
          [
            62,
            "    })\n"
          ],
          [
            63,
            "  }\n"
          ],
          [
            64,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          8,
          64
        ],
        "resource": "aws_iam_role.codebuild_role",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV2_AWS_6",
        "bc_check_id": "BC_AWS_NETWORKING_52",
        "check_name": "Ensure that S3 bucket has a Public Access block",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "block_public_acls",
            "resource_type",
            "block_public_policy"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              131,
              "resource \"aws_s3_bucket_public_access_block\" \"cache\" {\n"
            ],
            [
              132,
              "  bucket                  = aws_s3_bucket.cache.id\n"
            ],
            [
              133,
              "  block_public_acls       = true\n"
            ],
            [
              134,
              "  block_public_policy     = true\n"
            ],
            [
              135,
              "  ignore_public_acls      = true\n"
            ],
            [
              136,
              "  restrict_public_buckets = true\n"
            ],
            [
              137,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            131,
            137
          ],
          "resource": "aws_s3_bucket_public_access_block.cache",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_20",
        "bc_check_id": "BC_AWS_S3_1",
        "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "access_control_policy",
            "acl",
            "access_control_policy/grant",
            "access_control_policy/grant/*/grantee/uri",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_21",
        "bc_check_id": "BC_AWS_S3_16",
        "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "versioning_configuration/status",
            "versioning/enabled",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              139,
              "resource \"aws_s3_bucket_versioning\" \"cache\" {\n"
            ],
            [
              140,
              "  bucket = aws_s3_bucket.cache.id\n"
            ],
            [
              141,
              "  versioning_configuration {\n"
            ],
            [
              142,
              "    status = \"Enabled\"\n"
            ],
            [
              143,
              "  }\n"
            ],
            [
              144,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            139,
            144
          ],
          "resource": "aws_s3_bucket_versioning.cache",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_19",
        "bc_check_id": "BC_AWS_S3_14",
        "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
        "check_result": {
          "result": "PASSED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "rule/apply_server_side_encryption_by_default/sse_algorithm",
            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              146,
              "resource \"aws_s3_bucket_server_side_encryption_configuration\" \"cache\" {\n"
            ],
            [
              147,
              "  bucket = aws_s3_bucket.cache.id\n"
            ],
            [
              148,
              "  rule {\n"
            ],
            [
              149,
              "    apply_server_side_encryption_by_default {\n"
            ],
            [
              150,
              "      sse_algorithm = \"AES256\"\n"
            ],
            [
              151,
              "    }\n"
            ],
            [
              152,
              "  }\n"
            ],
            [
              153,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            146,
            153
          ],
          "resource": "aws_s3_bucket_server_side_encryption_configuration.cache",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      }
    ],
    "failed_checks": [
      {
        "check_id": "CKV_AWS_158",
        "bc_check_id": "BC_AWS_GENERAL_85",
        "check_name": "Ensure that CloudWatch Log Group is encrypted by KMS",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "kms_key_id"
          ]
        },
        "code_block": [
          [
            172,
            "resource \"aws_cloudwatch_log_group\" \"example\" {\n"
          ],
          [
            173,
            "  name = \"example-codebuild-logs\"\n"
          ],
          [
            174,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          172,
          174
        ],
        "resource": "aws_cloudwatch_log_group.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupKMSKey",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_338",
        "bc_check_id": "BC_AWS_LOGGING_46",
        "check_name": "Ensure CloudWatch log groups retains logs for at least 1 year",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "retention_in_days"
          ]
        },
        "code_block": [
          [
            172,
            "resource \"aws_cloudwatch_log_group\" \"example\" {\n"
          ],
          [
            173,
            "  name = \"example-codebuild-logs\"\n"
          ],
          [
            174,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          172,
          174
        ],
        "resource": "aws_cloudwatch_log_group.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetentionYear",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-338",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_66",
        "bc_check_id": "BC_AWS_LOGGING_13",
        "check_name": "Ensure that CloudWatch Log Group specifies retention days",
        "check_result": {
          "result": "FAILED",
          "evaluated_keys": [
            "retention_in_days"
          ]
        },
        "code_block": [
          [
            172,
            "resource \"aws_cloudwatch_log_group\" \"example\" {\n"
          ],
          [
            173,
            "  name = \"example-codebuild-logs\"\n"
          ],
          [
            174,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          172,
          174
        ],
        "resource": "aws_cloudwatch_log_group.example",
        "evaluations": null,
        "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetention",
        "fixed_definition": null,
        "entity_tags": null,
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-13",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_144",
        "bc_check_id": "BC_AWS_GENERAL_72",
        "check_name": "Ensure that S3 bucket has cross-region replication enabled",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type",
            "replication_configuration/rules/*/status",
            "rule/*/status"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV2_AWS_62",
        "bc_check_id": "BC_AWS_LOGGING_36",
        "check_name": "Ensure S3 buckets should have event notifications enabled",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_145",
        "bc_check_id": "BC_AWS_GENERAL_56",
        "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "rule/apply_server_side_encryption_by_default/sse_algorithm",
            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": {
          "code_block": [
            [
              146,
              "resource \"aws_s3_bucket_server_side_encryption_configuration\" \"cache\" {\n"
            ],
            [
              147,
              "  bucket = aws_s3_bucket.cache.id\n"
            ],
            [
              148,
              "  rule {\n"
            ],
            [
              149,
              "    apply_server_side_encryption_by_default {\n"
            ],
            [
              150,
              "      sse_algorithm = \"AES256\"\n"
            ],
            [
              151,
              "    }\n"
            ],
            [
              152,
              "  }\n"
            ],
            [
              153,
              "}\n"
            ]
          ],
          "file_path": "/main.tf",
          "file_line_range": [
            146,
            153
          ],
          "resource": "aws_s3_bucket_server_side_encryption_configuration.cache",
          "entity_tags": {},
          "evaluations": null,
          "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
          "resource_address": null
        },
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV_AWS_18",
        "bc_check_id": "BC_AWS_S3_13",
        "check_name": "Ensure the S3 bucket has access logging enabled",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "logging",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      },
      {
        "check_id": "CKV2_AWS_61",
        "bc_check_id": "BC_AWS_LOGGING_35",
        "check_name": "Ensure that an S3 bucket has a lifecycle configuration",
        "check_result": {
          "result": "FAILED",
          "entity": {
            "aws_s3_bucket": {
              "cache": {
                "__end_line__": 129,
                "__start_line__": 127,
                "bucket": [
                  "example-codebuild-cache"
                ],
                "__address__": "aws_s3_bucket.cache",
                "__provider_address__": "aws.default"
              }
            }
          },
          "evaluated_keys": [
            "lifecycle_rule",
            "resource_type"
          ]
        },
        "code_block": [
          [
            127,
            "resource \"aws_s3_bucket\" \"cache\" {\n"
          ],
          [
            128,
            "  bucket = \"example-codebuild-cache\"\n"
          ],
          [
            129,
            "}\n"
          ]
        ],
        "file_path": "/main.tf",
        "file_abs_path": "/tmp/tmp_1v5w2_s/main.tf",
        "repo_file_path": "/main.tf",
        "file_line_range": [
          127,
          129
        ],
        "resource": "aws_s3_bucket.cache",
        "evaluations": null,
        "check_class": "checkov.common.graph.checks_infra.base_check",
        "fixed_definition": null,
        "entity_tags": {},
        "caller_file_path": null,
        "caller_file_line_range": null,
        "resource_address": null,
        "severity": null,
        "bc_category": null,
        "benchmarks": null,
        "description": null,
        "short_description": null,
        "vulnerability_details": null,
        "connected_node": null,
        "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61",
        "details": [],
        "check_len": null,
        "definition_context_file_path": "/tmp/tmp_1v5w2_s/main.tf"
      }
    ],
    "skipped_checks": [],
    "parsing_errors": []
  },
  "summary": {
    "passed": 20,
    "failed": 8,
    "skipped": 0,
    "parsing_errors": 0,
    "resource_count": 9,
    "checkov_version": "3.2.403"
  },
  "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
}