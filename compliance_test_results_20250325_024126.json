[
  {
    "query": "How do I create an S3 bucket with versioning and encryption that complies with CIS benchmarks?",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"my-secure-bucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"aws:kms\"\n      kms_master_key_id = aws_kms_key.s3.arn\n    }\n  }\n}\n\nresource \"aws_kms_key\" \"s3\" {\n  description             = \"KMS key for S3 bucket encryption\"\n  deletion_window_in_days = 30\n  enable_key_rotation     = true\n  policy                 = data.aws_iam_policy_document.kms.json\n}\n\ndata \"aws_iam_policy_document\" \"kms\" {\n  statement {\n    actions   = [\"kms:*\"]\n    resources = [\"*\"]\n    effect    = \"Allow\"\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"]\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  policy = data.aws_iam_policy_document.s3_bucket_policy.json\n}\n\ndata \"aws_iam_policy_document\" \"s3_bucket_policy\" {\n  statement {\n    actions   = [\"s3:GetObject\"]\n    resources = [\"${aws_s3_bucket.example.arn}/*\"]\n    effect    = \"Deny\"\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"*\"]\n    }\n    condition {\n      test     = \"Bool\"\n      variable = \"aws:SecureTransport\"\n      values   = [\"false\"]\n    }\n  }\n}\n\ndata \"aws_caller_identity\" \"current\" {}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": true,
      "cis_compliant": false,
      "referenced_cis_controls": [
        "1.5",
        "1.4",
        "2.1.2",
        "1.16",
        "2.2",
        "1.10",
        "2.1.1"
      ],
      "issues": [
        "CIS compliance validation failed"
      ]
    },
    "compliance_report": "# CIS Compliance Report\n\n## Summary\n- Pass Rate: 83.7%\n- Total Checks: 43\n- Passed: 36\n- Failed: 7\n- Skipped: 0\n\n## CIS Controls Referenced\n- CIS 1.10\n- CIS 1.16\n- CIS 1.4\n- CIS 1.5\n- CIS 2.1.1\n- CIS 2.1.2\n- CIS 2.2\n\n## Failed Checks\n- CKV_AWS_109: Ensure IAM policies does not allow permissions management / resource exposure without constraints ()\n  - Resource: aws_iam_policy_document.kms\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint\n- CKV_AWS_111: Ensure IAM policies does not allow write access without constraints ()\n  - Resource: aws_iam_policy_document.kms\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint\n- CKV_AWS_356: Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions ()\n  - Resource: aws_iam_policy_document.kms\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-356\n- CKV2_AWS_62: Ensure S3 buckets should have event notifications enabled ()\n  - Resource: aws_s3_bucket.example\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62\n- CKV2_AWS_61: Ensure that an S3 bucket has a lifecycle configuration ()\n  - Resource: aws_s3_bucket.example\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61\n- CKV_AWS_18: Ensure the S3 bucket has access logging enabled ()\n  - Resource: aws_s3_bucket.example\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging\n- CKV_AWS_144: Ensure that S3 bucket has cross-region replication enabled ()\n  - Resource: aws_s3_bucket.example\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
    "checkov_output_file": "C:\\Users\\chica\\OneDrive\\Desktop\\Spring2025\\CS-580\\Project\\TerraGuard\\checkov_output\\validation_20250325_023534_9064_20250325_023551.json",
    "errors": []
  },
  {
    "query": "Create IAM roles with least privilege access following CIS security controls",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\n# Variables with default values\nvariable \"bucket_name\" {\n  default = \"secure-s3-bucket\"\n}\n\nvariable \"vpc_id\" {\n  default = \"vpc-12345678\"\n}\n\nvariable \"subnet_id\" {\n  default = \"subnet-12345678\"\n}\n\nvariable \"key_deletion_window_in_days\" {\n  default = 30\n}\n\n# IAM Role for EC2 with least privilege access\nresource \"aws_iam_role\" \"ec2_role\" {\n  name = \"ec2-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [{\n      Action = \"sts:AssumeRole\"\n      Principal = {\n        Service = \"ec2.amazonaws.com\"\n      }\n      Effect = \"Allow\"\n      Sid     = \"\"\n    }]\n  })\n}\n\nresource \"aws_iam_policy\" \"ec2_policy\" {\n  name   = \"ec2-policy\"\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [{\n      Effect = \"Allow\"\n      Action = [\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeTags\",\n        \"s3:ListBucket\",\n        \"s3:GetObject\"\n      ]\n      Resource = [\n        \"arn:aws:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:instance/*\",\n        \"arn:aws:s3:::${var.bucket_name}\",\n        \"arn:aws:s3:::${var.bucket_name}/*\"\n      ]\n    }]\n  })\n}\n\nresource \"aws_iam_role_policy_attachment\" \"ec2_policy_attach\" {\n  role       = aws_iam_role.ec2_role.name\n  policy_arn = aws_iam_policy.ec2_policy.arn\n}\n\n# IAM Role for Lambda with least privilege access\nresource \"aws_iam_role\" \"lambda_role\" {\n  name = \"lambda-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [{\n      Action = \"sts:AssumeRole\"\n      Principal = {\n        Service = \"lambda.amazonaws.com\"\n      }\n      Effect = \"Allow\"\n      Sid     = \"\"\n    }]\n  })\n}\n\nresource \"aws_iam_policy\" \"lambda_policy\" {\n  name   = \"lambda-policy\"\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [{\n      Effect = \"Allow\"\n      Action = [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"s3:GetObject\"\n      ]\n      Resource = [\n        \"arn:aws:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/lambda/*\",\n        \"arn:aws:s3:::${var.bucket_name}/*\"\n      ]\n    }]\n  })\n}\n\nresource \"aws_iam_role_policy_attachment\" \"lambda_policy_attach\" {\n  role       = aws_iam_role.lambda_role.name\n  policy_arn = aws_iam_policy.lambda_policy.arn\n}\n\n# S3 Bucket\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = var.bucket_name\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"aws:kms\"\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [{\n      Effect = \"Allow\"\n      Principal = {\n        AWS = \"*\"\n      }\n      Action = \"s3:GetObject\"\n      Resource = \"${aws_s3_bucket.example.arn}/*\"\n      Condition = {\n        StringEquals = {\n          \"aws:SourceVpce\" = var.vpc_id\n        }\n      }\n    }]\n  })\n}\n\n# KMS Key\nresource \"aws_kms_key\" \"s3_key\" {\n  description             = \"KMS key for S3 bucket encryption\"\n  deletion_window_in_days = var.key_deletion_window_in_days\n  enable_key_rotation     = true\n}\n\nresource \"aws_kms_alias\" \"s3_key_alias\" {\n  name          = \"alias/s3-key\"\n  target_key_id = aws_kms_key.s3_key.key_id\n}\n\n# VPC Flow Logs\nresource \"aws_flow_log\" \"vpc_flow_log\" {\n  log_destination      = aws_s3_bucket.example.arn\n  log_destination_type = \"s3\"\n  traffic_type         = \"ALL\"\n  vpc_id               = var.vpc_id\n}\n\n# CloudTrail\nresource \"aws_cloudtrail\" \"example\" {\n  name                          = \"example-trail\"\n  s3_bucket_name                = aws_s3_bucket.example.id\n  include_global_service_events = true\n  is_multi_region_trail         = true\n  enable_logging                = true\n}\n\n# CloudWatch Alarm\nresource \"aws_cloudwatch_metric_alarm\" \"example\" {\n  alarm_name                = \"example-alarm\"\n  comparison_operator       = \"GreaterThanOrEqualToThreshold\"\n  evaluation_periods        = \"2\"\n  metric_name               = \"CPUUtilization\"\n  namespace                 = \"AWS/EC2\"\n  period                    = \"120\"\n  statistic                 = \"Average\"\n  threshold                 = \"80\"\n  alarm_description         = \"This metric monitors ec2 cpu utilization\"\n  insufficient_data_actions = []\n}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": false,
      "cis_compliant": false,
      "referenced_cis_controls": [],
      "issues": [
        "Terraform syntax validation failed",
        "CIS compliance validation failed",
        "Validation error: \u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 52, in resource \"aws_iam_policy\" \"ec2_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  52:         \"arn:aws:ec2:${\u001b[4mdata.aws_region.current\u001b[0m.name}:${data.aws_caller_identity.current.account_id}:instance/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_region\" \"current\" has not been declared in the root\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mmodule.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 52, in resource \"aws_iam_policy\" \"ec2_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  52:         \"arn:aws:ec2:${data.aws_region.current.name}:${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:instance/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 95, in resource \"aws_iam_policy\" \"lambda_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  95:         \"arn:aws:logs:${\u001b[4mdata.aws_region.current\u001b[0m.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/lambda/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_region\" \"current\" has not been declared in the root\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mmodule.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 95, in resource \"aws_iam_policy\" \"lambda_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  95:         \"arn:aws:logs:${data.aws_region.current.name}:${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:log-group:/aws/lambda/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n"
      ]
    },
    "compliance_report": null,
    "checkov_output_file": null,
    "errors": [
      "Validation error: \u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 52, in resource \"aws_iam_policy\" \"ec2_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  52:         \"arn:aws:ec2:${\u001b[4mdata.aws_region.current\u001b[0m.name}:${data.aws_caller_identity.current.account_id}:instance/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_region\" \"current\" has not been declared in the root\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mmodule.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 52, in resource \"aws_iam_policy\" \"ec2_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  52:         \"arn:aws:ec2:${data.aws_region.current.name}:${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:instance/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 95, in resource \"aws_iam_policy\" \"lambda_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  95:         \"arn:aws:logs:${\u001b[4mdata.aws_region.current\u001b[0m.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/lambda/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_region\" \"current\" has not been declared in the root\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mmodule.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 95, in resource \"aws_iam_policy\" \"lambda_policy\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  95:         \"arn:aws:logs:${data.aws_region.current.name}:${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:log-group:/aws/lambda/*\",\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n"
    ]
  },
  {
    "query": "Set up CloudTrail logging and monitoring following security best practices",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\nvariable \"trail_name\" {\n  default = \"example-trail\"\n}\n\nvariable \"s3_bucket_name\" {\n  default = \"example-cloudtrail-bucket\"\n}\n\nvariable \"cloudwatch_log_group_name\" {\n  default = \"example-cloudtrail-log-group\"\n}\n\nresource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n  bucket = var.s3_bucket_name\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"AES256\"\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"cloudtrail_bucket_policy\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"cloudtrail.amazonaws.com\"\n        }\n        Action = \"s3:GetBucketAcl\"\n        Resource = \"arn:aws:s3:::${var.s3_bucket_name}\"\n      },\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"cloudtrail.amazonaws.com\"\n        }\n        Action = \"s3:PutObject\"\n        Resource = \"arn:aws:s3:::${var.s3_bucket_name}/*\"\n        Condition = {\n          StringEquals = {\n            \"s3:x-amz-acl\" = \"bucket-owner-full-control\"\n          }\n        }\n      }\n    ]\n  })\n}\n\nresource \"aws_cloudtrail\" \"example\" {\n  name                          = var.trail_name\n  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n  s3_key_prefix                 = \"prefix/\"\n  include_global_service_events = true\n  is_multi_region_trail         = true\n  enable_log_file_validation    = true\n  enable_logging                = true\n\n  cloud_watch_logs_group_arn    = \"${aws_cloudwatch_log_group.cloudtrail_log_group.arn}:*\"\n  cloud_watch_logs_role_arn     = aws_iam_role.cloudtrail_cloudwatch_role.arn\n\n  event_selector {\n    read_write_type           = \"All\"\n    include_management_events = true\n  }\n}\n\nresource \"aws_cloudwatch_log_group\" \"cloudtrail_log_group\" {\n  name              = var.cloudwatch_log_group_name\n  retention_in_days = 365\n}\n\nresource \"aws_iam_role\" \"cloudtrail_cloudwatch_role\" {\n  name = \"cloudtrail-cloudwatch-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"cloudtrail.amazonaws.com\"\n        }\n        Action = \"sts:AssumeRole\"\n      }\n    ]\n  })\n}\n\nresource \"aws_iam_role_policy\" \"cloudtrail_cloudwatch_policy\" {\n  name = \"cloudtrail-cloudwatch-policy\"\n  role = aws_iam_role.cloudtrail_cloudwatch_role.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Action = [\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\"\n        ]\n        Resource = \"arn:aws:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:${var.cloudwatch_log_group_name}:log-stream:*\"\n      }\n    ]\n  })\n}\n\ndata \"aws_region\" \"current\" {}\n\ndata \"aws_caller_identity\" \"current\" {}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": true,
      "cis_compliant": false,
      "referenced_cis_controls": [
        "1.5",
        "4.1",
        "4.2",
        "2.1.2",
        "1.16",
        "2.2",
        "1.10",
        "2.1.1"
      ],
      "issues": [
        "CIS compliance validation failed"
      ]
    },
    "compliance_report": "# CIS Compliance Report\n\n## Summary\n- Pass Rate: 80.0%\n- Total Checks: 40\n- Passed: 32\n- Failed: 8\n- Skipped: 0\n\n## CIS Controls Referenced\n- CIS 1.10\n- CIS 1.16\n- CIS 1.5\n- CIS 2.1.1\n- CIS 2.1.2\n- CIS 2.2\n- CIS 4.1\n- CIS 4.2\n\n## Failed Checks\n- CKV_AWS_252: Ensure CloudTrail defines an SNS Topic ()\n  - Resource: aws_cloudtrail.example\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-cloudtrail-defines-an-sns-topic\n- CKV_AWS_35: Ensure CloudTrail logs are encrypted at rest using KMS CMKs (CIS 4.2)\n  - Resource: aws_cloudtrail.example\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-7\n- CKV_AWS_158: Ensure that CloudWatch Log Group is encrypted by KMS ()\n  - Resource: aws_cloudwatch_log_group.cloudtrail_log_group\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms\n- CKV2_AWS_62: Ensure S3 buckets should have event notifications enabled ()\n  - Resource: aws_s3_bucket.cloudtrail_bucket\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62\n- CKV_AWS_144: Ensure that S3 bucket has cross-region replication enabled ()\n  - Resource: aws_s3_bucket.cloudtrail_bucket\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled\n- CKV2_AWS_61: Ensure that an S3 bucket has a lifecycle configuration ()\n  - Resource: aws_s3_bucket.cloudtrail_bucket\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61\n- CKV_AWS_18: Ensure the S3 bucket has access logging enabled ()\n  - Resource: aws_s3_bucket.cloudtrail_bucket\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging\n- CKV_AWS_145: Ensure that S3 buckets are encrypted with KMS by default ()\n  - Resource: aws_s3_bucket.cloudtrail_bucket\n  - Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
    "checkov_output_file": "C:\\Users\\chica\\OneDrive\\Desktop\\Spring2025\\CS-580\\Project\\TerraGuard\\checkov_output\\validation_20250325_023734_371_20250325_023751.json",
    "errors": []
  },
  {
    "query": "Configure secure VPC with private subnets and security groups according to CIS benchmarks",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\n# Variables\nvariable \"vpc_cidr\" {\n  default = \"10.0.0.0/16\"\n}\n\nvariable \"private_subnet_cidrs\" {\n  default = [\"10.0.1.0/24\", \"10.0.2.0/24\"]\n}\n\nvariable \"availability_zones\" {\n  default = [\"us-west-2a\", \"us-west-2b\"]\n}\n\nvariable \"s3_bucket_name\" {\n  default = \"secure-bucket\"\n}\n\n# VPC\nresource \"aws_vpc\" \"main\" {\n  cidr_block = var.vpc_cidr\n  enable_dns_support   = true\n  enable_dns_hostnames = true\n\n  tags = {\n    Name = \"secure-vpc\"\n  }\n}\n\n# Private Subnets\nresource \"aws_subnet\" \"private\" {\n  count                   = length(var.private_subnet_cidrs)\n  vpc_id                  = aws_vpc.main.id\n  cidr_block              = var.private_subnet_cidrs[count.index]\n  availability_zone       = var.availability_zones[count.index]\n  map_public_ip_on_launch = false\n\n  tags = {\n    Name = \"private-subnet-${count.index}\"\n  }\n}\n\n# Internet Gateway\nresource \"aws_internet_gateway\" \"main\" {\n  vpc_id = aws_vpc.main.id\n\n  tags = {\n    Name = \"secure-igw\"\n  }\n}\n\n# Elastic IP for NAT Gateway\nresource \"aws_eip\" \"nat\" {\n  count = length(var.private_subnet_cidrs)\n  vpc   = true\n\n  tags = {\n    Name = \"nat-eip-${count.index}\"\n  }\n}\n\n# NAT Gateway\nresource \"aws_nat_gateway\" \"main\" {\n  count         = length(var.private_subnet_cidrs)\n  allocation_id = aws_eip.nat[count.index].id\n  subnet_id     = aws_subnet.private[count.index].id\n\n  tags = {\n    Name = \"nat-gateway-${count.index}\"\n  }\n}\n\n# Route Tables\nresource \"aws_route_table\" \"private\" {\n  count  = length(var.private_subnet_cidrs)\n  vpc_id = aws_vpc.main.id\n\n  route {\n    cidr_block     = \"0.0.0.0/0\"\n    nat_gateway_id = aws_nat_gateway.main[count.index].id\n  }\n\n  tags = {\n    Name = \"private-route-table-${count.index}\"\n  }\n}\n\nresource \"aws_route_table_association\" \"private\" {\n  count          = length(var.private_subnet_cidrs)\n  subnet_id      = aws_subnet.private[count.index].id\n  route_table_id = aws_route_table.private[count.index].id\n}\n\n# Security Group\nresource \"aws_security_group\" \"private\" {\n  name        = \"private-sg\"\n  description = \"Allow minimal required inbound traffic\"\n  vpc_id      = aws_vpc.main.id\n\n  ingress {\n    from_port   = 22\n    to_port     = 22\n    protocol    = \"tcp\"\n    cidr_blocks = [\"10.0.0.0/16\"]\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  tags = {\n    Name = \"private-sg\"\n  }\n}\n\n# VPC Flow Logs\nresource \"aws_flow_log\" \"vpc_flow_log\" {\n  iam_role_arn    = aws_iam_role.flow_log_role.arn\n  log_destination = aws_cloudwatch_log_group.flow_log.arn\n  traffic_type    = \"ALL\"\n  vpc_id          = aws_vpc.main.id\n}\n\nresource \"aws_cloudwatch_log_group\" \"flow_log\" {\n  name = \"/aws/vpc/flow-log\"\n}\n\nresource \"aws_iam_role\" \"flow_log_role\" {\n  name = \"vpc-flow-log-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"vpc-flow-logs.amazonaws.com\"\n        }\n      },\n    ]\n  })\n}\n\nresource \"aws_iam_role_policy\" \"flow_log_policy\" {\n  name = \"flow-log-policy\"\n  role = aws_iam_role.flow_log_role.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"logs:DescribeLogGroups\",\n          \"logs:DescribeLogStreams\"\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })\n}\n\n# S3 Bucket\nresource \"aws_s3_bucket\" \"secure_bucket\" {\n  bucket = var.s3_bucket_name\n\n  tags = {\n    Name = \"secure-bucket\"\n  }\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"aws:kms\"\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Sid       = \"DenyUnEncryptedObjectUploads\"\n        Effect    = \"Deny\"\n        Principal = \"*\"\n        Action    = \"s3:PutObject\"\n        Resource  = \"arn:aws:s3:::${var.s3_bucket_name}/*\"\n        Condition = {\n          StringNotEquals = {\n            \"s3:x-amz-server-side-encryption\" = \"aws:kms\"\n          }\n        }\n      },\n    ]\n  })\n}\n\n# KMS Key\nresource \"aws_kms_key\" \"s3_key\" {\n  description             = \"KMS key for S3 bucket\"\n  deletion_window_in_days = 30\n  enable_key_rotation     = true\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Sid    = \"Enable IAM User Permissions\"\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n        }\n        Action   = \"kms:*\"\n        Resource = \"*\"\n      },\n      {\n        Sid    = \"Allow access for Key Administrators\"\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/Admin\"\n        }\n        Action = [\n          \"kms:Create*\",\n          \"kms:Describe*\",\n          \"kms:Enable*\",\n          \"kms:List*\",\n          \"kms:Put*\",\n          \"kms:Update*\",\n          \"kms:Revoke*\",\n          \"kms:Disable*\",\n          \"kms:Get*\",\n          \"kms:Delete*\",\n          \"kms:TagResource\",\n          \"kms:UntagResource\",\n          \"kms:ScheduleKeyDeletion\",\n          \"kms:CancelKeyDeletion\"\n        ]\n        Resource = \"*\"\n      },\n      {\n        Sid    = \"Allow use of the key\"\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/S3Access\"\n        }\n        Action = [\n          \"kms:Encrypt\",\n          \"kms:Decrypt\",\n          \"kms:ReEncrypt*\",\n          \"kms:GenerateDataKey*\",\n          \"kms:DescribeKey\"\n        ]\n        Resource = \"*\"\n      },\n      {\n        Sid    = \"Allow attachment of persistent resources\"\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/S3Access\"\n        }\n        Action = [\n          \"kms:CreateGrant\",\n          \"kms:ListGrants\",\n          \"kms:RevokeGrant\"\n        ]\n        Resource = \"*\"\n        Condition = {\n          Bool = {\n            \"kms:GrantIsForAWSResource\" = \"true\"\n          }\n        }\n      }\n    ]\n  })\n}\n\nresource \"aws_kms_alias\" \"s3_key_alias\" {\n  name          = \"alias/s3-key\"\n  target_key_id = aws_kms_key.s3_key.key_id\n}\n\n# CloudTrail\nresource \"aws_cloudtrail\" \"main\" {\n  name                          = \"secure-trail\"\n  s3_bucket_name                = aws_s3_bucket.secure_bucket.id\n  include_global_service_events = true\n  is_multi_region_trail         = true\n  enable_log_file_validation    = true\n\n  event_selector {\n    read_write_type           = \"All\"\n    include_management_events = true\n\n    data_resource {\n      type   = \"AWS::S3::Object\"\n      values = [\"arn:aws:s3:::\"]\n    }\n  }\n}\n\n# CloudWatch Alarms\nresource \"aws_cloudwatch_metric_alarm\" \"unauthorized_api_calls\" {\n  alarm_name          = \"unauthorized-api-calls\"\n  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n  evaluation_periods  = \"1\"\n  metric_name         = \"UnauthorizedAccess\"\n  namespace           = \"AWS/CloudTrail\"\n  period              = \"300\"\n  statistic           = \"Sum\"\n  threshold           = \"1\"\n  alarm_actions       = [aws_sns_topic.alarm_topic.arn]\n}\n\nresource \"aws_sns_topic\" \"alarm_topic\" {\n  name = \"alarm-topic\"\n}\n\nresource \"aws_sns_topic_policy\" \"alarm_topic_policy\" {\n  arn    = aws_sns_topic.alarm_topic.arn\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"cloudwatch.amazonaws.com\"\n        }\n        Action    = \"sns:Publish\"\n        Resource  = aws_sns_topic.alarm_topic.arn\n      },\n    ]\n  })\n}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": false,
      "cis_compliant": false,
      "referenced_cis_controls": [],
      "issues": [
        "Terraform syntax validation failed",
        "CIS compliance validation failed",
        "Validation error: \u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 244, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 244:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:root\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 253, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 253:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:role/Admin\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 277, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 277:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:role/S3Access\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 292, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 292:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:role/S3Access\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n"
      ]
    },
    "compliance_report": null,
    "checkov_output_file": null,
    "errors": [
      "Validation error: \u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 244, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 244:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:root\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 253, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 253:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:role/Admin\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 277, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 277:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:role/S3Access\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 292, in resource \"aws_kms_key\" \"s3_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m 292:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:role/S3Access\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n"
    ]
  },
  {
    "query": "Create an encrypted RDS instance with enhanced monitoring",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\n# KMS Key for RDS Encryption\nresource \"aws_kms_key\" \"rds_key\" {\n  description             = \"KMS key for RDS encryption\"\n  deletion_window_in_days = 30\n  enable_key_rotation     = true\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n        }\n        Action   = \"kms:*\"\n        Resource = \"*\"\n      },\n    ]\n  })\n}\n\nresource \"aws_kms_alias\" \"rds_key_alias\" {\n  name          = \"alias/rds_key\"\n  target_key_id = aws_kms_key.rds_key.key_id\n}\n\n# IAM Role for RDS Enhanced Monitoring\nresource \"aws_iam_role\" \"rds_enhanced_monitoring_role\" {\n  name = \"rds-enhanced-monitoring-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"monitoring.rds.amazonaws.com\"\n        }\n        Action = \"sts:AssumeRole\"\n      }\n    ]\n  })\n}\n\nresource \"aws_iam_role_policy_attachment\" \"rds_enhanced_monitoring_policy\" {\n  role       = aws_iam_role.rds_enhanced_monitoring_role.name\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonRDSFullAccess\"\n}\n\n# RDS Parameter Group for Enhanced Monitoring\nresource \"aws_rds_cluster_parameter_group\" \"rds_parameter_group\" {\n  name   = \"rds-parameter-group\"\n  family = \"postgres12\"\n\n  parameter {\n    name  = \"rds.log_retention_period\"\n    value = \"7\"\n  }\n}\n\n# RDS Subnet Group\nresource \"aws_db_subnet_group\" \"rds_subnet_group\" {\n  name       = \"rds-subnet-group\"\n  subnet_ids = [\"subnet-12345678\", \"subnet-87654321\"]\n\n  tags = {\n    Name = \"RDS Subnet Group\"\n  }\n}\n\n# RDS Instance\nresource \"aws_rds_cluster\" \"rds_cluster\" {\n  cluster_identifier      = \"rds-cluster\"\n  engine                  = \"aurora-postgresql\"\n  engine_version          = \"12.4\"\n  master_username         = \"admin\"\n  master_password        = \"YourSecurePassword\"\n  db_subnet_group_name    = aws_db_subnet_group.rds_subnet_group.name\n  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n  storage_encrypted      = true\n  kms_key_id             = aws_kms_key.rds_key.arn\n  enabled_cloudwatch_logs_exports = [\"postgresql\"]\n\n  tags = {\n    Name = \"RDS Cluster\"\n  }\n}\n\nresource \"aws_rds_cluster_instance\" \"rds_instance\" {\n  identifier         = \"rds-instance\"\n  cluster_identifier = aws_rds_cluster.rds_cluster.id\n  instance_class     = \"db.r5.large\"\n  engine             = aws_rds_cluster.rds_cluster.engine\n  engine_version     = aws_rds_cluster.rds_cluster.engine_version\n  publicly_accessible = false\n  monitoring_role_arn = aws_iam_role.rds_enhanced_monitoring_role.arn\n  monitoring_interval = 60\n\n  tags = {\n    Name = \"RDS Instance\"\n  }\n}\n\n# Security Group for RDS\nresource \"aws_security_group\" \"rds_sg\" {\n  name        = \"rds-sg\"\n  description = \"Security group for RDS\"\n  vpc_id      = \"vpc-12345678\"\n\n  ingress {\n    from_port   = 5432\n    to_port     = 5432\n    protocol    = \"tcp\"\n    cidr_blocks = [\"10.0.0.0/16\"]\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  tags = {\n    Name = \"RDS Security Group\"\n  }\n}\n\n# CloudWatch Alarm for RDS CPU Utilization\nresource \"aws_cloudwatch_metric_alarm\" \"rds_cpu_alarm\" {\n  alarm_name          = \"rds-cpu-utilization-alarm\"\n  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n  evaluation_periods  = \"2\"\n  metric_name         = \"CPUUtilization\"\n  namespace           = \"AWS/RDS\"\n  period              = \"60\"\n  statistic           = \"Average\"\n  threshold           = \"80\"\n  alarm_description   = \"Alarm when RDS CPU exceeds 80%\"\n  alarm_actions       = [aws_sns_topic.rds_alarm_topic.arn]\n  dimensions = {\n    DBClusterIdentifier = aws_rds_cluster.rds_cluster.id\n  }\n}\n\n# SNS Topic for RDS Alarms\nresource \"aws_sns_topic\" \"rds_alarm_topic\" {\n  name = \"rds-alarm-topic\"\n}\n\n# CloudTrail for Logging\nresource \"aws_cloudtrail\" \"cloudtrail\" {\n  name                          = \"rds-cloudtrail\"\n  s3_bucket_name                = aws_s3_bucket.cloudtrail_bucket.id\n  include_global_service_events = true\n  is_multi_region_trail         = true\n  enable_log_file_validation    = true\n}\n\n# S3 Bucket for CloudTrail Logs\nresource \"aws_s3_bucket\" \"cloudtrail_bucket\" {\n  bucket = \"rds-cloudtrail-logs\"\n\n  tags = {\n    Name = \"RDS CloudTrail Logs\"\n  }\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"AES256\"\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"cloudtrail_bucket\" {\n  bucket = aws_s3_bucket.cloudtrail_bucket.id\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"cloudtrail.amazonaws.com\"\n        }\n        Action = \"s3:GetBucketAcl\"\n        Resource = \"arn:aws:s3:::${aws_s3_bucket.cloudtrail_bucket.id}\"\n      },\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"cloudtrail.amazonaws.com\"\n        }\n        Action = \"s3:PutObject\"\n        Resource = \"arn:aws:s3:::${aws_s3_bucket.cloudtrail_bucket.id}/*\"\n        Condition = {\n          StringEquals = {\n            \"s3:x-amz-acl\" = \"bucket-owner-full-control\"\n          }\n        }\n      }\n    ]\n  })\n}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": false,
      "cis_compliant": false,
      "referenced_cis_controls": [],
      "issues": [
        "Terraform syntax validation failed",
        "CIS compliance validation failed",
        "Validation error: \u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 17, in resource \"aws_kms_key\" \"rds_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  17:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:root\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n"
      ]
    },
    "compliance_report": null,
    "checkov_output_file": null,
    "errors": [
      "Validation error: \u001b[31m\u00e2\u2022\u00b7\u001b[0m\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mReference to undeclared resource\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\u001b[0m  on main.tf line 17, in resource \"aws_kms_key\" \"rds_key\":\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m  17:           AWS = \"arn:aws:iam::${\u001b[4mdata.aws_caller_identity.current\u001b[0m.account_id}:root\"\u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0m\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mA data resource \"aws_caller_identity\" \"current\" has not been declared in\n\u001b[31m\u00e2\u201d\u201a\u001b[0m \u001b[0mthe root module.\n\u001b[31m\u00e2\u2022\u00b5\u001b[0m\u001b[0m\n"
    ]
  }
]