[
  {
    "query": "How do I create an S3 bucket with versioning and encryption that complies with CIS benchmarks?",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\nresource \"aws_s3_bucket\" \"secure_bucket\" {\n  bucket = \"my-secure-bucket\"\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"aws:kms\"\n      kms_master_key_id = aws_kms_key.s3_key.arn\n    }\n  }\n}\n\nresource \"aws_kms_key\" \"s3_key\" {\n  description             = \"KMS key for S3 bucket encryption\"\n  deletion_window_in_days = 30\n  enable_key_rotation     = true\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"\n        }\n        Action = \"kms:*\"\n        Resource = \"*\"\n      },\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"s3.amazonaws.com\"\n        }\n        Action = [\n          \"kms:Encrypt\",\n          \"kms:Decrypt\",\n          \"kms:ReEncrypt*\",\n          \"kms:GenerateDataKey*\",\n          \"kms:DescribeKey\"\n        ]\n        Resource = \"*\"\n        Condition = {\n          StringEquals = {\n            \"aws:SourceArn\": \"arn:aws:s3:::my-secure-bucket\"\n          }\n        }\n      }\n    ]\n  })\n}\n\nresource \"aws_s3_bucket_policy\" \"secure_bucket\" {\n  bucket = aws_s3_bucket.secure_bucket.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Deny\"\n        Principal = \"*\"\n        Action = \"s3:*\"\n        Resource = [\n          \"arn:aws:s3:::my-secure-bucket\",\n          \"arn:aws:s3:::my-secure-bucket/*\"\n        ]\n        Condition = {\n          Bool = {\n            \"aws:SecureTransport\": \"false\"\n          }\n        }\n      }\n    ]\n  })\n}\n\ndata \"aws_caller_identity\" \"current\" {}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": true,
      "cis_compliant": false,
      "referenced_cis_controls": [],
      "issues": [
        "CIS compliance validation failed",
        "CIS compliance check error: cannot access local variable 'datetime' where it is not associated with a value"
      ]
    },
    "compliance_report": null,
    "checkov_output_file": null,
    "errors": [
      "CIS compliance check error: cannot access local variable 'datetime' where it is not associated with a value"
    ]
  },
  {
    "query": "Create IAM roles with least privilege access following CIS security controls",
    "terraform_code": "```hcl\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n\n# Variables\nvariable \"bucket_name\" {\n  description = \"The name of the S3 bucket\"\n  default     = \"my-secure-bucket\"\n}\n\nvariable \"kms_key_alias\" {\n  description = \"The alias for the KMS key\"\n  default     = \"my-kms-key\"\n}\n\n# IAM Role with Least Privilege Access\nresource \"aws_iam_role\" \"example_role\" {\n  name = \"example-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"ec2.amazonaws.com\"\n        }\n        Action = \"sts:AssumeRole\"\n      }\n    ]\n  })\n\n  tags = {\n    Name = \"example-role\"\n  }\n}\n\nresource \"aws_iam_policy\" \"example_policy\" {\n  name        = \"example-policy\"\n  description = \"Policy for example role\"\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Action = [\n          \"s3:ListBucket\",\n          \"s3:GetObject\"\n        ]\n        Resource = [\n          \"arn:aws:s3:::${var.bucket_name}\",\n          \"arn:aws:s3:::${var.bucket_name}/*\"\n        ]\n      }\n    ]\n  })\n}\n\nresource \"aws_iam_role_policy_attachment\" \"example_attachment\" {\n  role       = aws_iam_role.example_role.name\n  policy_arn = aws_iam_policy.example_policy.arn\n}\n\n# KMS Key\nresource \"aws_kms_key\" \"example_key\" {\n  description             = \"Example KMS key\"\n  deletion_window_in_days = 30\n  enable_key_rotation     = true\n}\n\nresource \"aws_kms_alias\" \"example_alias\" {\n  name          = var.kms_key_alias\n  target_key_id = aws_kms_key.example_key.key_id\n}\n\n# S3 Bucket\nresource \"aws_s3_bucket\" \"example_bucket\" {\n  bucket = var.bucket_name\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"example_block\" {\n  bucket = aws_s3_bucket.example_bucket.id\n\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n\nresource \"aws_s3_bucket_versioning\" \"example_versioning\" {\n  bucket = aws_s3_bucket.example_bucket.id\n\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"example_encryption\" {\n  bucket = aws_s3_bucket.example_bucket.id\n\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = \"aws:kms\"\n      kms_master_key_id = aws_kms_key.example_key.arn\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"example_policy\" {\n  bucket = aws_s3_bucket.example_bucket.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Effect = \"Allow\"\n        Principal = {\n          AWS = \"*\"\n        }\n        Action = [\n          \"s3:GetObject\",\n          \"s3:ListBucket\"\n        ]\n        Resource = [\n          \"arn:aws:s3:::${var.bucket_name}\",\n          \"arn:aws:s3:::${var.bucket_name}/*\"\n        ]\n        Condition = {\n          StringEquals = {\n            \"aws:PrincipalOrgID\" = \"o-exampleorgid\"\n          }\n        }\n      }\n    ]\n  })\n}\n\n# VPC Flow Logs\nresource \"aws_flow_log\" \"example_flow_log\" {\n  log_destination      = aws_s3_bucket.example_bucket.arn\n  log_destination_type = \"s3\"\n  traffic_type         = \"ALL\"\n  vpc_id               = \"vpc-exampleid\"\n\n  tags = {\n    Name = \"example-flow-log\"\n  }\n}\n\n# CloudTrail\nresource \"aws_cloudtrail\" \"example_trail\" {\n  name                          = \"example-trail\"\n  s3_bucket_name                = aws_s3_bucket.example_bucket.id\n  s3_key_prefix                 = \"cloudtrail\"\n  include_global_service_events = true\n  is_multi_region_trail         = true\n  enable_log_file_validation    = true\n\n  tags = {\n    Name = \"example-trail\"\n  }\n}\n```",
    "referenced_cis_controls": [],
    "validation_summary": {
      "status": "failed",
      "syntax_valid": true,
      "cis_compliant": false,
      "referenced_cis_controls": [],
      "issues": [
        "CIS compliance validation failed",
        "CIS compliance check error: cannot access local variable 'datetime' where it is not associated with a value"
      ]
    },
    "compliance_report": null,
    "checkov_output_file": null,
    "errors": [
      "CIS compliance check error: cannot access local variable 'datetime' where it is not associated with a value"
    ]
  }
]