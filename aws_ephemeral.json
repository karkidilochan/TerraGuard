[
    {
        "title": "AWS: aws_cognito_identity_openid_token_for_developer_identity",
        "description": "Terraform ephemeral resource for managing an AWS Cognito Identity Open ID Token for Developer Identity.",
        "resource_name": "",
        "metadata": {
            "subcategory": "Cognito Identity",
            "layout": "aws",
            "page_title": "AWS: aws_cognito_identity_openid_token_for_developer_identity",
            "description": "Terraform ephemeral resource for managing an AWS Cognito Identity Open ID Token for Developer Identity."
        },
        "sections": {
            "main": "# Ephemeral: aws_cognito_identity_openid_token_for_developer_identity\n\nTerraform ephemeral resource for managing an AWS Cognito Identity Open ID Token for Developer Identity.\n\n~> Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n",
            "Example Usage": "\n### Basic Usage\n\n```terraform\ndata \"aws_cognito_identity_pool\" \"example\" {\n  identity_pool_name = \"test pool\"\n}\n\nephemeral \"aws_cognito_identity_openid_token_for_developer_identity\" \"example\" {\n  identity_pool_id = data.aws_cognito_identity_pool.example.id\n  logins = {\n    \"login.mycompany.myapp\" : \"USER_IDENTIFIER\"\n  }\n}\n```\n",
            "Argument Reference": "\nThe following arguments are required:\n\n* `identity_pool_id` - (Required) An identity pool ID in the format REGION:GUID.\n\nThe following arguments are optional:\n\n* `identity_id` - (Optional) A unique identifier in the format REGION:GUID.\n\n* `logins` - (Optional) A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax `\"developer_provider_name\": \"developer_user_identifier\"`. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.\n\n* `principal_tags` - (Optional) Use this operation to configure attribute mappings for custom providers.\n\n* `token_duration` - (Optional) The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `token` - An OpenID token."
        },
        "full_content": "# Ephemeral: aws_cognito_identity_openid_token_for_developer_identity\n\nTerraform ephemeral resource for managing an AWS Cognito Identity Open ID Token for Developer Identity.\n\n~> Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_cognito_identity_pool\" \"example\" {\n  identity_pool_name = \"test pool\"\n}\n\nephemeral \"aws_cognito_identity_openid_token_for_developer_identity\" \"example\" {\n  identity_pool_id = data.aws_cognito_identity_pool.example.id\n  logins = {\n    \"login.mycompany.myapp\" : \"USER_IDENTIFIER\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `identity_pool_id` - (Required) An identity pool ID in the format REGION:GUID.\n\nThe following arguments are optional:\n\n* `identity_id` - (Optional) A unique identifier in the format REGION:GUID.\n\n* `logins` - (Optional) A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax `\"developer_provider_name\": \"developer_user_identifier\"`. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.\n\n* `principal_tags` - (Optional) Use this operation to configure attribute mappings for custom providers.\n\n* `token_duration` - (Optional) The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `token` - An OpenID token."
    },
    {
        "title": "AWS: aws_eks_cluster_auth",
        "description": "Retrieve an authentication token to communicate with an EKS cluster.",
        "resource_name": "",
        "metadata": {
            "subcategory": "EKS (Elastic Kubernetes)",
            "layout": "aws",
            "page_title": "AWS: aws_eks_cluster_auth",
            "description": "Retrieve an authentication token to communicate with an EKS cluster."
        },
        "sections": {
            "main": "# Ephemeral: aws_eks_cluster_auth\n\nRetrieve an authentication token to communicate with an EKS cluster.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n",
            "Example Usage": "\n```terraform\nephemeral \"aws_eks_cluster_auth\" \"example\" {\n  name = data.aws_eks_cluster.example.id\n}\n\nprovider \"kubernetes\" {\n  host                   = data.aws_eks_cluster.example.endpoint\n  cluster_ca_certificate = base64decode(data.aws_eks_cluster.example.certificate_authority[0].data)\n  token                  = ephemeral.aws_eks_cluster_auth.example.token\n}\n\nprovider \"helm\" {\n  kubernetes {\n    host                   = data.aws_eks_cluster.example.endpoint\n    cluster_ca_certificate = base64decode(data.aws_eks_cluster.example.certificate_authority[0].data)\n    token                  = ephemeral.aws_eks_cluster_auth.example.token\n  }\n}\n```\n",
            "Argument Reference": "\n* `name` - (Required) Name of the EKS cluster.\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `token` - Token to use to authenticate with the cluster."
        },
        "full_content": "# Ephemeral: aws_eks_cluster_auth\n\nRetrieve an authentication token to communicate with an EKS cluster.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n## Example Usage\n\n```terraform\nephemeral \"aws_eks_cluster_auth\" \"example\" {\n  name = data.aws_eks_cluster.example.id\n}\n\nprovider \"kubernetes\" {\n  host                   = data.aws_eks_cluster.example.endpoint\n  cluster_ca_certificate = base64decode(data.aws_eks_cluster.example.certificate_authority[0].data)\n  token                  = ephemeral.aws_eks_cluster_auth.example.token\n}\n\nprovider \"helm\" {\n  kubernetes {\n    host                   = data.aws_eks_cluster.example.endpoint\n    cluster_ca_certificate = base64decode(data.aws_eks_cluster.example.certificate_authority[0].data)\n    token                  = ephemeral.aws_eks_cluster_auth.example.token\n  }\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) Name of the EKS cluster.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `token` - Token to use to authenticate with the cluster."
    },
    {
        "title": "AWS: aws_kms_secrets",
        "description": "Decrypt multiple secrets from data encrypted with the AWS KMS service",
        "resource_name": "",
        "metadata": {
            "subcategory": "KMS (Key Management)",
            "layout": "aws",
            "page_title": "AWS: aws_kms_secrets",
            "description": "Decrypt multiple secrets from data encrypted with the AWS KMS service"
        },
        "sections": {
            "main": "# Ephemeral: aws_kms_secrets\n\nDecrypt multiple secrets from data encrypted with the AWS KMS service.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n",
            "Example Usage": "\nIf you do not already have a `CiphertextBlob` from encrypting a KMS secret, you can use the below commands to obtain one using the [AWS CLI kms encrypt](https://docs.aws.amazon.com/cli/latest/reference/kms/encrypt.html) command. This requires you to have your AWS CLI setup correctly and replace the `--key-id` with your own. Alternatively you can use `--plaintext 'master-password'` (CLIv1) or `--plaintext fileb://<(echo -n 'master-password')` (CLIv2) instead of reading from a file.\n\n-> If you have a newline character at the end of your file, it will be decrypted with this newline character intact. For most use cases this is undesirable and leads to incorrect passwords or invalid values, as well as possible changes in the plan. Be sure to use `echo -n` if necessary.\n-> If you are using asymmetric keys ensure you are using the right encryption algorithm when you encrypt and decrypt else you will get IncorrectKeyException during the decrypt phase.\n\nThat encrypted output can now be inserted into Terraform configurations without exposing the plaintext secret directly.\n\n```terraform\nephemeral \"aws_kms_secrets\" \"example\" {\n  secret {\n    # ... potentially other configuration ...\n    name    = \"master_password\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n\n    context = {\n      foo = \"bar\"\n    }\n  }\n\n  secret {\n    # ... potentially other configuration ...\n    name    = \"master_username\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n  }\n}\n\nresource \"aws_rds_cluster\" \"example\" {\n  # ... other configuration ...\n  master_password = data.aws_kms_secrets.example.plaintext[\"master_password\"]\n  master_username = data.aws_kms_secrets.example.plaintext[\"master_username\"]\n}\n\nephemeral \"aws_kms_secrets\" \"example\" {\n  secret {\n    # ... potentially other configuration ...\n    name    = \"app_specific_secret\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n    # ... Use same algorithm used to Encrypt the payload ...\n    encryption_algorithm = \"RSAES_OAEP_SHA_256\"\n    key_id               = \"ab123456-c012-4567-890a-deadbeef123\"\n  }\n}\n```\n",
            "Argument Reference": "\nThis resource supports the following arguments:\n\n* `secret` - (Required) One or more encrypted payload definitions from the KMS service. See the Secret Definitions below.\n\n### Secret Definitions\n\nEach `secret` supports the following arguments:\n\n* `name` - (Required) Name to export this secret under in the attributes.\n* `payload` - (Required) Base64 encoded payload, as returned from a KMS encrypt operation.\n* `context` - (Optional) An optional mapping that makes up the Encryption Context for the secret.\n* `grant_tokens` (Optional) An optional list of Grant Tokens for the secret.\n* `encryption_algorithm` - (Optional) The encryption algorithm that will be used to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key. Valid Values: SYMMETRIC_DEFAULT | RSAES_OAEP_SHA_1 | RSAES_OAEP_SHA_256 | SM2PKE\n* `key_id` (Optional) Specifies the KMS key that AWS KMS uses to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key.\n\nFor more information on `context` and `grant_tokens` see the [KMS\nConcepts](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html)\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `plaintext` - Map containing each `secret` `name` as the key with its decrypted plaintext value"
        },
        "full_content": "# Ephemeral: aws_kms_secrets\n\nDecrypt multiple secrets from data encrypted with the AWS KMS service.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n## Example Usage\n\nIf you do not already have a `CiphertextBlob` from encrypting a KMS secret, you can use the below commands to obtain one using the [AWS CLI kms encrypt](https://docs.aws.amazon.com/cli/latest/reference/kms/encrypt.html) command. This requires you to have your AWS CLI setup correctly and replace the `--key-id` with your own. Alternatively you can use `--plaintext 'master-password'` (CLIv1) or `--plaintext fileb://<(echo -n 'master-password')` (CLIv2) instead of reading from a file.\n\n-> If you have a newline character at the end of your file, it will be decrypted with this newline character intact. For most use cases this is undesirable and leads to incorrect passwords or invalid values, as well as possible changes in the plan. Be sure to use `echo -n` if necessary.\n-> If you are using asymmetric keys ensure you are using the right encryption algorithm when you encrypt and decrypt else you will get IncorrectKeyException during the decrypt phase.\n\nThat encrypted output can now be inserted into Terraform configurations without exposing the plaintext secret directly.\n\n```terraform\nephemeral \"aws_kms_secrets\" \"example\" {\n  secret {\n    # ... potentially other configuration ...\n    name    = \"master_password\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n\n    context = {\n      foo = \"bar\"\n    }\n  }\n\n  secret {\n    # ... potentially other configuration ...\n    name    = \"master_username\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n  }\n}\n\nresource \"aws_rds_cluster\" \"example\" {\n  # ... other configuration ...\n  master_password = data.aws_kms_secrets.example.plaintext[\"master_password\"]\n  master_username = data.aws_kms_secrets.example.plaintext[\"master_username\"]\n}\n\nephemeral \"aws_kms_secrets\" \"example\" {\n  secret {\n    # ... potentially other configuration ...\n    name    = \"app_specific_secret\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n    # ... Use same algorithm used to Encrypt the payload ...\n    encryption_algorithm = \"RSAES_OAEP_SHA_256\"\n    key_id               = \"ab123456-c012-4567-890a-deadbeef123\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `secret` - (Required) One or more encrypted payload definitions from the KMS service. See the Secret Definitions below.\n\n### Secret Definitions\n\nEach `secret` supports the following arguments:\n\n* `name` - (Required) Name to export this secret under in the attributes.\n* `payload` - (Required) Base64 encoded payload, as returned from a KMS encrypt operation.\n* `context` - (Optional) An optional mapping that makes up the Encryption Context for the secret.\n* `grant_tokens` (Optional) An optional list of Grant Tokens for the secret.\n* `encryption_algorithm` - (Optional) The encryption algorithm that will be used to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key. Valid Values: SYMMETRIC_DEFAULT | RSAES_OAEP_SHA_1 | RSAES_OAEP_SHA_256 | SM2PKE\n* `key_id` (Optional) Specifies the KMS key that AWS KMS uses to decrypt the ciphertext. This parameter is required only when the ciphertext was encrypted under an asymmetric KMS key.\n\nFor more information on `context` and `grant_tokens` see the [KMS\nConcepts](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `plaintext` - Map containing each `secret` `name` as the key with its decrypted plaintext value"
    },
    {
        "title": "AWS: aws_lambda_invocation",
        "description": "Invoke AWS Lambda Function",
        "resource_name": "",
        "metadata": {
            "subcategory": "Lambda",
            "layout": "aws",
            "page_title": "AWS: aws_lambda_invocation",
            "description": "Invoke AWS Lambda Function"
        },
        "sections": {
            "main": "# Ephemeral: aws_lambda_invocation\n\nUse this ephemeral resource to invoke a Lambda function. The lambda function is invoked with the [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax) invocation type.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n~> **NOTE:** The `aws_lambda_invocation` ephemeral resource invokes the function during every `plan` and `apply` when the function is known. A common use case for this functionality is when invoking a lightweight function\u2014where repeated invocations are acceptable\u2014that produces sensitive information you do not want to store in the state.\n\n~> **NOTE:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking an [`aws_lambda_function`](/docs/providers/aws/r/lambda_function.html) with environment variables, the IAM role associated with the function may have been deleted and recreated _after_ the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role, or 2) by using Terraform to `taint` the function and `apply` your configuration again to recreate the function. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)\n",
            "Example Usage": "\n### Basic Example\n\n```terraform\nephemeral \"aws_lambda_invocation\" \"example\" {\n  function_name = aws_lambda_function.lambda_function_test.function_name\n\n  payload = jsonencode({\n    key1 = \"value1\"\n    key2 = \"value2\"\n  })\n}\n\noutput \"result_entry\" {\n  value     = jsondecode(aws_lambda_invocation.example.result)[\"key1\"]\n  ephemeral = true\n}\n```\n",
            "Argument Reference": "\nThe following arguments are required:\n\n* `function_name` - (Required) Name or ARN of the Lambda function, version, or alias. You can append a version number or alias. If you specify only the function name, it is limited to 64 characters in length.\n* `payload` - (Required) JSON that you want to provide to your Lambda function as input.\n\nThe following arguments are optional:\n\n* `client_context` - (Optional) Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context object.\n* `log_type` - (Optional) Set to `Tail` to include the execution log in the response. Valid values are `None` and `Tail`.\n* `qualifier` - (Optional) Version or alias to invoke a published version of the function. Defaults to `$LATEST`.\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `executed_version` - Version of the function that executed. When you invoke a function with an alias, the version the alias resolved to.\n* `function_error` - If present, indicates that an error occurred during function execution. Details about the error are included in `result`.\n* `log_result` - Last 4 KB of the execution log, which is base64-encoded.\n* `result` - String result of the lambda function invocation.\n* `status_code` - HTTP status code is in the 200 range for a successful request."
        },
        "full_content": "# Ephemeral: aws_lambda_invocation\n\nUse this ephemeral resource to invoke a Lambda function. The lambda function is invoked with the [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax) invocation type.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n~> **NOTE:** The `aws_lambda_invocation` ephemeral resource invokes the function during every `plan` and `apply` when the function is known. A common use case for this functionality is when invoking a lightweight function\u2014where repeated invocations are acceptable\u2014that produces sensitive information you do not want to store in the state.\n\n~> **NOTE:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking an [`aws_lambda_function`](/docs/providers/aws/r/lambda_function.html) with environment variables, the IAM role associated with the function may have been deleted and recreated _after_ the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role, or 2) by using Terraform to `taint` the function and `apply` your configuration again to recreate the function. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)\n\n## Example Usage\n\n### Basic Example\n\n```terraform\nephemeral \"aws_lambda_invocation\" \"example\" {\n  function_name = aws_lambda_function.lambda_function_test.function_name\n\n  payload = jsonencode({\n    key1 = \"value1\"\n    key2 = \"value2\"\n  })\n}\n\noutput \"result_entry\" {\n  value     = jsondecode(aws_lambda_invocation.example.result)[\"key1\"]\n  ephemeral = true\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `function_name` - (Required) Name or ARN of the Lambda function, version, or alias. You can append a version number or alias. If you specify only the function name, it is limited to 64 characters in length.\n* `payload` - (Required) JSON that you want to provide to your Lambda function as input.\n\nThe following arguments are optional:\n\n* `client_context` - (Optional) Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context object.\n* `log_type` - (Optional) Set to `Tail` to include the execution log in the response. Valid values are `None` and `Tail`.\n* `qualifier` - (Optional) Version or alias to invoke a published version of the function. Defaults to `$LATEST`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `executed_version` - Version of the function that executed. When you invoke a function with an alias, the version the alias resolved to.\n* `function_error` - If present, indicates that an error occurred during function execution. Details about the error are included in `result`.\n* `log_result` - Last 4 KB of the execution log, which is base64-encoded.\n* `result` - String result of the lambda function invocation.\n* `status_code` - HTTP status code is in the 200 range for a successful request."
    },
    {
        "title": "AWS: aws_secretsmanager_random_password",
        "description": "Terraform ephemeral resource for managing an AWS Secrets Manager Random Password.",
        "resource_name": "",
        "metadata": {
            "subcategory": "Secrets Manager",
            "layout": "aws",
            "page_title": "AWS: aws_secretsmanager_random_password",
            "description": "Terraform ephemeral resource for managing an AWS Secrets Manager Random Password."
        },
        "sections": {
            "main": "# Ephemeral: aws_secretsmanager_random_password\n\nTerraform ephemeral resource for managing an AWS Secrets Manager Random Password.\n",
            "Example Usage": "\n### Basic Usage\n\n```terraform\nephemeral \"aws_secretsmanager_random_password\" \"example\" {}\n```\n",
            "Argument Reference": "\nThe following arguments are optional:\n\n* `exclude_characters` - (Optional) String of the characters that you don't want in the password.\n* `exclude_lowercase` - (Optional) Specifies whether to exclude lowercase letters from the password.\n* `exclude_numbers` - (Optional) Specifies whether to exclude numbers from the password.\n* `exclude_punctuation` - (Optional) Specifies whether to exclude the following punctuation characters from the password: ``! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~ .``\n* `exclude_uppercase` - (Optional) Specifies whether to exclude uppercase letters from the password.\n* `include_space` - (Optional) Specifies whether to include the space character.\n* `password_length` - (Optional) Length of the password.\n* `require_each_included_type` - (Optional) Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation.\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `random_password` - Random password."
        },
        "full_content": "# Ephemeral: aws_secretsmanager_random_password\n\nTerraform ephemeral resource for managing an AWS Secrets Manager Random Password.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nephemeral \"aws_secretsmanager_random_password\" \"example\" {}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `exclude_characters` - (Optional) String of the characters that you don't want in the password.\n* `exclude_lowercase` - (Optional) Specifies whether to exclude lowercase letters from the password.\n* `exclude_numbers` - (Optional) Specifies whether to exclude numbers from the password.\n* `exclude_punctuation` - (Optional) Specifies whether to exclude the following punctuation characters from the password: ``! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~ .``\n* `exclude_uppercase` - (Optional) Specifies whether to exclude uppercase letters from the password.\n* `include_space` - (Optional) Specifies whether to include the space character.\n* `password_length` - (Optional) Length of the password.\n* `require_each_included_type` - (Optional) Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `random_password` - Random password."
    },
    {
        "title": "AWS: aws_secretsmanager_secret_version",
        "description": "Retrieve information about a Secrets Manager secret version including its secret value",
        "resource_name": "",
        "metadata": {
            "subcategory": "Secrets Manager",
            "layout": "aws",
            "page_title": "AWS: aws_secretsmanager_secret_version",
            "description": "Retrieve information about a Secrets Manager secret version including its secret value"
        },
        "sections": {
            "main": "# Ephemeral: aws_secretsmanager_secret_version\n\nRetrieve information about a Secrets Manager secret version, including its secret value. To retrieve secret metadata, see the [`aws_secretsmanager_secret` data source](/docs/providers/aws/d/secretsmanager_secret.html).\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n",
            "Example Usage": "\n### Retrieve Current Secret Version\n\nBy default, this ephemeral resource retrieves information based on the `AWSCURRENT` staging label.\n\n```terraform\nephemeral \"aws_secretsmanager_secret_version\" \"example\" {\n  secret_id = data.aws_secretsmanager_secret.example.id\n}\n```\n\n### Retrieve Specific Secret Version\n\n```terraform\nephemeral \"aws_secretsmanager_secret_version\" \"by-version-stage\" {\n  secret_id     = data.aws_secretsmanager_secret.example.id\n  version_stage = \"example\"\n}\n```\n\n### Handling Key-Value Secret Strings in JSON\n\nReading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the [`jsondecode()` function](https://www.terraform.io/docs/configuration/functions/jsondecode.html):\n\n```terraform\noutput \"example\" {\n  value = ephemeral.aws_secretsmanager_secret_version.example.secret_string[\"key1\"]\n}\n```\n",
            "Argument Reference": "\n* `secret_id` - (Required) Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.\n* `version_id` - (Optional) Specifies the unique identifier of the version of the secret that you want to retrieve. Overrides `version_stage`.\n* `version_stage` - (Optional) Specifies the secret version that you want to retrieve by the staging label attached to the version. Defaults to `AWSCURRENT`.\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the secret.\n* `created_date` - Created date of the secret in UTC.\n* `id` - Unique identifier of this version of the secret.\n* `secret_string` - Decrypted part of the protected secret information that was originally provided as a string.\n* `secret_binary` - Decrypted part of the protected secret information that was originally provided as a binary.\n* `version_id` - Unique identifier of this version of the secret."
        },
        "full_content": "# Ephemeral: aws_secretsmanager_secret_version\n\nRetrieve information about a Secrets Manager secret version, including its secret value. To retrieve secret metadata, see the [`aws_secretsmanager_secret` data source](/docs/providers/aws/d/secretsmanager_secret.html).\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n## Example Usage\n\n### Retrieve Current Secret Version\n\nBy default, this ephemeral resource retrieves information based on the `AWSCURRENT` staging label.\n\n```terraform\nephemeral \"aws_secretsmanager_secret_version\" \"example\" {\n  secret_id = data.aws_secretsmanager_secret.example.id\n}\n```\n\n### Retrieve Specific Secret Version\n\n```terraform\nephemeral \"aws_secretsmanager_secret_version\" \"by-version-stage\" {\n  secret_id     = data.aws_secretsmanager_secret.example.id\n  version_stage = \"example\"\n}\n```\n\n### Handling Key-Value Secret Strings in JSON\n\nReading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the [`jsondecode()` function](https://www.terraform.io/docs/configuration/functions/jsondecode.html):\n\n```terraform\noutput \"example\" {\n  value = ephemeral.aws_secretsmanager_secret_version.example.secret_string[\"key1\"]\n}\n```\n\n## Argument Reference\n\n* `secret_id` - (Required) Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.\n* `version_id` - (Optional) Specifies the unique identifier of the version of the secret that you want to retrieve. Overrides `version_stage`.\n* `version_stage` - (Optional) Specifies the secret version that you want to retrieve by the staging label attached to the version. Defaults to `AWSCURRENT`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the secret.\n* `created_date` - Created date of the secret in UTC.\n* `id` - Unique identifier of this version of the secret.\n* `secret_string` - Decrypted part of the protected secret information that was originally provided as a string.\n* `secret_binary` - Decrypted part of the protected secret information that was originally provided as a binary.\n* `version_id` - Unique identifier of this version of the secret."
    },
    {
        "title": "AWS: aws_ssm_parameter",
        "description": "Retrieve information about an SSM parameter, including its value. To retrieve parameter metadata, see the `aws_ssm_parameter` data source.",
        "resource_name": "",
        "metadata": {
            "subcategory": "SSM (Systems Manager)",
            "layout": "aws",
            "page_title": "AWS: aws_ssm_parameter",
            "description": "Retrieve information about an SSM parameter, including its value. To retrieve parameter metadata, see the `aws_ssm_parameter` data source."
        },
        "sections": {
            "main": "# Ephemeral: aws_ssm_parameter\n\nRetrieve information about an SSM parameter, including its value.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n",
            "Example Usage": "\n### Retrieve an SSM parameter\n\nBy default, this ephemeral resource attempts to return decrypted values for secure string parameters.\n\n```terraform\nephemeral \"aws_ssm_parameter\" \"example\" {\n  arn = aws_ssm_parameter.example.arn\n}\n```\n",
            "Argument Reference": "\n* `arn` - (Required) The Amazon Resource Name (ARN) of the parameter that you want to query\n* `with_decryption` - (Optional) Return decrypted values for a secure string parameter (Defaults to `true`).\n",
            "Attribute Reference": "\nThis resource exports the following attributes in addition to the arguments above:\n\n* `name` - The name of the parameter.\n* `type` - The type of parameter.\n* `value` - The parameter value.\n* `version` - The parameter version.\n* `with_decryption` - Indicates whether the secure string parameters were decrypted."
        },
        "full_content": "# Ephemeral: aws_ssm_parameter\n\nRetrieve information about an SSM parameter, including its value.\n\n~> **NOTE:** Ephemeral resources are a new feature and may evolve as we continue to explore their most effective uses. [Learn more](https://developer.hashicorp.com/terraform/language/v1.10.x/resources/ephemeral).\n\n## Example Usage\n\n### Retrieve an SSM parameter\n\nBy default, this ephemeral resource attempts to return decrypted values for secure string parameters.\n\n```terraform\nephemeral \"aws_ssm_parameter\" \"example\" {\n  arn = aws_ssm_parameter.example.arn\n}\n```\n\n## Argument Reference\n\n* `arn` - (Required) The Amazon Resource Name (ARN) of the parameter that you want to query\n* `with_decryption` - (Optional) Return decrypted values for a secure string parameter (Defaults to `true`).\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `name` - The name of the parameter.\n* `type` - The type of parameter.\n* `value` - The parameter value.\n* `version` - The parameter version.\n* `with_decryption` - Indicates whether the secure string parameters were decrypted."
    }
]